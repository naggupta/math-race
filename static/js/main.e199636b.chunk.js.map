{"version":3,"sources":["components/PlayerSection/PlayerSection.module.css","components/RaceSetup/RaceSetup.module.css","UI/DisplayMessage/DisplayMessage.module.css","containers/RaceWrapper/RaceWrapper.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","serviceWorker.js","Utils/QuestionGenerator.js","components/RaceSetup/RaceSetup.js","store/game/actions/actions.js","store/game/actions/actionTypes.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","components/PlayerSection/PlayerSection.js","components/RaceComplete/RaceComplete.js","containers/RaceWrapper/RaceWrapper.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js","components/RaceComplete/RaceComplete.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","generateQuestion","questiontype","currentnumber","question","answer","nos","digits","decimals","totaldigits","i","sign","randomSign","tonumber","fromnumber","randomIntFromInterval","min","max","Math","floor","random","round","RaceSetup","props","handleSubmit","e","preventDefault","form","player1","player2","numbers","type","points","value","start","this","players","name","onSubmit","ref","style","textAlign","className","Classes","defaultChecked","join","PureComponent","connect","game","dispatch","playername1","playername2","id","wrong","Utils","answerresult","ReducerActions","DisplayMessage","Backdrop","show","classes","onClick","clicked","onKeyPress","role","tabIndex","Modal","modelClosed","transform","opacity","children","PlayerSection","closedisplay","buttonTheme","playerno","sectionTheme","goClick","player","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","totalpoints","complete","classList","remove","ShowQuestion","add","MessageAnimate","HideQuestion","setTimeout","nextQuestion","wrongAnswer","appendAnswer","val","slice","React","createRef","messagedisplay","Correct","margin","Wrong","_0","_1","setState","reset","PlayerCharacter","position","transition","left","alt","_2","height","width","src","process","QuestionBar","PlayerName","Question","fontSize","onKeyDown","onKeyUp","maxLength","Answer","Score","color","Close","ButtonBar","data-playerno","BtnNumber","currentTarget","dataset","BtnGo","getstate","RaceComplete","winner","reverse","map","score","key","RaceWrapper","nextProps","newState","starttime","endtime","index","backgroundImage","Component","Layout","path","component","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e199636b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"PlayerSection__0__16GFq\",\"_1\":\"PlayerSection__1__1EQA8\",\"PlayerCharacter\":\"PlayerSection_PlayerCharacter__118mI\",\"QuestionBar\":\"PlayerSection_QuestionBar__K1Czx\",\"Question\":\"PlayerSection_Question__3Ac7J\",\"Close\":\"PlayerSection_Close__1gOHI\",\"ButtonBar\":\"PlayerSection_ButtonBar__2tk7H\",\"Answer\":\"PlayerSection_Answer__1JQjr\",\"BtnGo\":\"PlayerSection_BtnGo__No7ze\",\"BtnNumber\":\"PlayerSection_BtnNumber__kbZb7\",\"HideQuestion\":\"PlayerSection_HideQuestion__2Rf4I\",\"hide-question\":\"PlayerSection_hide-question___kcKy\",\"ShowQuestion\":\"PlayerSection_ShowQuestion__PJYlO\",\"show-question\":\"PlayerSection_show-question__1c6wT\",\"DisplayMessage\":\"PlayerSection_DisplayMessage__3hzSb\",\"MessageAnimate\":\"PlayerSection_MessageAnimate__1NLY0\",\"hide-animation\":\"PlayerSection_hide-animation__1WCrl\",\"Correct\":\"PlayerSection_Correct__3LiMU\",\"Wrong\":\"PlayerSection_Wrong__l9GG-\",\"points0\":\"PlayerSection_points0__3RGGb\",\"Ò\":\"PlayerSection_Ò__iN7sG\",\"points1\":\"PlayerSection_points1__18mF8\",\"points2\":\"PlayerSection_points2__2M6od\",\"points3\":\"PlayerSection_points3__X6CcJ\",\"points4\":\"PlayerSection_points4__3bNiR\",\"points5\":\"PlayerSection_points5__YsW7z\",\"points6\":\"PlayerSection_points6__2GBKu\",\"points7\":\"PlayerSection_points7__2GXH2\",\"points8\":\"PlayerSection_points8__2T4s2\",\"points9\":\"PlayerSection_points9__3Vkzb\",\"points10\":\"PlayerSection_points10__3q6zW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"RaceSetup_BtnGo__1olAv\",\"BtnNumber\":\"RaceSetup_BtnNumber__1nWwX\",\"RaceSetup\":\"RaceSetup_RaceSetup__2MTWI\",\"Players\":\"RaceSetup_Players__3Mw1p\",\"Options\":\"RaceSetup_Options__3gKGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","export const generateQuestion = (questiontype) => {\n    let currentnumber = 0;\n    let question = '';\n    let answer = 0;\n    const {nos, digits, decimals = 0}=questiontype;\n    const totaldigits = digits + decimals;\n    for (let i = 0; i < nos; i += 1) {\n        const sign = (i === 0 || answer < 10 ** (totaldigits - 1) ? 1 : randomSign());\n\n        let tonumber = (10 ** totaldigits) - 1;\n        const fromnumber = (10 ** (totaldigits - 1)) + 1\n        if (sign < 0 && tonumber > answer) tonumber = answer;\n        // console.log(`${fromnumber},${tonumber}`)\n        currentnumber = randomIntFromInterval(fromnumber, tonumber, decimals);\n        answer += (sign * currentnumber);\n        question = `${question}${currentnumber > 0 && sign > 0 ? (i > 0 ? ' + ' : '') : ' - '}${currentnumber / (decimals === 0 ? 1 : (10 ** decimals))}`;\n    }\n    answer /= (decimals === 0 ? 1 : (10 ** decimals));\n    console.log(`${question} ? ${answer}`)\n    return {\n        question: question,\n        answer: answer,\n    }\n}\n\nconst randomIntFromInterval = (min, max, decimals) => { // min and max included \n    // if (decimals === 0)\n    return Math.floor(Math.random() * (max - min + 1) + min);\n    // else {\n    //     const decimalnumber = (10 ** decimals);\n    //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n    //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n    // }\n}\n\nconst randomSign = () => {\n    return Math.round(Math.random()) * 2 - 1;\n}\n","import React, { PureComponent, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport * as ReducerActions from '../../store/game/actions/index'\nimport * as Classes from './RaceSetup.module.css'\n\nclass RaceSetup extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, newState) {\n    //     console.log('[RaceSetup] shouldComponentUpdate', this.props, nextProps);\n    //     return true;\n    // }\n\n    // shouldComponentUpdate(nextProps, newState) {\n    //     return true;\n    // }\n\n    // startGame = () => {\n    //     const questiontype = {\n    //         type: '+-',\n    //         nos: 3,\n    //         numbers: 2,\n    //         decimals: 0,\n    //         points: 10,\n\n    //     };\n    //     this.props.start('Hasana', 'Nanna', questiontype);\n    // }\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { player1, player2, digits, numbers, decimals, type, points } = this.form;\n\n        const questiontype = {\n            type: type.value,\n            nos: +numbers.value,\n            digits: +digits.value,\n            decimals: +decimals.value,\n            points: +points.value,\n\n        };\n\n        console.log(questiontype);\n        this.props.start(player1.value, player2.value, questiontype);\n    }\n\n    // startGame = () => {\n    //     this.props.start();\n    // }\n\n    render() {\n        console.log('[RaceSetup] render');\n\n        const { questiontype } = this.props;\n        const player1 = (this.props.players && this.props.players[1].name) || 'Hasana';\n        const player2 = (this.props.players && this.props.players[0].name) || 'Nanna';\n\n        return (\n            // <div>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked value=\"Male\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n\n            // </div>\n\n            <Fragment>\n                <form onSubmit={this.handleSubmit} ref={(e) => { this.form = e }}>\n                    <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n                    <div className={Classes.RaceSetup}>\n\n                        <div className={Classes.Players}>\n                            <div><h2>Player1</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Hasana\" defaultChecked={player2 === 'Hasana'} />\n                                    <label>Hasana</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Nanna\" defaultChecked={player2 === 'Nanna'} />\n                                    <label>Nanna</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Amma\" defaultChecked={player2 === 'Amma'} />\n                                    <label>Amma</label>\n                                </div>\n                            </div>\n                            <div><h2>Player2</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Hasana\" defaultChecked={player1 === 'Hasana'} />\n                                    <label>Hasana</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Nanna\" defaultChecked={player1 === 'Nanna'} />\n                                    <label>Nanna</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Amma\" defaultChecked={player1 === 'Amma'} />\n                                    <label>Amma</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={Classes.Options}>\n                            <div>\n                                <h2>Type</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"type\" value=\"+-\" defaultChecked=\"true\" />\n                                    <label>+-</label>\n                                </div>\n\n                            </div>\n                            <div>\n                                <h2>Digits</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"1\" defaultChecked={questiontype.digits === 1} />\n                                    <label>1</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"2\" defaultChecked={questiontype.digits === 2} />\n                                    <label>2</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"3\" defaultChecked={questiontype.digits === 3} />\n                                    <label>3</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Numbers</h2>\n                                \n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"2\" defaultChecked={questiontype.nos === 2} />\n                                    <label>2</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"3\" defaultChecked={questiontype.nos === 3} />\n                                    <label>3</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"4\" defaultChecked={questiontype.nos === 4} />\n                                    <label>4</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"5\" defaultChecked={questiontype.nos === 5} />\n                                    <label>5</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Decimals</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                                    <label>0</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                                    <label>1</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                                    <label>2</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Points</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"5\" defaultChecked={questiontype.points === 5} />\n                                    <label>5</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"10\" defaultChecked={questiontype.points === 10} />\n                                    <label>10</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"15\" defaultChecked={questiontype.points === 15} />\n                                    <label>15</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"20\" defaultChecked={questiontype.points === 20} />\n                                    <label>20</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"25\" defaultChecked={questiontype.points === 25} />\n                                    <label>25</label>\n                                </div>\n\n                            </div>\n\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    value=\"Start\"\n                                    // onKeyPress={(e) => this.startGame(e)}\n                                    // onClick={(e) => this.startGame(e)}\n                                    className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n                                >Start &gt;&gt;\n                                </button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    players: state.game.players,\n    questiontype: state.game.questiontype,\n    // starttime: state.game.starttime,\n    // endtime: state.game.endtime,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    // reset: () => dispatch(ReducerActions.reset()),\n    // start: () => dispatch(ReducerActions.start()),\n    start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceSetup)\n","import * as actionTypes from './actionTypes'\nimport * as Utils from '../../../Utils/QuestionGenerator'\n\nexport const reset = () => {\n    return {\n        type: actionTypes.RESET,\n    }\n};\n\nexport const start = (playername1, playername2, questiontype = {\n    type: '+-',\n    nos: 2,\n    digits: 2,\n    decimals: 0,\n    points:10,\n}) => {\n    return {\n        type: actionTypes.START,\n        questiontype: questiontype,\n        players: [{ id: 0, name: playername1, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype), answerresult: '' },\n        { id: 1, name: playername2, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype), answerresult: '' },\n        ],\n    }\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno) => {\n    return (dispatch, getstate) => {\n        // const { nos, digits, decimals } = getstate().game.questiontype;\n        dispatch({\n            type: actionTypes.CORRECT,\n            playerno: playerno,\n            ...Utils.generateQuestion(getstate().game.questiontype),\n        })\n    }\n};\n\nexport const wrongAnswer = (playerno) => {\n    return (dispatch, getstate) => {\n        // const { nos, digits, decimals } = getstate().game.questiontype;\n        dispatch({\n            type: actionTypes.WRONG,\n            playerno: playerno,\n            ...Utils.generateQuestion(getstate().game.questiontype),\n        })\n    }\n};\n\nexport const complete = (playerno) => {\n    return {\n        playerno: playerno,\n        type: actionTypes.COMPLETE,\n    }\n};\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const COMPLETE = 'COMPLETE'; \n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            ></div>\n                            );\n                            \n    return (<Fragment />)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<Fragment />)\n    return (\n        <Fragment>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </Fragment>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './PlayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\n\nclass PlayerSection extends PureComponent {\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', nextProps.players[nextProps.playerno]);\n  //     // return this.props.players[this.props.playerno] !== nextProps.players[nextProps.playerno];\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    console.log('[PlayerSection] componentDidUpdate');\n  }\n\n  buttonTheme = () => {\n    return this.props.playerno === '1'\n      ? 'w3-ripple w3-hover-indigo w3-indigo'\n      : 'w3-ripple w3-hover-red w3-pink';\n  };\n\n  sectionTheme = () => {\n    return this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink';\n  };\n\n  goClick = () => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n    if (!this.inputAnswer.value) return;\n    if (+this.inputAnswer.value === +player.answer) {\n      if (player.points === this.props.totalpoints - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.props.complete(this.props.playerno);\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n    }\n  };\n\n  appendAnswer = (val) => {\n    if (val === '<')\n      this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n    else this.inputAnswer.value += `${val}`;\n  };\n\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log(\n      '[PlayerSection] render',\n      this.props.playerno,\n      player.answerresult,\n      'Points',\n      player.points * (+this.props.questiontype.points - 1),\n    );\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div\n          ref={this.correctRef}\n          className={[Classes.DisplayMessage, Classes.Correct].join(' ')}\n        >\n          <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n        </div>\n        <div\n          ref={this.wrongRef}\n          className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}\n        >\n          {player.answer}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div\n        className={[this.props.playerno === '0' ? Classes._0 : Classes._1].join(\n          ' ',\n        )}\n      >\n        <Modal\n          show={!!this.state.closedisplay}\n          modelClosed={() => this.setState({ closedisplay: false })}\n        >\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a\n              role=\"button\"\n              onClick={this.props.reset}\n              tabIndex={0}\n              onKeyPress={this.props.reset}\n              style={{ margin: '10px' }}\n              className={[\n                'w3-button',\n                'w3-round-large',\n                this.buttonTheme(),\n              ].join(' ')}\n            >\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <img\n            style={{\n              position: 'absolute',\n              transform: 'scaleX(1)',\n              transition: '1s',\n              left: `${\n                player.points * (90 / +this.props.questiontype.points)\n              }vw`,\n            }}\n            alt={this.props.playerno}\n            className={[\n              Classes.PlayerCharacter,\n              this.props.playerno === 1 ? Classes._1 : Classes._2,\n            ].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          />\n        </div>\n        <div className={Classes.QuestionBar}>\n          <span className={[this.sectionTheme()].join(' ')}>\n            <span className={[Classes.PlayerName].join(' ')}>\n              {player.name}\n            </span>\n          </span>\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <span ref={this.questionRef} className={Classes.Question}>\n            <span style={{ fontSize: '3em' }}>{`${player.question}?`}</span>\n            <input\n              ref={(e) => {\n                this.inputAnswer = e;\n              }}\n              onKeyDown={() => false}\n              onKeyPress={() => false}\n              onKeyUp={() => false}\n              type=\"text\"\n              maxLength=\"7\"\n              className={[\n                'w3-btn',\n                'w3-round-large',\n                this.sectionTheme(),\n                Classes.Answer,\n              ].join(' ')}\n            />\n          </span>\n          <span\n            style={{ position: 'relative' }}\n            className={[this.sectionTheme()].join(' ')}\n          >\n            <span className={['fa-stack', Classes.Score].join(' ')}>\n              <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n              <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                {player.points}\n              </strong>\n            </span>\n            <div>\n              <a\n                role=\"button\"\n                onClick={() => this.setState({ closedisplay: true })}\n                tabIndex={0}\n                onKeyPress={() => this.setState({ closedisplay: true })}\n                className={Classes.Close}\n              >\n                <i className=\"fa fa-window-close\" />\n              </a>\n            </div>\n          </span>\n        </div>\n        <div className={Classes.ButtonBar}>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('1')}\n            className={[\n              'w3-button',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            1\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('2')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            2\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('3')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            3\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('4')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            4\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('5')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            5\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('6')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            6\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('7')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            7\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('8')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            8\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('9')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            9\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('0')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            0\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('.')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            .\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('-')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            -\n          </button>\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('<')}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnNumber,\n            ].join(' ')}\n          >\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={[\n              'w3-btn',\n              'w3-round-large',\n              this.buttonTheme(),\n              Classes.BtnGo,\n            ].join(' ')}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  questiontype: state.game.questiontype,\n  totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  complete: (playerno) => dispatch(ReducerActions.complete(playerno)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSection);\n","import React from 'react';\nimport * as Classes from './RaceComplete.module.css';\n\nfunction RaceComplete(props) {\n  const winner = props.players[0].points >= props.players[1].points\n      ? props.players[0].name\n      : props.players[1].name;\n\n  const players = props.players.reverse().map((player) => {\n    const score = +player.points - player.wrong + (winner === player.name ? 10 : 0);\n    return (\n      <div key={player.key}>\n        <h1>\n          {player.name},{' '}\n          {winner === player.name ? 'You won!!' : 'Opps You lost!!'}\n        </h1>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.points}</strong>\n          <span className={Classes.ScoreLabel}>Correct</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{-player.wrong}</strong>\n          <span className={Classes.ScoreLabel}>Wrong</span>\n        </span>\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">\n            {winner === player.name ? 10 : 0}\n          </strong>\n          <span className={Classes.ScoreLabel}>Win Bonus</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{score}</strong>\n          <span className={Classes.ScoreLabel}>Total</span>\n        </span>\n      </div>\n    );\n  });\n  return (\n    <div className={Classes.RaceComplete}>\n      {players}\n      <button\n        type=\"button\"\n        onClick={(e) => props.reset()}\n        onKeyPress={(e) => props.reset()}\n        className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n      >\n        Play Again &gt;&gt;\n      </button>\n    </div>\n  );\n}\n\nexport default RaceComplete;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Race from '../../components/Race/Race';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport RaceSetup from '../../components/RaceSetup/RaceSetup';\nimport PlayerSection from '../../components/PlayerSection/PlayerSection';\nimport * as Classes from './RaceWrapper.module.css';\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\n\nclass RaceWrapper extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[Racewrapper] constructor');\n    this.state = {};\n\n    this.props.reset();\n    // const questiontype = {\n    //     type: '+-',\n    //     nos: 4,\n    //     digits: 3,\n    //     decimals: 0,\n    // };\n    // this.props.init('Nanna', 'Hasana', questiontype);\n    // this.props.start();\n  }\n\n  shouldComponentUpdate(nextProps, newState) {\n    console.log(\n      '[RaceWrapper] shouldComponentUpdate',\n      !this.props.players && nextProps.players,\n    );\n    return (\n      (!this.props.players && nextProps.players)\n      || this.props.starttime !== nextProps.starttime\n      || this.props.endtime !== nextProps.endtime\n    );\n    // return true;\n  }\n\n  render() {\n    console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n\n    if (!this.props.starttime)\n      return (\n        <div className={Classes.Race}>\n          <RaceSetup />\n        </div>\n      );\n    else if (this.props.endtime)\n      return (\n        <div className={Classes.Race}>\n          <RaceComplete players={this.props.players} reset={this.props.reset} />\n        </div>\n      );\n\n    const players = this.props.players.map((player, index) => (\n      <PlayerSection key={player.id} playerno={`${player.id}`} />\n    ));\n    // console.log('[Race] render', this.props.players);\n    return (\n      <div\n        className={Classes.Race}\n        style={{\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/rock.svg), url(${process.env.PUBLIC_URL}/images/underwater.jpg)`,\n        }}\n      >\n        {players}\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n    // return (\n    //         <Race players={this.props.players} />\n    // )\n  }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  starttime: state.game.starttime,\n  endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper'\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\nimport * as actionTypes from '../actionTypes';\n\nconst initialState = {\n    starttime: null,\n    endtime: null,\n    questiontype: {\n        type: '+-',\n        nos: 3,\n        digits: 3,\n        decimals: 0,\n        points:10,\n    },\n    players: null,\n};\n\nconst reducer = (state = initialState, action) => {\n    // console.log(action.type)\n    console.log('[reducer]', action.type)\n    let players = null;\n    switch (action.type) {\n        case actionTypes.RESET:\n            return {\n                ...state,\n                starttime: null,\n                endtime: null,\n                // players: null,\n            };\n        case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n            // action.players.forEach((player, index) => {\n            //     players[index] = { ...players[index], ...player }\n            // });\n            return {\n                ...state,\n                starttime: new Date(),\n                questiontype: action.questiontype,\n                players: [...action.players],\n            };\n        // case actionTypes.START: // players:[{question,answer}]\n        //     players = [...state.players];\n        //     action.players.forEach((player, index) => {\n        //         players[index] = { ...players[index], ...player }\n        //     });\n        //     return {\n        //         ...state, starttime: new Date(), players: players,\n        //     };\n        case actionTypes.CORRECT:\n            players = [...state.players];\n            players[action.playerno].points += 1;\n            players[action.playerno].question = action.question;\n            players[action.playerno].answer = action.answer;\n            players[action.playerno].answerresult = 'CORRECT';\n            return {\n                ...state, players: [...players],\n            };\n        case actionTypes.WRONG:\n            players = [...state.players];\n            players[action.playerno].wrong += 1;\n            players[action.playerno].question = action.question;\n            players[action.playerno].answer = action.answer;\n            players[action.playerno].answerresult = 'WRONG';\n            return {\n                ...state, players: players,\n            };\n        case actionTypes.COMPLETE:\n            players = [...state.players];\n            players[action.playerno].points += 1;\n            return {\n                ...state, endtime: new Date(), players: [...players],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};"],"sourceRoot":""}