{"version":3,"sources":["components/PlayerSection/PlayerSection.module.css","UI/DisplayMessage/DisplayMessage.module.css","components/RaceSetup/RaceSetup.module.css","containers/RaceWrapper/RaceWrapper.module.css","components/Race/Race.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","serviceWorker.js","Utils/QuestionGenerator.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","components/PlayerSection/PlayerSection.js","store/game/actions/actions.js","store/game/actions/actionTypes.js","components/Race/Race.js","components/RaceSetup/RaceSetup.js","components/RaceComplete/RaceComplete.js","containers/RaceWrapper/RaceWrapper.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js","components/RaceComplete/RaceComplete.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","generateQuestion","questiontype","currentnumber","question","answer","nos","digits","decimals","totaldigits","i","sign","randomSign","tonumber","fromnumber","randomIntFromInterval","min","max","Math","floor","random","round","DisplayMessage","Backdrop","props","show","className","classes","onClick","clicked","onKeyPress","role","tabIndex","Modal","modelClosed","style","transform","opacity","children","PlayerSection","closedisplay","buttonTheme","playerno","sectionTheme","goClick","player","players","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","value","points","totalpoints","complete","classList","remove","Classes","ShowQuestion","add","MessageAnimate","HideQuestion","setTimeout","nextQuestion","wrongAnswer","appendAnswer","val","slice","React","createRef","this","answerresult","messagedisplay","ref","Correct","join","margin","Wrong","_0","_1","setState","reset","PlayerCharacter","position","transition","left","alt","_2","height","width","src","QuestionBar","PlayerName","name","Question","fontSize","Score","color","Close","ButtonBar","type","data-playerno","BtnNumber","e","onKeyDown","onKeyUp","maxLength","Answer","currentTarget","dataset","BtnGo","PureComponent","connect","game","dispatch","getstate","Utils","ReducerActions","Race","RaceSetup","handleSubmit","preventDefault","form","player1","player2","numbers","start","onSubmit","textAlign","defaultChecked","playername1","playername2","id","wrong","RaceComplete","winner","reverse","map","score","key","RaceWrapper","nextProps","newState","starttime","endtime","index","Component","Layout","path","component","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.700a83cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"PlayerSection__0__16GFq\",\"_1\":\"PlayerSection__1__1EQA8\",\"PlayerCharacter\":\"PlayerSection_PlayerCharacter__118mI\",\"QuestionBar\":\"PlayerSection_QuestionBar__K1Czx\",\"Question\":\"PlayerSection_Question__3Ac7J\",\"Close\":\"PlayerSection_Close__1gOHI\",\"ButtonBar\":\"PlayerSection_ButtonBar__2tk7H\",\"Answer\":\"PlayerSection_Answer__1JQjr\",\"BtnGo\":\"PlayerSection_BtnGo__No7ze\",\"BtnNumber\":\"PlayerSection_BtnNumber__kbZb7\",\"HideQuestion\":\"PlayerSection_HideQuestion__2Rf4I\",\"hide-question\":\"PlayerSection_hide-question___kcKy\",\"ShowQuestion\":\"PlayerSection_ShowQuestion__PJYlO\",\"show-question\":\"PlayerSection_show-question__1c6wT\",\"DisplayMessage\":\"PlayerSection_DisplayMessage__3hzSb\",\"MessageAnimate\":\"PlayerSection_MessageAnimate__1NLY0\",\"hide-animation\":\"PlayerSection_hide-animation__1WCrl\",\"Correct\":\"PlayerSection_Correct__3LiMU\",\"Wrong\":\"PlayerSection_Wrong__l9GG-\",\"points0\":\"PlayerSection_points0__3RGGb\",\"Ò\":\"PlayerSection_Ò__iN7sG\",\"points1\":\"PlayerSection_points1__18mF8\",\"points2\":\"PlayerSection_points2__2M6od\",\"points3\":\"PlayerSection_points3__X6CcJ\",\"points4\":\"PlayerSection_points4__3bNiR\",\"points5\":\"PlayerSection_points5__YsW7z\",\"points6\":\"PlayerSection_points6__2GBKu\",\"points7\":\"PlayerSection_points7__2GXH2\",\"points8\":\"PlayerSection_points8__2T4s2\",\"points9\":\"PlayerSection_points9__3Vkzb\",\"points10\":\"PlayerSection_points10__3q6zW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"RaceSetup_BtnGo__1olAv\",\"BtnNumber\":\"RaceSetup_BtnNumber__1nWwX\",\"RaceSetup\":\"RaceSetup_RaceSetup__2MTWI\",\"Players\":\"RaceSetup_Players__3Mw1p\",\"Options\":\"RaceSetup_Options__3gKGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"Race_Race__3Bpk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","export const generateQuestion = (questiontype) => {\n    let currentnumber = 0;\n    let question = '';\n    let answer = 0;\n    const {nos, digits, decimals = 0}=questiontype;\n    const totaldigits = digits + decimals;\n    for (let i = 0; i < nos; i += 1) {\n        const sign = (i === 0 || answer < 10 ** (totaldigits - 1) ? 1 : randomSign());\n\n        let tonumber = (10 ** totaldigits) - 1;\n        const fromnumber = (10 ** (totaldigits - 1)) + 1\n        if (sign < 0 && tonumber > answer) tonumber = answer;\n        // console.log(`${fromnumber},${tonumber}`)\n        currentnumber = randomIntFromInterval(fromnumber, tonumber, decimals);\n        answer += (sign * currentnumber);\n        question = `${question}${currentnumber > 0 && sign > 0 ? (i > 0 ? ' + ' : '') : ' - '}${currentnumber / (decimals === 0 ? 1 : (10 ** decimals))}`;\n    }\n    answer /= (decimals === 0 ? 1 : (10 ** decimals));\n    console.log(`${question} ? ${answer}`)\n    return {\n        question: question,\n        answer: answer,\n    }\n}\n\nconst randomIntFromInterval = (min, max, decimals) => { // min and max included \n    // if (decimals === 0)\n    return Math.floor(Math.random() * (max - min + 1) + min);\n    // else {\n    //     const decimalnumber = (10 ** decimals);\n    //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n    //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n    // }\n}\n\nconst randomSign = () => {\n    return Math.round(Math.random()) * 2 - 1;\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            ></div>\n                            );\n                            \n    return (<Fragment />)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<Fragment />)\n    return (\n        <Fragment>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </Fragment>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import React, { Component, Fragment, PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as ReducerActions from '../../store/game/actions/index'\nimport Classes from './PlayerSection.module.css'\nimport * as Utils from '../../Utils/QuestionGenerator'\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage'\nimport Modal from '../../UI/Modal/Modal'\n\nclass PlayerSection extends PureComponent {\n    state = {\n        // filter: 'ytd',\n        // answer: '',\n        // answerresult: '',\n        closedisplay: false,\n    }\n\n    constructor(props) {\n        super(props);\n        this.correctRef = React.createRef();\n        this.wrongRef = React.createRef();\n        this.questionRef = React.createRef();\n        // this.inputAnswer = React.createRef();\n        // console.log('[PlayerSection] constructor');\n    }\n\n    componentDidMount() {\n        console.log('[PlayerSection] componentDidMount');\n    }\n\n    // shouldComponentUpdate(nextProps, newState) {\n    //     console.log('[PlayerSection] shouldComponentUpdate', nextProps.players[nextProps.playerno]);\n    //     // return this.props.players[this.props.playerno] !== nextProps.players[nextProps.playerno];\n    //     return true;\n    // }\n\n    componentDidUpdate() {\n        console.log('[PlayerSection] componentDidUpdate');\n    }\n\n    buttonTheme = () => {\n        return (this.props.playerno === '1' ? 'w3-ripple w3-hover-indigo w3-indigo' : 'w3-ripple w3-hover-red w3-pink');\n    }\n\n    sectionTheme = () => {\n        return (this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink');\n    }\n\n    goClick = () => {\n        const player = this.props.players[this.props.playerno];\n        const correctref = this.correctRef.current;\n        const questionRef = this.questionRef.current;\n        const wrongref = this.wrongRef.current;\n        if (!this.inputAnswer.value) return;\n        if (+this.inputAnswer.value === +player.answer) {\n            if (player.points === this.props.totalpoints - 1) {\n                // alert(`${player.name} Win`);\n                // this.props.reset();\n                this.props.complete(this.props.playerno)\n                return;\n            }\n            // wrapper.style.visibility = 'true';\n            questionRef.classList.remove(Classes.ShowQuestion);\n            correctref.classList.add(Classes.MessageAnimate);\n            questionRef.classList.add(Classes.HideQuestion);\n            setTimeout(() => {\n                this.props.nextQuestion(this.props.playerno)\n                // this.setState({ answer: '' });\n                this.inputAnswer.value = '';\n                correctref.classList.remove(Classes.MessageAnimate)\n                questionRef.classList.remove(Classes.HideQuestion);\n                questionRef.classList.add(Classes.ShowQuestion);\n            }, 1000);\n        } else {\n            wrongref.classList.add(Classes.MessageAnimate);\n            setTimeout(() => {\n                this.props.wrongAnswer(this.props.playerno);\n                // this.setState({ answer: '' });\n                this.inputAnswer.value = '';\n                wrongref.classList.remove(Classes.MessageAnimate)\n            }, 1000);\n        }\n    }\n\n    appendAnswer = (val) => {\n        if (val === '<')\n            this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n        else\n            this.inputAnswer.value += `${val}`;\n    }\n\n    render() {\n        const player = this.props.players[this.props.playerno];\n        console.log('[PlayerSection] render', this.props.playerno, player.answerresult,'Points',player.points * (+this.props.questiontype.points - 1));\n        // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n        const messagedisplay = (\n            <Fragment>\n                <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                    <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n                </div>\n                <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                    {player.answer}\n                </div>\n            </Fragment>\n        )\n        // this.setState({ answerresult: '' });\n        return (\n            <div className={[(this.props.playerno === '0' ? Classes._0 : Classes._1)].join(' ')}>\n                <Modal show={!!this.state.closedisplay} modelClosed={() => (this.setState({ closedisplay: false }))}>\n                    <span>Do you want to exit the game?</span>\n                    <div>\n                        <a\n                          role=\"button\"\n                          onClick={this.props.reset}\n                          tabIndex={0}\n                          onKeyPress={this.props.reset}\n                          style={{ margin: '10px' }}\n                          className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}\n                        > Restart\n                        </a>\n                        <a\n                          role=\"button\"\n                          onClick={() => (this.setState({ closedisplay: false }))}\n                          tabIndex={0}\n                          onKeyPress={() => (this.setState({ closedisplay: false }))}\n                          style={{ margin: '10px' }}\n                          className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n                        > Cancel\n                        </a>\n                    </div>\n                </Modal>\n                {messagedisplay}\n                <div className={[Classes.PlayerCharacter].join(' ')}>\n                    <img style={{ position: 'absolute', transform: 'scaleX(1)', transition: '1s', left: `${player.points * (90 / +this.props.questiontype.points)}vw` }} alt={this.props.playerno} className={[Classes.PlayerCharacter, (this.props.playerno === 1 ? Classes._1 : Classes._2)].join(' ')} height=\"auto\" width=\"100px\" src={`/images/Fish_${this.props.playerno}.svg`} />\n                </div>\n                <div className={Classes.QuestionBar}>\n                    <span className={[this.sectionTheme()].join(' ')}><span className={[Classes.PlayerName].join(' ')}>{player.name}</span></span>\n                    {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n                    <span ref={this.questionRef} className={Classes.Question}><span style={{ fontSize: '3em' }}>{`${player.question}?`}</span></span>\n                    <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n                        <span className={['fa-stack', Classes.Score].join(' ')}>\n                            <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                            <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                                {player.points}\n                            </strong>\n                        </span>\n                        <div>\n                            <a\n                              role=\"button\"\n                              onClick={() => (this.setState({ closedisplay: true }))}\n                              tabIndex={0}\n                              onKeyPress={() => (this.setState({ closedisplay: true }))}\n                              className={Classes.Close}\n                            >\n                                <i className=\"fa fa-window-close\" />\n                            </a>\n                        </div>\n                    </span>\n                </div>\n                <div className={Classes.ButtonBar}>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>1</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>2</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>3</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>4</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>5</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>6</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>7</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>8</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>9</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>0</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('.')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>.</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>-</button>\n                    <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>&lt;</button>\n                    <input\n                      ref={(e) => { this.inputAnswer = e }}\n                      onKeyDown={() => false}\n                      onKeyPress={() => false}\n                      onKeyUp={() => false}\n                      type=\"text\"\n                      maxLength=\"7\"\n                      className={['w3-btn', 'w3-round-large', this.sectionTheme(), Classes.Answer].join(' ')}\n\n                    />\n                    <button\n                      type=\"button\"\n                      data-playerno={this.props.playerno}\n                      onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n                      className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n                    >GO\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    players: state.game.players,\n    questiontype: state.game.questiontype,\n    totalpoints: state.game.questiontype.points,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    reset: () => dispatch(ReducerActions.reset()),\n    // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n    // start: () => dispatch(ReducerActions.start()),\n    nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n    wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n    complete: (playerno) => dispatch(ReducerActions.complete(playerno)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSection)\n","import * as actionTypes from './actionTypes'\nimport * as Utils from '../../../Utils/QuestionGenerator'\n\nexport const reset = () => {\n    return {\n        type: actionTypes.RESET,\n    }\n};\n\nexport const start = (playername1, playername2, questiontype = {\n    type: '+-',\n    nos: 2,\n    digits: 2,\n    decimals: 0,\n    points:10,\n}) => {\n    return {\n        type: actionTypes.START,\n        questiontype: questiontype,\n        players: [{ id: 0, name: playername1, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype), answerresult: '' },\n        { id: 1, name: playername2, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype), answerresult: '' },\n        ],\n    }\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno) => {\n    return (dispatch, getstate) => {\n        // const { nos, digits, decimals } = getstate().game.questiontype;\n        dispatch({\n            type: actionTypes.CORRECT,\n            playerno: playerno,\n            ...Utils.generateQuestion(getstate().game.questiontype),\n        })\n    }\n};\n\nexport const wrongAnswer = (playerno) => {\n    return (dispatch, getstate) => {\n        // const { nos, digits, decimals } = getstate().game.questiontype;\n        dispatch({\n            type: actionTypes.WRONG,\n            playerno: playerno,\n            ...Utils.generateQuestion(getstate().game.questiontype),\n        })\n    }\n};\n\nexport const complete = (playerno) => {\n    return {\n        playerno: playerno,\n        type: actionTypes.COMPLETE,\n    }\n};\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const COMPLETE = 'COMPLETE'; \n","import React from 'react'\n// import { connect } from 'react-redux'\nimport Classes from './Race.module.css'\nimport PlayerSection from '../PlayerSection/PlayerSection'\n\nfunction Race(props) {\n    const players = props.players.map((player, index) => (\n        <PlayerSection\n          key={player.id}\n          playerno={`${player.id}`}\n        />\n    ));\n    console.log('[Race] render', props.players);\n    return (\n        <div className={Classes.Race}>\n            {players}\n            {/* <div className={Classes.Divider}/> */}\n        </div>\n    )\n}\n\nexport default Race\n","import React, { PureComponent, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport * as ReducerActions from '../../store/game/actions/index'\nimport * as Classes from './RaceSetup.module.css'\n\nclass RaceSetup extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, newState) {\n    //     console.log('[RaceSetup] shouldComponentUpdate', this.props, nextProps);\n    //     return true;\n    // }\n\n    // shouldComponentUpdate(nextProps, newState) {\n    //     return true;\n    // }\n\n    // startGame = () => {\n    //     const questiontype = {\n    //         type: '+-',\n    //         nos: 3,\n    //         numbers: 2,\n    //         decimals: 0,\n    //         points: 10,\n\n    //     };\n    //     this.props.start('Hasana', 'Nanna', questiontype);\n    // }\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { player1, player2, digits, numbers, decimals, type, points } = this.form;\n\n        const questiontype = {\n            type: type.value,\n            nos: +numbers.value,\n            digits: +digits.value,\n            decimals: +decimals.value,\n            points: +points.value,\n\n        };\n\n        console.log(questiontype);\n        this.props.start(player1.value, player2.value, questiontype);\n    }\n\n    // startGame = () => {\n    //     this.props.start();\n    // }\n\n    render() {\n        console.log('[RaceSetup] render');\n\n        const { questiontype } = this.props;\n        const player1 = (this.props.players && this.props.players[0].name) || 'Hasana';\n        const player2 = (this.props.players && this.props.players[1].name) || 'Nanna';\n\n        return (\n            // <div>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked value=\"Male\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n            //     <label>\n            //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name=\"player2\" /> \n            //             Hasana\n            //     </label>\n\n            // </div>\n\n            <Fragment>\n                <form onSubmit={this.handleSubmit} ref={(e) => { this.form = e }}>\n                    <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n                    <div className={Classes.RaceSetup}>\n\n                        <div className={Classes.Players}>\n                            <div><h2>Player1</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Hasana\" defaultChecked={player2 === 'Hasana'} />\n                                    <label>Hasana</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Nanna\" defaultChecked={player2 === 'Nanna'} />\n                                    <label>Nanna</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player2\" value=\"Amma\" defaultChecked={player2 === 'Amma'} />\n                                    <label>Amma</label>\n                                </div>\n                            </div>\n                            <div><h2>Player2</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Hasana\" defaultChecked={player1 === 'Hasana'} />\n                                    <label>Hasana</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Nanna\" defaultChecked={player1 === 'Nanna'} />\n                                    <label>Nanna</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"player1\" value=\"Amma\" defaultChecked={player1 === 'Amma'} />\n                                    <label>Amma</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={Classes.Options}>\n                            <div>\n                                <h2>Type</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"type\" value=\"+-\" defaultChecked=\"true\" />\n                                    <label>+-</label>\n                                </div>\n\n                            </div>\n                            <div>\n                                <h2>Digits</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"1\" defaultChecked={questiontype.digits === 1} />\n                                    <label>1</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"2\" defaultChecked={questiontype.digits === 2} />\n                                    <label>2</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"digits\" value=\"3\" defaultChecked={questiontype.digits === 3} />\n                                    <label>3</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Numbers</h2>\n                                \n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"2\" defaultChecked={questiontype.nos === 2} />\n                                    <label>2</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"3\" defaultChecked={questiontype.nos === 3} />\n                                    <label>3</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"4\" defaultChecked={questiontype.nos === 4} />\n                                    <label>4</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"numbers\" value=\"5\" defaultChecked={questiontype.nos === 5} />\n                                    <label>5</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Decimals</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                                    <label>0</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                                    <label>1</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"decimals\" value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                                    <label>2</label>\n                                </div>\n                            </div>\n                            <div>\n                                <h2>Points</h2>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"5\" defaultChecked={questiontype.points === 5} />\n                                    <label>5</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"10\" defaultChecked={questiontype.points === 10} />\n                                    <label>10</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"15\" defaultChecked={questiontype.points === 15} />\n                                    <label>15</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"20\" defaultChecked={questiontype.points === 20} />\n                                    <label>20</label>\n                                </div>\n                                <div>\n                                    <input type=\"radio\" name=\"points\" value=\"25\" defaultChecked={questiontype.points === 25} />\n                                    <label>25</label>\n                                </div>\n\n                            </div>\n\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    value=\"Start\"\n                                    // onKeyPress={(e) => this.startGame(e)}\n                                    // onClick={(e) => this.startGame(e)}\n                                    className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n                                >Start &gt;&gt;\n                                </button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    players: state.game.players,\n    questiontype: state.game.questiontype,\n    // starttime: state.game.starttime,\n    // endtime: state.game.endtime,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    // reset: () => dispatch(ReducerActions.reset()),\n    // start: () => dispatch(ReducerActions.start()),\n    start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceSetup)\n","import React from 'react'\nimport * as Classes from './RaceComplete.module.css'\n\nfunction RaceComplete(props) {\n    const winner = props.players[0].points >= props.players[1].points ? props.players[0].name : props.players[1].name;\n\n    const players = props.players.reverse().map((player) => {\n        const score = +player.points - player.wrong +  (winner === player.name?10:0)\n        return (\n            <div key={player.key}>\n                <h1>{player.name}, {winner === player.name ? 'You won!!' : 'Opps You lost!!'}</h1>\n                <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                        {player.points}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Correct</span>\n                </span>\n                <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                        {-player.wrong}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Wrong</span>\n                </span>\n                {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n                <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {winner === player.name?10:0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Win Bonous</span>\n                </span>\n                <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                        {score}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Total</span>\n                </span>\n            </div>\n\n        )\n    })\n    return (\n        <div className={Classes.RaceComplete}>\n            {players}\n            <button\n              type=\"button\"\n              onClick={(e) => props.reset()}\n              onKeyPress={(e) => props.reset()}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >Play Again &gt;&gt;\n            </button>\n\n        </div>\n    )\n}\n\nexport default RaceComplete\n","import React, { Component, Fragment } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Race from '../../components/Race/Race'\nimport * as ReducerActions from '../../store/game/actions/index'\nimport RaceSetup from '../../components/RaceSetup/RaceSetup'\nimport PlayerSection from '../../components/PlayerSection/PlayerSection'\nimport * as Classes from './RaceWrapper.module.css'\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\n\nclass RaceWrapper extends Component {\n    constructor(props) {\n        super(props)\n        console.log('[Racewrapper] constructor');\n        this.state = {\n\n        }\n\n        this.props.reset();\n        // const questiontype = {\n        //     type: '+-',\n        //     nos: 4,\n        //     digits: 3,\n        //     decimals: 0,\n        // };\n        // this.props.init('Nanna', 'Hasana', questiontype);\n        // this.props.start();\n    }\n\n    shouldComponentUpdate(nextProps, newState) {\n        console.log('[RaceWrapper] shouldComponentUpdate', !this.props.players && nextProps.players);\n        return (!this.props.players && nextProps.players) || this.props.starttime !== nextProps.starttime\n            || this.props.endtime !== nextProps.endtime;\n        // return true;\n    }\n\n    render() {\n        console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n\n        if (!this.props.starttime)\n            return (<div className={Classes.Race}><RaceSetup /></div>);\n        else if (this.props.endtime)\n            return (<div className={Classes.Race}><RaceComplete players={this.props.players} reset={this.props.reset} /></div>);\n\n        const players = this.props.players.map((player, index) => (\n            <PlayerSection\n                        key={player.id}\n                        playerno={`${player.id}`}\n                    />\n        ));\n        // console.log('[Race] render', this.props.players);\n        return (\n            <div className={Classes.Race}>\n                        {players}\n                        {/* <div className={Classes.Divider}/> */}\n                    </div>\n        )\n        // return (\n        //         <Race players={this.props.players} />\n        // )\n    }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n                        players: state.game.players,\n    starttime: state.game.starttime,\n    endtime: state.game.endtime,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n                        reset: () => dispatch(ReducerActions.reset()),\n    // start: () => dispatch(ReducerActions.start()),\n    // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper)\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper'\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\nimport * as actionTypes from '../actionTypes';\n\nconst initialState = {\n    starttime: null,\n    endtime: null,\n    questiontype: {\n        type: '+-',\n        nos: 3,\n        digits: 3,\n        decimals: 0,\n        points:10,\n    },\n    players: null,\n};\n\nconst reducer = (state = initialState, action) => {\n    // console.log(action.type)\n    console.log('[reducer]', action.type)\n    let players = null;\n    switch (action.type) {\n        case actionTypes.RESET:\n            return {\n                ...state,\n                starttime: null,\n                endtime: null,\n                // players: null,\n            };\n        case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n            // action.players.forEach((player, index) => {\n            //     players[index] = { ...players[index], ...player }\n            // });\n            return {\n                ...state,\n                starttime: new Date(),\n                questiontype: action.questiontype,\n                players: [...action.players],\n            };\n        // case actionTypes.START: // players:[{question,answer}]\n        //     players = [...state.players];\n        //     action.players.forEach((player, index) => {\n        //         players[index] = { ...players[index], ...player }\n        //     });\n        //     return {\n        //         ...state, starttime: new Date(), players: players,\n        //     };\n        case actionTypes.CORRECT:\n            players = [...state.players];\n            players[action.playerno].points += 1;\n            players[action.playerno].question = action.question;\n            players[action.playerno].answer = action.answer;\n            players[action.playerno].answerresult = 'CORRECT';\n            return {\n                ...state, players: [...players],\n            };\n        case actionTypes.WRONG:\n            players = [...state.players];\n            players[action.playerno].wrong += 1;\n            players[action.playerno].question = action.question;\n            players[action.playerno].answer = action.answer;\n            players[action.playerno].answerresult = 'WRONG';\n            return {\n                ...state, players: players,\n            };\n        case actionTypes.COMPLETE:\n            players = [...state.players];\n            players[action.playerno].points += 1;\n            return {\n                ...state, endtime: new Date(), players: [...players],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};"],"sourceRoot":""}