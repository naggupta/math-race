{"version":3,"sources":["components/SingleplayerSection/SingleplayerSection.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","components/MultiplayerWrapper/MultiplayerWrapper.module.css","components/AnswerInput/AnswerInput.module.css","containers/RaceWrapper/RaceWrapper.module.css","components/SingleplayerSetup/SingleplayerSetup.module.css","components/MultiplayerSetup/MultiplayerSetup.module.css","components/RaceComplete/RaceComplete.module.css","serviceWorker.js","store/game/actions/actionTypes.js","Utils/NumberToEnglish.js","Utils/QuestionGenerator.js","Config/Firebase.js","axios-firebase.js","store/game/actions/actions.js","components/MultiplayerSetup/MultiplayerSetup.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","sounds/success.mp3","sounds/wrong.mp3","sounds/movingfish.mp3","sounds/click.mp3","sounds/claps.mp3","components/MultiplayerSection/MultiplayerSection.js","components/RaceComplete/RaceComplete.js","components/DrawArea/DrawingLine.js","components/DrawArea/Drawing.js","components/DrawArea/DrawArea.js","components/PlayerSelection/PlayerSelection.js","components/MultiplayerWrapper/MultiplayerWrapper.js","components/SingleplayerSetup/SingleplayerSetup.js","components/AnswerInput/AnswerInput.js","components/SingleplayerSection/SingleplayerSection.js","components/SingleplayerWrapper/SingleplayerWrapper.js","containers/RaceWrapper/RaceWrapper.js","temp.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js","components/MultiplayerSection/MultiplayerSection.module.css","components/DrawArea/DrawArea.module.css","UI/DisplayMessage/DisplayMessage.module.css","components/PlayerSelection/PlayerSelection.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RESET","LOAD_QUESTIONS","START","CORRECT","WRONG","WIN","COMPLETE","SET_MULTIPLAYER","shouldPrefixWithOne","n","shouldHyphenate","numbers","number","text","numberToEnglish","val","options","prefixNum","remainder","closestSmallerNumber","closestSmallerNumberText","andForBritish","ands","comma","commas","and","words","numToConvert","parseInt","isNaN","isFinite","Math","floor","trim","generateQuestion","questiontype","wordquestions","type","nos","digits","inwords","generatePlusMinusQuestion","generateMultiplyQuestion","generateDivideQuestion","generateSquareQuestion","includes","generateWordsQuestion","generateTimeHrsArthematicQuestion","generateTimeArthematicQuestion","generateBalance","question","questions","answer","level","decimals","i","tonumber","randomIntFromInterval","currentnumber","toword","q","push","replace","tens","fromnumber","multiplicend","multiplier","divider","dividend","totaldigits","length","qparams","Object","keys","sort","forEach","key","params1","param","indexOf","substitute","replaceValues","evalstr","evaluate","symbols","isHigherNumber","temptype","sign","randomSign","toString","HR24","hrs","min","randomFromList","timeval","timeformat","addmin","addhrs","dt1","moment","dt2","subtract","hours","minutes","questionstr","format","toword1","TimeInWords","toword2","time","isHR24","hrFormat","tohrstr","answerdt","add","max","random","list","signs","split","str","mathjs","valueHash","base","all","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","instance","axios","create","baseURL","reset","actionTypes","start","playername1","playername2","questiontype1","questiontype2","dispatch","getstate","a","game","get","res","data","item","idx","active","id","question2","Utils","players","name","points","wrong","answerresult","nextQuestion","playerno","wrongAnswer","complete","win","MultiplayerSetup","props","handleSubmit","e","preventDefault","form","digits0","player0","player1","numbers0","decimals0","type0","points0","inwords0","digits1","numbers1","decimals1","type1","points1","inwords1","tens0","tens1","delay0","delay1","level0","level1","HR240","HR241","questiontype0","value","delay","history","playersetup","this","map","index","className","Classes","style","display","onChange","setState","currentTarget","defaultChecked","marginLeft","onSubmit","ref","textAlign","join","onKeyPress","onClick","PureComponent","connect","ReducerActions","DisplayMessage","Backdrop","show","classes","clicked","role","tabIndex","Modal","modelClosed","transform","opacity","children","MultiplayerSection","success","Howl","src","successSound","volume","wrongSound","click","clickSound","movingfish","movingFishSound","claps","clapsSound","timers","closedisplay","fullquestion","qcounter","animateNextQuestion","player","timer","setTimeout","prevState","displayQuestion","no","clearTimer","prevQuestion","buttonTheme","sectionTheme","goClick","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","toFixed","String","play","classList","remove","ShowQuestion","MessageAnimate","HideQuestion","clearInterval","restart","appendAnswer","slice","React","createRef","messagedisplay","Correct","margin","Wrong","_0","_1","PlayerCharacter","position","transition","left","alt","_2","height","width","process","QuestionBar","PlayerName","Score","color","Close","Question","CSSTransition","classNames","timeout","fontSize","dangerouslySetInnerHTML","__html","Refresh","BtnNumber","onKeyDown","onKeyUp","maxLength","Answer","ButtonBar","data-playerno","dataset","BtnGo","RaceComplete","winner","playAgain","reverse","score","DrawingLine","line","pathData","p","d","Drawing","lines","Component","PlayerSelection","goNext","multiplayer","setMultiplayer","placeholder","visibility","flexFlow","justifyContent","marginRight","MultiplayerPlay","backgroundImage","SingleplayerSetup","minValue","maxValue","step","formatLabel","AnswerInput","submitAnswer","seperator","inputAnswer1","_handleKeyDown","_handleKeyDown1","focus","resetInput","focusInput","resetAnswer","focusAnswer","inputfields","inputMode","SingleplayerSection","ProgressBar","SingleplayerWrapper","RaceWrapper","nextProps","newState","starttime","endtime","path","exact","component","render","MultiplayerWrapper","Layout","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,oBAAsB,iDAAiD,gBAAkB,6CAA6C,YAAc,yCAAyC,YAAc,yCAAyC,iBAAiB,4CAA4C,wBAAwB,mDAAmD,gBAAgB,2CAA2C,uBAAuB,kDAAkD,SAAW,sCAAsC,MAAQ,mCAAmC,QAAU,qCAAqC,UAAY,uCAAuC,OAAS,oCAAoC,MAAQ,mCAAmC,UAAY,uCAAuC,aAAe,0CAA0C,gBAAgB,2CAA2C,aAAe,0CAA0C,gBAAgB,2CAA2C,eAAiB,4CAA4C,eAAiB,4CAA4C,iBAAiB,4CAA4C,QAAU,qCAAqC,MAAQ,qC,oBCAjzCD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,oBCAvDD,EAAOC,QAAU,CAAC,KAAO,mC,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,UAAY,iC,0GCAjED,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,MAAQ,iCAAiC,KAAO,gCAAgC,QAAU,mCAAmC,OAAS,kCAAkC,OAAS,kCAAkC,MAAQ,mC,mBCA9SD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,UAAY,oCAAoC,iBAAmB,2CAA2C,QAAU,kCAAkC,QAAU,kCAAkC,UAAY,oCAAoC,KAAO,iC,mBCAvTD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,aAAe,mCAAmC,WAAa,mC,8HCW/GC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GAELA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,2FCjGtDC,EAAQ,QAERC,EAAiB,iBACjBC,EAAQ,QACRC,EAAU,UACVC,EAAQ,QACRC,EAAM,MACNC,EAAW,WACXC,EAAkB,kB,mCCNzBC,EAAsB,SAACC,GAC3B,OAAOA,GAAK,KAcRC,EAAkB,SAACD,GACvB,OAAOA,GAAK,IAAMA,GAAK,IAGnBE,EAAU,CACd,CAAEC,OAAQ,KAAeC,KAAM,YAC/B,CAAED,OAAQ,IAAYC,KAAM,WAC5B,CAAED,OAAQ,IAASC,KAAM,WACzB,CAAED,OAAQ,IAAMC,KAAM,YACtB,CAAED,OAAQ,IAAKC,KAAM,WACrB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,WACpB,CAAED,OAAQ,GAAIC,KAAM,SACpB,CAAED,OAAQ,GAAIC,KAAM,SACpB,CAAED,OAAQ,GAAIC,KAAM,SACpB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,YACpB,CAAED,OAAQ,GAAIC,KAAM,YACpB,CAAED,OAAQ,GAAIC,KAAM,aACpB,CAAED,OAAQ,GAAIC,KAAM,WACpB,CAAED,OAAQ,GAAIC,KAAM,WACpB,CAAED,OAAQ,GAAIC,KAAM,YACpB,CAAED,OAAQ,GAAIC,KAAM,YACpB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,UACpB,CAAED,OAAQ,GAAIC,KAAM,OACpB,CAAED,OAAQ,EAAGC,KAAM,QACnB,CAAED,OAAQ,EAAGC,KAAM,SACnB,CAAED,OAAQ,EAAGC,KAAM,SACnB,CAAED,OAAQ,EAAGC,KAAM,OACnB,CAAED,OAAQ,EAAGC,KAAM,QACnB,CAAED,OAAQ,EAAGC,KAAM,QACnB,CAAED,OAAQ,EAAGC,KAAM,SACnB,CAAED,OAAQ,EAAGC,KAAM,OACnB,CAAED,OAAQ,EAAGC,KAAM,OACnB,CAAED,OAAQ,EAAGC,KAAM,SAkFNC,EA7ES,SAAlBA,EAAmBC,GAAuB,IAAlBC,EAAiB,uDAAP,GACtC,IAAKD,EAAK,MAAO,GACjB,IAKIE,EACAC,EACAC,EACAC,EAREC,EAAgBL,EAAQM,OAAQ,EAEhCC,EAAQP,EAAQQ,OAAS,IAAM,GAC/BC,EAAMJ,EAAa,UAPX,MAOW,KAAmB,GACxCK,EAAQ,GAMRC,EAAeC,SAASb,EAAK,IAGjC,GAAIc,MAAMF,GACR,MAAO,eAIT,IAAKG,SAASH,GACZ,MAAO,WAGLA,EAAe,IACjBD,GAAS,YACTC,IAAiB,GA1B0B,oBA+BdhB,GA/Bc,IA+B7C,2BAAwC,CAAC,IAAD,UAA3BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,KACnB,GAAIc,IAAiBf,EAKnB,OAJIJ,EAAoBI,KACtBc,GAAS,QAEXA,GAASb,EAIX,GAAIc,EAAef,EAAQ,CACzBO,EAAuBP,EACvBQ,EAA2BP,EAC3B,QA3CyC,8BA0E7C,OAvBkB,KADlBI,EAAYc,KAAKC,MAAML,EAAeR,KACfX,EAAoBW,MACzCO,GAAK,UAAOZ,EAAgBG,EAAWD,GAAlC,MAGPU,GAASN,GAETF,EAAYS,EAAeV,EAAYE,GACvB,GAAKT,EAAgBS,GACnCO,GAAS,IAETA,GADSP,GAAwB,KAAQD,EAAY,GAAKA,EAAY,IACjE,UAAOK,EAAP,YAAgBE,GACZN,GAAwB,KAAQD,EAAY,EAChD,UAAOK,EAAP,KAC6B,MAAzBJ,GAAgCD,EAAY,EAChD,WAAQO,GAEJ,IAGPP,EAAY,IACdQ,GAASZ,EAAgBI,EAAWF,IAG/BU,EAAMO,QCjIFC,EAAmB,SAACC,EAAcC,GAAmB,IACxDC,EAA+BF,EAA/BE,KAA+BF,EAAzBG,IAAyBH,EAApBI,OAAoBJ,EAAZK,QAC3B,MAAa,OAATH,GAA0B,QAATA,EAAuBI,EAA0BN,GACpD,MAATE,EAAqBK,EAAyBP,GACrC,MAATE,EAAqBM,EAAuBR,GACnC,OAATE,EAAsBO,EAAuBT,GAC7C,CAAC,OAAQ,QAAS,QAAQU,SAASR,GAAcS,EAAsBX,EAAcC,GACrF,CAAC,aAAaS,SAASR,GAAcU,EAAkCZ,GACvE,CAAC,UAAUU,SAASR,GAAcW,EAA+Bb,GACjE,CAAC,OAAOU,SAASR,GAAcY,EAAgBd,GACjD,CACLe,SAAU,GACVC,UAAW,GACXC,OAAQ,KAgDCH,EAAkB,SAACd,GAC9B,IAAIe,EAAW,GACTC,EAAY,GACdC,EAAS,EACCd,GAAgCH,EAAtCE,KAAsCF,EAAhCG,KAAaE,GAAmBL,EAA3BI,OAA2BJ,EAAnBK,SAAmBL,EAAVkB,MACblB,EAAjBmB,SAKN,IAHA,IAGSC,EAAI,EAAGA,EAAIjB,EAAKiB,GAAK,EAAG,CAC/B,IAGIC,EAAW,GACEC,EAAsB,EAAG,KAC5BD,EAAW,GACzB,IACME,EAAgBD,EADH,EACqCD,GAExD,GAAKhB,GAIE,GAAIA,EAAS,CAClB,IAAMmB,EAAS7C,EAAgB4C,GACzBE,EAAC,UAAML,GAAK,EAAI,GAAK,qBAApB,OAA0CI,GACjDT,EAAQ,UAAMA,GAAN,OAAiBU,GACzBT,EAAUU,KAAKD,EAAEE,QAAQ,IAAK,UARlB,CACZ,IAAMF,EAAC,UAAML,EAAI,EATN,IASiB,GAArB,YAA2BG,GAClCR,EAAQ,UAAMA,EAAN,YAAkBU,GAC1BT,EAAUU,KAAKD,EAAEE,QAAQ,IAAK,KAOhCV,EAAkB,GAATA,EAAcM,EAMzB,OAFAP,EAAUU,KAAK,KAER,CACLX,SAAUA,EACVC,UAAWA,EACXC,OAAQA,IAICV,EAA2B,SAACP,GAGCA,EAAhCE,KAHgD,IAG1CE,EAA0BJ,EAA1BI,OAAQC,EAAkBL,EAAlBK,QAAkBL,EAAT4B,KAER5B,EAAjBmB,SAEN,IACME,EAAW,YAAMjB,GAAS,EAC1ByB,EAAa,YAAOzB,EAAS,GAAK,EAClC0B,EAAeR,EAAsBO,EAAYR,GACjDU,EAAaT,EAAsB,EAAG,GACtCL,EAASc,EAAaD,EAExBf,EAAW,GAKf,OAHKV,EACIA,IAASU,EAAQ,UAAMpC,EAAgBmD,GAAtB,cAAyCnD,EAAgBoD,KADrEhB,EAAQ,UAAMe,EAAN,cAAwBC,GAGvC,CACLhB,SAAUA,EACVC,UAAW,GACXC,OAAQA,IAICT,EAAyB,SAACR,GAGGA,EAAhCE,KAH8C,IAGxCE,EAA0BJ,EAA1BI,OAAQC,EAAkBL,EAAlBK,QAAkBL,EAAT4B,KAER5B,EAAjBmB,SAEN,IACME,EAAW,YAAMjB,GAAS,EAC1ByB,EAAa,YAAOzB,EAAS,GAAK,EAClCa,EAASK,EAAsBO,EAAYR,GAC3CW,EAAUV,EAAsB,EAAG,GACnCW,EAAWhB,EAASe,EAEtBjB,EAAW,GAKf,OAHKV,EACIA,IAASU,EAAQ,UAAMpC,EAAgBsD,GAAtB,cAAqCtD,EAAgBqD,KADjEjB,EAAQ,UAAMkB,EAAN,cAAoBD,GAGnC,CACLjB,SAAUA,EACVC,UAAW,GACXC,OAAQA,IAICR,EAAyB,SAACT,GACrC,IAAIuB,EACAR,EAAW,GAEDX,GAA0BJ,EAAhCE,KAAgCF,EAA1BI,QAAQC,EAAkBL,EAAlBK,QAASuB,EAAS5B,EAAT4B,KAJuB,EAM/B5B,EAAjBmB,gBANgD,MAMrC,EANqC,EAOlDd,IAASc,EAAW,GACxB,IAEMe,EAAc9B,EAASe,EAazBE,EAAW,YAAMa,GAAc,EACtB,MAATN,GAAgC,IAAhBM,IAAmBb,EAAW,IAElD,IAAMQ,EAAa,YAAOK,EAAc,GAAK,EAS7C,GAHAX,EAAgBD,EAAsBO,EAAYR,GAG7ChB,GACA,GAAIA,EAAS,CAChB,IAAMmB,EAAS7C,EAAgB4C,GAC/BR,EAAQ,UAAMS,EAAN,sBAHIT,EAAQ,UAAMQ,EAAN,gBAQtB,MAAO,CACLR,SAAUA,EACVC,UAAW,GACXC,OALOM,EAAgBA,IASdZ,EAAwB,SAACX,EAAcgB,GAAe,IACzDd,EAA+BF,EAA/BE,KAAWE,GAAoBJ,EAAzBG,IAAyBH,EAApBI,QAAQC,EAAYL,EAAZK,QACrBJ,EAAgBe,EAAUd,GAE1Ba,EAAWd,EADEqB,EAAsB,EAAGrB,EAAckC,OAAS,IAHH,EAMzCnC,EAAjBmB,gBAN0D,MAM/C,EAN+C,EAO5Dd,IAASc,EAAW,GAOxB,IANA,IAAMe,EAAc9B,EAASe,EACvBE,EAAW,YAAMa,GAAc,EAC/BL,EAAa,YAAOK,EAAc,GAAK,EAGvCE,GADIrB,EAASA,SACH,IACPK,EAAI,EACLA,KAAKL,EADKK,GAAK,EAErBgB,EAAQhB,GAAKL,EAASK,GAiBxB,OAdAiB,OAAOC,KAAKF,GACTG,OACAC,SAAQ,SAACC,GACR,IAAMC,EAAO,eAAQN,GACfO,EAAQP,EAAQK,GAClBE,EAAMC,QAAQ,UAAY,IAAGF,EAAQ9D,IAAM0C,EAAsBO,EAAYR,IACjF,IAAMwB,EAAaC,GAAcH,EAAOD,GAClCK,EAAUC,GAASH,GACzBT,EAAQK,GAAOM,KAMZ,CAAE9B,OAHM+B,GAASF,GAAc/B,EAASE,OAAQmB,IAG9BrB,SAFL+B,GAAc/B,EAASA,SAAUqB,GAELpB,UAAW,KAGhDV,EAA4B,SAACN,GACxC,IAAIuB,EAAgB,EAChBR,EAAW,GACTC,EAAY,GACdC,EAAS,EACLf,EAAsCF,EAAtCE,KAAMC,EAAgCH,EAAhCG,IAAKC,EAA2BJ,EAA3BI,OAAQC,EAAmBL,EAAnBK,QAASa,EAAUlB,EAAVkB,MALqB,EAMlClB,EAAjBmB,gBANmD,MAMxC,EANwC,EAOrDd,IAASc,EAAW,GAKxB,IAJA,IAAM8B,EAAU,GAEVf,EAAc9B,EAASe,EACzB+B,GAAiB,EACZ9B,EAAI,EAAGA,EAAIjB,EAAKiB,GAAK,EAAG,CAC/B,IAAM+B,EAAWjD,EACbkD,EAAO,IACsCA,EAAvC,IAANhC,GAAWH,EAAM,SAAG,GAAOiB,EAAc,GAAW,KAC9CjB,GAAU,KAAOA,GAAU,KAAgB,QAATf,GAAkBE,EAAS,GAC9Da,EAAS,IAAe,QAATf,GAA6B,IAAXE,EADuCiD,EAAW,MAEnFjC,EAAI,GAAc,QAATlB,IAAmB+C,EAAQvC,SAAS,MAAQO,EAAS,GAAKA,EAAS,KAAOb,EAAS,GAC5FgB,EAAI,GAAc,QAATlB,IAAmB+C,EAAQvC,SAAS,MAAQO,EAAS,IAAiB,IAAXb,EADkC,IAEnGiD,EAAWF,GAElBD,GAA4B,IAAVhC,GAAeE,IAAMjB,EAAM,IAAGiD,EAAO,KAC5DH,EAAQvB,KAAK0B,GAEb,IAAI/B,EAAW,YAAMa,GAAc,EAC/BL,EAAa,YAAOK,EAAc,GAAK,EAC9B,MAATkB,GACFvB,EAAa,EACbR,EAAW,GACO,MAAT+B,GAAgB/B,EAAWJ,IAAQI,EAAWJ,GAGpDiC,GAA4B,IAAVhC,GAAeE,IAAMjB,EAAM,EAG3CoB,EAAgBD,EAAsBO,EAAYR,IAFvDQ,EAAa,YAAMzB,GAASa,EAC5BM,EAAgBD,EAAsBO,EAAYA,EAAU,SAAG,GAAMzB,KAEvE,IAAIqB,EAAI,GAMR,GALa,MAAT2B,GAAyB,MAATA,EAAcnC,IAAoB,MAATmC,EAAe,GAAK,GAAK7B,EACpD,MAAT6B,IAAcnC,GAAUM,IAE5B2B,GAA4B,IAAVhC,GAAeD,EAAOqC,WAAWnB,OAAS/B,IAAQ8C,GAAiB,GAErF7C,GAIE,GAAIA,EAAS,CAClB,IAAMmB,EAAS7C,EAAgB4C,GAC/BE,EAAC,UAAML,GAAK,EAAI,GAAc,MAATgC,EAAe,uBAAkC,MAATA,EAAe,wBAA0B,yBAArG,OAA+H5B,GAChIT,EAAQ,UAAMA,GAAN,OAAiBU,GACzBT,EAAUU,KAAKD,EAAEE,QAAQ,IAAK,WAP9BF,EAAC,UAAML,EAAI,EAAIgC,EAAO,GAArB,YAA2B7B,GAA8B,IAAbJ,EAAiB,EAAjB,SAAqB,GAAMA,KACxEJ,EAAQ,UAAMA,EAAN,YAAkBU,GAC1BT,EAAUU,KAAKD,EAAEE,QAAQ,IAAK,KAalC,OALAV,GAAuB,IAAbE,EAAiB,EAAjB,SAAqB,GAAMA,GAGrCH,EAAUU,KAAK,KAER,CACLX,SAAUA,EACVC,UAAWA,EACXC,OAAQA,IAGCJ,EAAiC,SAACb,GAKOA,EAA5CE,KAA4CF,EAAtCG,IAAsCH,EAAjCI,OAFnB,IAE2BmD,EAAyBvD,EAAzBuD,KAAMrC,EAAmBlB,EAAnBkB,MAAOb,EAAYL,EAAZK,QAGlCmD,EAAe,MAATD,EAAejC,EAAsB,EAAG,IAAMA,EAAsB,EAAG,IAC/EmC,EAAM,EACI,IAAVvC,EAAauC,EAAMC,EAAe,CAAC,IAAK,KAAM,KAAM,OACrC,IAAVxC,GACU,IAAVA,EADauC,EAAMC,EAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEpF,IAAVxC,IAAauC,EAAMnC,EAAsB,EAAG,KACrD,IAAMqC,EAAUC,EAAWJ,EAAKC,GAE5BI,GADSR,EAAW,MACX,IACTS,EAAS,GACC,IAAV5C,EAAa2C,EAASH,EAAe,CAAC,KAAM,KAAM,OACnC,IAAVxC,GAAyB,IAAVA,EAAa2C,EAASH,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OACjG,IAAVxC,IAAa2C,EAASvC,EAAsB,EAAG,KAEpDJ,EAAQ,IAAG4C,EAASxC,EAAsB,EAAG,KAGjD,IAAMyC,EAAMC,IAAOL,EAAkB,MAATJ,EAAe,QAAU,SAE/CU,EAAMD,IAAOL,EAAkB,MAATJ,EAAe,QAAU,SAASW,SAAS,CAAEC,MAAOL,EAAQM,QAASP,IAE7FQ,EAAW,gCAA4BJ,EAAIK,OAAgB,MAATf,EAAe,QAAU,SAAhE,iBAAiFI,EAAjF,KAGf,GAAItD,EAAS,CACX,IAAMkE,EAAUC,EAAYT,EAAKR,GAC3BkB,EAAUD,EAAYP,EAAKV,GACjCc,EAAW,sCAAkCI,EAAlC,+BAAgEF,EAAhE,aAMb,MAAO,CACLxD,SAAUsD,EACVrD,UAAW,GACXC,OANU,UAAM6C,EAAN,YAAgBD,KAUxBW,EAAc,SAACE,EAAMC,GACzB,IAAInD,EAAS,GACPoD,EAAsB,MAAXD,EAAiB,KAAO,KAGzC,GAA2B,KAAtBD,EAAKJ,OAAO,MAAa9C,EAAM,UAAM7C,GAAiB+F,EAAKJ,OAAOM,IAAnC,iBAC/B,GAA2B,MAAtBF,EAAKJ,OAAO,MAAc9C,EAAM,oBAAgB7C,GAAiB+F,EAAKJ,OAAOM,UAClF,IAAKF,EAAKJ,OAAO,MAAQ,GAAI9C,EAAM,UAAM7C,EAAgB+F,EAAKJ,OAAO,OAAlC,qBAAqD3F,GAAiB+F,EAAKJ,OAAO,aACrH,IAAKI,EAAKJ,OAAO,MAAQ,GAAI,CAChC,IAAIO,GAAeH,EAAKJ,OAAOM,GAAjB,EACdC,EAAqB,MAAXF,GAA8B,KAAZE,EAAiB,IAAMA,EACnDA,EAAqB,MAAXF,GAA8B,KAAZE,EAAiB,IAAMA,EACnDrD,EAAM,UAAM7C,EAAgB,GAAK+F,EAAKJ,OAAO,OAAvC,mBAAwD3F,EAAgBkG,IAGhF,OAAOrD,GAGIZ,EAAoC,SAACZ,GAKIA,EAA5CE,KAA4CF,EAAtCG,IAAsCH,EAAjCI,OAFnB,IAE2BmD,EAAyBvD,EAAzBuD,KAAMrC,EAAmBlB,EAAnBkB,MAAOb,EAAYL,EAAZK,QAGlCmD,EAAe,MAATD,EAAejC,EAAsB,EAAG,IAAMA,EAAsB,EAAG,IAC/EmC,EAAM,EACI,IAAVvC,EAAauC,EAAMC,EAAe,CAAC,IAAK,KAAM,KAAM,OACrC,IAAVxC,GACU,IAAVA,EADauC,EAAMC,EAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEpF,IAAVxC,IAAauC,EAAMnC,EAAsB,EAAG,KACrD,IAAMqC,EAAUC,EAAWJ,EAAKC,GAC1BL,EAAOC,EAAW,MACpBQ,EAAS,GACTC,EAAS,GACC,IAAV5C,EAAa2C,EAASH,EAAe,CAAC,KAAM,KAAM,OACnC,IAAVxC,GAAyB,IAAVA,EAAa2C,EAASH,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OACjG,IAAVxC,IAAa2C,EAASvC,EAAsB,EAAG,KAEpDJ,EAAQ,IAAG4C,EAASxC,EAAsB,EAAG,KAGjD,IAAIwD,EAAW,IAAId,IAAOL,EAAkB,MAATJ,EAAe,QAAU,SACxDc,EAAW,UAAMV,EAAN,YAAiBP,EAAjB,YAAyBU,EAAzB,YAAmCA,EAAS,MAAQ,GAApD,YAA0DD,EAA1D,QAGf,GAAIxD,EAAS,CACX,IAAMmB,EAASgD,EAAYM,EAAUvB,GACrCc,EAAW,UAAM7C,EAAN,YAAyB,MAAT4B,EAAe,uBAAyB,wBAAxD,YAAmFzE,EAAgBmF,GAAnG,YAA8GA,EAAS,MAAQ,GAA/H,YAAqInF,EAAgBkF,GAArJ,SAIA,MAATT,EAAc0B,EAAWA,EAASC,IAAI,CAAEZ,MAAOL,EAAQM,QAASP,IAClD,MAATT,IAAc0B,EAAWA,EAASZ,SAAS,CAAEC,MAAOL,EAAQM,QAASP,KAK9E,MAAO,CACL9C,SAAUsD,EACVrD,UAAW,GACXC,OAAQ6D,EAASR,OAAgB,MAATf,EAAe,QAAU,WAI/CK,EAAa,SAACJ,EAAKC,GACvB,MAAM,GAAN,OAAUD,EAAM,GAAK,IAAM,IAA3B,OAAgCA,EAAhC,YAAuCC,EAAM,GAAK,IAAM,IAAxD,OAA6DA,IAGlDnC,EAAwB,SAACmC,EAAKuB,GAGzC,OAAOpF,KAAKC,MAAMD,KAAKqF,UAAYD,EAAMvB,EAAM,GAAKA,IAQzCC,EAAiB,SAACwB,GAE7B,OAAOA,EAAKtF,KAAKC,MAAMD,KAAKqF,SAAWC,EAAK/C,UAuCxCkB,EAAa,SAACnD,GAClB,IAAMiF,EAAQjF,EAAKkF,MAAM,IAEzB,OAAOD,EADS7D,EAAsB,EAAG6D,EAAMhD,OAAS,KAS7Ca,GAAW,SAACqC,GACvB,OAAOC,IAAgBD,IAgBZvC,GAAgB,SAACuC,EAAKE,GACjC,IAAIC,EAAOH,EAKX,OAJAG,EAAOA,EAAK7D,QAAQ,UAAU,SAAC8D,GAE7B,OAAOF,EAAUE,EAAI9D,QAAQ,IAAK,IAAIA,QAAQ,IAAK,S,UCtfvD+D,KAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,GAAf,EAAeA,I,UCPAQ,G,QAJEC,EAAMC,OAAO,CAC5BC,QAAS,2ECEEC,GAAQ,WACnB,MAAO,CACLpG,KAAMqG,IAIGC,GAAQ,SAACC,EAAaC,EAAaC,EAAeC,GAC7D,8CAAO,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,2DAGA,CAAC,OAAQ,QAAS,QAAQrG,SAASiG,EAAczG,OAAU0G,GAAiB,CAAC,OAAQ,QAAS,QAAQlG,SAASkG,EAAc1G,QAAY4G,IAAWE,KAAKhG,UAHzJ,wBAeGA,EAAY,GAff,SAiBemF,GAAMc,IAAI,mBAjBzB,cAiBGC,EAjBH,gBAkBoBA,EAlBpB,uBAkBKC,EAlBL,EAkBKA,KAIR9E,OAAOC,KAAK6E,GAAM3E,SAAQ,SAACC,GACzB,IAAMhB,EAAI,GACV0F,EAAK1E,GAAKD,SAAQ,SAAC4E,EAAMC,GAEjBD,EAAKE,QAA0B,MAAhBF,EAAKE,QAAiB7F,EAAEC,KAAF,aAAS6F,GAAIF,GAAQD,OAElEpG,EAAUyB,GAAOhB,KA5BhB,UAkDGoF,EAAS,CACb3G,KAAMqG,EACNvF,UAAWA,IApDV,QAuDDwG,EAAY,GACZd,IAAac,EAAS,eAAQC,EAAuBb,EAAeE,IAAWE,KAAK/G,iBAExF4G,EAAS,CACP3G,KAAMqG,EAENmB,QAAS,CAAC,yBACNH,GAAI,EAAGI,KAAMlB,EAAamB,OAAQ,EAAGC,MAAO,GAAMJ,EAAuBd,EAAeG,IAAWE,KAAK/G,gBADnG,IACmH6H,aAAc,GAAI9H,aAAc2G,IADnJ,yBAELY,GAAI,EAAGI,KAAMjB,EAAakB,OAAQ,EAAGC,MAAO,GAAML,GAF7C,IAEwDM,aAAc,GAAI9H,aAAc4G,OA/D9F,4CAAP,yDA+EWmB,GAAe,SAACC,GAC3B,OAAO,SAACnB,EAAUC,GAEhBD,EAAS,aACP3G,KAAMqG,EACNyB,SAAUA,GACPP,EAAuBX,IAAWE,KAAKU,QAAQM,GAAUhI,aAAc8G,IAAWE,KAAK/G,mBAKnFgI,GAAc,SAACD,GAC1B,OAAO,SAACnB,EAAUC,GAEhBD,EAAS,aACP3G,KAAMqG,EACNyB,SAAUA,GACPP,EAAuBX,IAAWE,KAAKU,QAAQM,GAAUhI,aAAc8G,IAAWE,KAAK/G,mBAkBnFiI,GAAW,WACtB,MAAO,CACLhI,KAAMqG,IAIG4B,GAAM,SAACH,GAClB,MAAO,CACLA,SAAUA,EACV9H,KAAMqG,I,kBClIJ6B,G,kDACJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAqCRC,aAAe,SAACC,GACdA,EAAEC,iBADkB,MA0BhB,EAAKC,KApBPC,GANkB,EAIlBC,QAJkB,EAKlBC,QALkB,EAMlBF,SACAG,EAPkB,EAOlBA,SACAC,EARkB,EAQlBA,UACAC,EATkB,EASlBA,MACAC,EAVkB,EAUlBA,QACAC,EAXkB,EAWlBA,SACAC,EAZkB,EAYlBA,QACAC,EAbkB,EAalBA,SACAC,EAdkB,EAclBA,UACAC,EAfkB,EAelBA,MACAC,EAhBkB,EAgBlBA,QACAC,EAjBkB,EAiBlBA,SACAC,EAlBkB,EAkBlBA,MACAC,EAnBkB,EAmBlBA,MACAC,EApBkB,EAoBlBA,OACAC,EArBkB,EAqBlBA,OACAC,EAtBkB,EAsBlBA,OACAC,EAvBkB,EAuBlBA,OACAC,EAxBkB,EAwBlBA,MACAC,EAzBkB,EAyBlBA,MAGIC,EAAgB,CACpB9J,KAAM6I,EAAMkB,MACZ9J,KAAM0I,EAASoB,MACf7J,QAASsI,EAAQuB,MACjB9I,SAAU,CAAC,MAAMT,SAASqI,EAAMkB,QAAUnB,EAAUmB,MAAQ,EAC5DrC,QAASoB,EAAQiB,MACjBC,MAAO,CAAC,KAAM,OAAOxJ,SAASqI,EAAMkB,QAAUP,EAAOO,MAAQ,EAC7DrI,KAAM4H,EAAMS,MACZ1G,KAAMuG,EAAMG,MACZ/I,OAAQ0I,EAAOK,MACf5J,QAA4B,SAAnB4I,EAASgB,OAEdtD,EAAgB,CACpBzG,KAAMmJ,EAAMY,MACZ9J,KAAMgJ,EAASc,MACf7J,QAAS8I,EAAQe,MACjBrC,QAAS0B,EAAQW,MACjB9I,SAAU,CAAC,MAAMT,SAAS2I,EAAMY,QAAUb,EAAUa,MAAQ,EAC5DC,MAAO,CAAC,KAAM,OAAOxJ,SAAS2I,EAAMY,QAAUN,EAAOM,MAAQ,EAC7DrI,KAAM6H,EAAMQ,MACZ1G,KAAMwG,EAAME,MACZ/I,OAAQ2I,EAAOI,MACf5J,QAA4B,SAAnBkJ,EAASU,OAIpB,EAAK5B,MAAM7B,MAAM,EAAKnJ,MAAMsL,QAAS,EAAKtL,MAAMuL,QAASoB,EAAerD,GACxE,EAAK0B,MAAM8B,QAAQzI,KAAK,oBA3FxB,IAAMgG,EAAU,CAAEW,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,SAAWU,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,IAC7GzH,EAAO,CAAEmI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaE,MAAS,KAAOmI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaE,MAAS,MAChIE,EAAS,CAAEiI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaI,QAAW,IAAMiI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaI,QAAW,KAJ1H,OAMjB,EAAK/C,MAAQ,CACX0L,MAAO7I,EAAK,GACZmJ,MAAOnJ,EAAK,GACZwI,QAAStI,EAAO,GAChB8I,QAAS9I,EAAO,GAChBuI,QAASjB,EAAQ,GACjBkB,QAASlB,EAAQ,IAZF,E,qDAoGT,IAAD,OAKD0C,GAFYC,KAAKhC,MAAMX,SAAW2C,KAAKhC,MAAMX,QAAQ,GAAGC,KAAoB0C,KAAKhC,MAAMX,SAAW2C,KAAKhC,MAAMX,QAAQ,GAAGC,KAE1G,CAAC,EAAG,GAAG2C,KAAI,SAACC,GAAW,IAAD,EACT,EAAKlC,MAAMX,QAAQ6C,GAApCvK,GAD0B,EAChC2H,KADgC,EAC1B3H,cACd,OACE,qBAAiBwK,UAAWC,QAA5B,SACE,qBAAKD,UAAWC,oBAAhB,SAEE,sBAAKC,MAAO,CAAEC,QAAS,EAAKtN,MAAL,gBAAoBkN,IAAW,OAAS,QAAUC,UAAWC,WAApF,UACA,6BAAK,EAAKpN,MAAL,gBAAoBkN,MACvB,gCACE,sCACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,KAAKW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,OAAtB/K,EAAaE,OAC/J,0CAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,MAAtB/K,EAAaE,OAC9J,yCAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,MAAtB/K,EAAaE,OAC9J,yCAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,MAAMW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,QAAtB/K,EAAaE,OAChK,2CAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,KAAKW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,OAAtB/K,EAAaE,OAC/J,sCACG,0CAGL,sBAAKsK,UAAWC,aAAhB,UACE,uBACEvK,KAAK,QACLyH,KAAI,cAAS4C,GACbN,MAAM,YACNW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SACnEc,eAAsC,cAAtB/K,EAAaE,OAE/B,iDAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,OAAOW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,SAAtB/K,EAAaE,OACjK,4CAEF,sBAAKsK,UAAWC,aAAhB,UACE,uBAAOvK,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,QAAQW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,UAAtB/K,EAAaE,OAClK,6CAEF,sBAAKsK,UAAWC,aAAhB,UACE,uBAAOvK,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,OAAOW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAAwBN,GAAUhC,EAAEuC,cAAcb,SAAUc,eAAsC,SAAtB/K,EAAaE,OACjK,+CAYJ,sBAAKwK,MAAO,CAAEC,QAAS,QAAvB,UACE,sBAAKD,MAAO,CAAEC,QAAS,CAAC,KAAM,MAAO,IAAK,IAAK,KAAM,OAAQ,OAAQ,SAASjK,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAA9H,UACE,wCACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,gBAAW4C,GAASK,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,gCAA0BN,GAAUhC,EAAEuC,cAAcb,SAAUA,MAAM,IAAIc,eAAwC,IAAxB/K,EAAaI,SAClK,yCAEF,gCACE,uBAAOF,KAAK,QAAQyH,KAAI,gBAAW4C,GAASK,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,gCAA0BN,GAAUhC,EAAEuC,cAAcb,SAAUA,MAAM,IAAIc,eAAwC,IAAxB/K,EAAaI,SAClK,yCAEF,gCACE,uBAAOF,KAAK,QAAQyH,KAAI,gBAAW4C,GAASK,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,gCAA0BN,GAAUhC,EAAEuC,cAAcb,SAAUA,MAAM,IAAIc,eAAwC,IAAxB/K,EAAaI,SAClK,yCAEF,gCACE,uBAAOF,KAAK,QAAQyH,KAAI,gBAAW4C,GAASK,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,gCAA0BN,GAAUhC,EAAEuC,cAAcb,SAAUA,MAAM,IAAIc,eAAwC,IAAxB/K,EAAaI,SAClK,4CAGJ,sBAAKsK,MAAO,CAAEM,WAAY,MAAOL,QAAS,CAAC,KAAM,OAAOjK,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAAxG,UACE,yCAEA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,IAAIc,eAAqC,IAArB/K,EAAaG,MACpF,yCAEF,gCACE,uBAAOD,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,IAAIc,eAAqC,IAArB/K,EAAaG,MACpF,yCAEF,gCACE,uBAAOD,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,IAAIc,eAAqC,IAArB/K,EAAaG,MACpF,yCAEF,gCACE,uBAAOD,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,IAAIc,eAAqC,IAArB/K,EAAaG,MACpF,yCAEF,gCACE,uBAAOD,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,KAAKc,eAAqC,KAArB/K,EAAaG,MACrF,gDAIN,sBAAKuK,MAAO,CAAEC,QAA0C,IAAjC,EAAKtN,MAAL,gBAAoBkN,KAAkB,CAAC,MAAM7J,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAApH,UACE,2CACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIc,eAAsC,MAAtB/K,EAAa4B,OACjF,2CAEF,gCACE,uBAAO1B,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIc,eAAsC,MAAtB/K,EAAa4B,OACjF,6CAGJ,sBAAK8I,MAAO,CAAEC,QAAS,CAAC,aAAajK,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAArF,UACE,sCACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIc,eAAsC,MAAtB/K,EAAauD,OACjF,2CAEF,gCACE,uBAAOrD,KAAK,QAAQyH,KAAI,cAAS4C,GAASN,MAAM,IAAIc,eAAsC,MAAtB/K,EAAauD,OACjF,6CAGJ,sBAAKmH,MAAO,CAAEC,QAAS,CAAC,aAAajK,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAArF,UACE,uCACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakB,QAClF,yCAEF,gCACE,uBAAOhB,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakB,QAClF,yCAEF,gCACE,uBAAOhB,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakB,QAClF,yCAEF,gCACE,uBAAOhB,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakB,QAClF,4CAGJ,sBAAKwJ,MAAO,CAAEC,QAAS,CAAC,KAAM,OAAOjK,SAAS,EAAKrD,MAAL,cAAkBkN,KAAY,OAAS,QAArF,UACE,uCACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,yCAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,IAAIc,eAAuC,IAAvB/K,EAAakK,QAClF,0CAEF,gCACE,uBAAOhK,KAAK,QAAQyH,KAAI,eAAU4C,GAASN,MAAM,KAAKc,eAAuC,KAAvB/K,EAAakK,QACnF,8CAGJ,sBAAKQ,MAAO,CAAEC,QAAS,QAAvB,UACE,sBAAKD,MAAO,CAAEC,QAAS,QAAvB,UACE,0CACA,gCACE,uBAAOzK,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,OAAOc,iBAAkB/K,EAAaK,UACzF,2CAEF,gCACE,uBAAOH,KAAK,QAAQyH,KAAI,iBAAY4C,GAASN,MAAM,QAAQc,gBAAiB/K,EAAaK,UACzF,6CAGJ,sBAAKqK,MAAO,CAAEM,WAAY,QAASL,QAAwC,OAA/B,EAAKtN,MAAL,cAAkBkN,IAAoB,OAAS,QAA3F,UACE,0CACA,gCACE,uBAAOrK,KAAK,QAAQyH,KAAI,kBAAa4C,GAASN,MAAM,IAAIc,eAA0C,IAA1B/K,EAAamB,WACrF,yCAEF,gCACE,uBAAOjB,KAAK,QAAQyH,KAAI,kBAAa4C,GAASN,MAAM,IAAIc,eAA0C,IAA1B/K,EAAamB,WACrF,yCAEF,gCACE,uBAAOjB,KAAK,QAAQyH,KAAI,kBAAa4C,GAASN,MAAM,IAAIc,eAA0C,IAA1B/K,EAAamB,WACrF,+CAIN,gCACE,wCACA,gCACE,uBAAOjB,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,IAAIc,eAAwC,IAAxB/K,EAAa4H,SACnF,yCAMF,gCACE,uBAAO1H,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,IAAIc,eAAwC,IAAxB/K,EAAa4H,SACnF,yCAEF,gCACE,uBAAO1H,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,KAAKc,eAAwC,KAAxB/K,EAAa4H,SACpF,0CAEF,gCACE,uBAAO1H,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,KAAKc,eAAwC,KAAxB/K,EAAa4H,SACpF,0CAEF,gCACE,uBAAO1H,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,KAAKc,eAAwC,KAAxB/K,EAAa4H,SACpF,0CAEF,gCACE,uBAAO1H,KAAK,QAAQyH,KAAI,gBAAW4C,GAASN,MAAM,KAAKc,eAAwC,KAAxB/K,EAAa4H,SACpF,mDA1PA2C,OAkQd,OAiBE,aAhBA,CAgBC,WAAD,UACE,uBACEU,SAAUZ,KAAK/B,aACf4C,IAAK,SAAC3C,GACJ,EAAKE,KAAOF,GAHhB,UAME,oBAAImC,MAAO,CAAES,UAAW,UAAxB,wBACA,8BAAMf,IACN,gCACE,wBACElK,KAAK,SACL+J,MAAM,QAGNO,UAAW,CAAC,SAAU,iBAAkBC,UAAeW,KAAK,KAL9D,sBAUA,wBACElL,KAAK,SACL+J,MAAM,OAENoB,WAAY,SAAC9C,GAAD,OAAO,EAAKF,MAAM8B,QAAQzI,KAAK,eAC3C4J,QAAS,SAAC/C,GAAD,OAAO,EAAKF,MAAM8B,QAAQzI,KAAK,eACxC8I,UAAW,CAAC,SAAU,iBAAkBC,UAAeW,KAAK,KAN9D,kC,GApZmBG,iBAkbhBC,gBAbS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAMK,SAACb,GAAD,MAAe,CAGxCL,MAAO,SAACC,EAAaC,EAAaC,EAAeC,GAA1C,OAA4DC,EAAS4E,GAAqBhF,EAAaC,EAAaC,EAAeC,QAG7H4E,CAA6CpD,I,4CC/Z7CsD,I,UCAAC,OApBf,SAAkBtD,GACd,OAAIA,EAAMuD,KAEc,qBACEpB,UAAWqB,YACXP,QAASjD,EAAMyD,QACfT,WAAYhD,EAAMyD,QAClBC,KAAK,SACLC,SAAS,MAI3B,cAAC,WAAD,K,UCsBGC,OAjCf,SAAe5D,GACX,OAAKA,EAAMuD,KAEP,eAAC,WAAD,WASQ,cAAC,GAAD,CAAUA,KAAMvD,EAAMuD,KAAME,QAASzD,EAAM6D,cAC3C,qBACE1B,UAAWqB,SACXnB,MAAO,CACDyB,UAAW9D,EAAMuD,KAAO,gBAAkB,qBAC1CQ,QAAS/D,EAAMuD,KAAO,IAAM,KAJpC,SAQKvD,EAAMgE,cApBE,cAAC,WAAD,KCNd,OAA0B,oCCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,kCCA1B,OAA0B,kCCmBnCC,G,kDAkBJ,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAlBRkE,QAAU,IAAIC,QAAK,CAAEC,IAAKC,GAAcC,OAAQ,IAiB7B,EAhBnB9E,MAAQ,IAAI2E,QAAK,CAAEC,IAAKG,GAAYD,OAAQ,IAgBzB,EAfnBE,MAAQ,IAAIL,QAAK,CAAEC,IAAKK,GAAYH,OAAQ,IAezB,EAdnBI,WAAa,IAAIP,QAAK,CAAEC,IAAKO,GAAiBL,OAAQ,IAcnC,EAbnBM,MAAQ,IAAIT,QAAK,CAAEC,IAAKS,GAAYP,OAAQ,IAazB,EAZnBQ,OAAS,GAYU,EAVnB9P,MAAQ,CAIN+P,cAAc,EACdrM,SAAU,GACVsM,aAAc,GACdC,SAAU,GAGO,EA6CnBC,oBAAsB,SAACC,GACrB,IAAMC,EAAQC,YAAW,WACnB,EAAKrQ,MAAMiQ,UAAYE,EAAOxM,UAAUmB,SAC5C,EAAK0I,UAAS,SAAC8C,GAAD,MAAgB,CAAEL,SAAUK,EAAUL,SAAW,EAAGvM,SAAUyM,EAAOxM,UAAU2M,EAAUL,UAAWD,aAAcG,EAAOzM,aACvI,EAAKwM,oBAAoBC,MACxB,IAAOA,EAAOxN,aAAakK,OAC9B,EAAKiD,OAAOzL,KAAK+L,IAnDA,EAsDnBG,gBAAkB,SAACJ,EAAQK,GACzB,IAAIzM,GACJA,EAAIyM,GAAML,EAAOxM,UAAUmB,OAASqL,EAAOxM,UAAUmB,OAAS,EAAI0L,IACzDL,EAAOxM,UAAUmB,QAAUf,EAAI,IACxC7D,QAAQC,IAAI,oBAAqB4D,GACjC,EAAKyJ,UAAS,SAAC8C,GAAD,MAAgB,CAAEL,SAAUlM,EAAI,EAAGL,SAAUyM,EAAOxM,UAAUI,GAAIiM,aAAcG,EAAOzM,aACrG,EAAKwM,oBAAoBC,KA5DR,EA+DnBzF,aAAe,WACb,EAAK+F,aACLvQ,QAAQC,IAAI,iBAAkB,EAAKH,MAAMiQ,UACzC,IAAME,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAC7C,EAAK4F,gBAAgBJ,EAAQ,EAAKnQ,MAAMiQ,WAnEvB,EAsEnBS,aAAe,WACb,EAAKD,aACL,IAAMN,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAC7CzK,QAAQC,IAAI,iBAAkB,EAAKH,MAAMiQ,UACzC,EAAKM,gBAAgBJ,EAAQ,EAAKnQ,MAAMiQ,SAAW,IA1ElC,EA6EnBU,YAAc,WACZ,MAA+B,MAAxB,EAAK3F,MAAML,SAAmB,sCAAwC,kCA9E5D,EAiFnBiG,aAAe,WACb,MAA+B,MAAxB,EAAK5F,MAAML,SAAmB,YAAc,WAlFlC,EAqFnBkG,QAAU,WACR,IAAMV,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UACvCmG,EAAa,EAAKC,WAAWC,QAC7BC,EAAc,EAAKA,YAAYD,QAC/BE,EAAW,EAAKC,SAASH,QAE/B,GAAK,EAAKI,YAAYxE,MAAtB,CAEA,EAAK6D,aAEL,IAAI7M,EAAS,EAAKwN,YAAYxE,MAO9B,GALIuD,EAAOxN,aAAamB,SAAW,IAAGF,IAAW,EAAKwN,YAAYxE,OAAOyE,QAAQ,GAAG/M,QAAQ,aAAc,KAKtGgN,OAAO1N,GAAQU,QAAQ,MAAO,KAAOgN,OAAOnB,EAAOvM,QAAQU,QAAQ,MAAO,IAAK,CACjF,GAAI6L,EAAO5F,SAAW4F,EAAOxN,aAAa4H,OAAS,EAYjD,OATA,EAAK2E,QAAQqC,OACb,EAAK7B,WAAW6B,OAChB,EAAKvG,MAAMF,IAAI,EAAKE,MAAML,eAC1B0F,YAAW,WACT,EAAKrF,MAAMH,SAAS,EAAKG,MAAML,UAC/B,EAAKK,MAAM8B,QAAQzI,KAAK,uBACxB,EAAKuL,MAAM2B,SACV,KAKLN,EAAYO,UAAUC,OAAOrE,KAAQsE,cACrCZ,EAAWU,UAAU9J,IAAI0F,KAAQuE,gBACjCV,EAAYO,UAAU9J,IAAI0F,KAAQwE,cAElCvB,YAAW,WACT,EAAKrF,MAAMN,aAAa,EAAKM,MAAML,UAEnC,EAAKyG,YAAYxE,MAAQ,GACzBkE,EAAWU,UAAUC,OAAOrE,KAAQuE,gBACpCV,EAAYO,UAAUC,OAAOrE,KAAQwE,cACrCX,EAAYO,UAAU9J,IAAI0F,KAAQsE,gBACjC,KACH,EAAKxC,QAAQqC,OACb,EAAK7B,WAAW6B,YAGhBL,EAASM,UAAU9J,IAAI0F,KAAQuE,gBAE/BtB,YAAW,WACT,EAAKrF,MAAMJ,YAAY,EAAKI,MAAML,UAElC,EAAKyG,YAAYxE,MAAQ,GACzBsE,EAASM,UAAUC,OAAOrE,KAAQuE,kBACjC,KACH,EAAKnH,MAAM+G,SA9II,EAmJnBd,WAAa,WACX,EAAKX,OAAO3K,SAAQ,SAACiL,GACnByB,cAAczB,OArJC,EAyJnB0B,QAAU,WACR,IAAM3B,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAC7C,EAAK8F,aAEL,EAAKjD,SAAS,CAAE9J,SAAU,GAAIsM,aAAcG,EAAOzM,WAInD,EAAK6M,gBAAgBJ,EAAQ,IAjKZ,EAsKnB4B,aAAe,SAACxQ,GACF,MAARA,EAAa,EAAK6P,YAAYxE,MAAQ,EAAKwE,YAAYxE,MAAMoF,MAAM,GAAI,GACtE,EAAKZ,YAAYxE,OAAjB,UAA6BrL,GAClC,EAAKiO,MAAM+B,QAzKM,EA4KnBtI,MAAQ,WACN,EAAK+B,MAAM/B,QACX,EAAK+B,MAAM8B,QAAQzI,KAAK,qBA5KxB,EAAK0M,WAAakB,IAAMC,YACxB,EAAKf,SAAWc,IAAMC,YACtB,EAAKjB,YAAcgB,IAAMC,YAJR,E,gEAUjB,IAAM/B,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UACX,IAA9BwF,EAAOxN,aAAakK,MAAaG,KAAKQ,SAAS,CAAE9J,SAAUyM,EAAOzM,SAAUsM,aAAcG,EAAOzM,WAInGsJ,KAAKuD,gBAAgBJ,EAAQ,K,2CAgB/B,IAAMA,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UACzCwF,EAAOzM,WAAasJ,KAAKhN,MAAMgQ,eAEC,IAA9BG,EAAOxN,aAAakK,MAEtBG,KAAKQ,SAAS,CAAE9J,SAAUyM,EAAOzM,SAAUsM,aAAcG,EAAOzM,WAIhEsJ,KAAKuD,gBAAgBJ,EAAQ,M,+BAwIzB,IAAD,OACDA,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UAC7CzK,QAAQC,IAAI,yBAA0B6M,KAAKhC,MAAML,SAAUwF,EAAOvM,OAAQuM,EAAOzM,SAAU,YAAayM,EAAOxM,WAE/G,IAAMwO,EACJ,eAAC,WAAD,WACE,qBAAKtE,IAAKb,KAAK+D,WAAY5D,UAAW,CAACC,KAAQiB,eAAgBjB,KAAQgF,SAASrE,KAAK,KAArF,SACE,mBAAGV,MAAO,CAAEgF,OAAQ,OAASlF,UAAU,kBAEzC,qBAAKU,IAAKb,KAAKmE,SAAUhE,UAAW,CAACC,KAAQiB,eAAgBjB,KAAQkF,OAAOvE,KAAK,KAAjF,SACGoC,EAAOvM,YAKd,OACE,sBAAKuJ,UAAW,CAAyB,MAAxBH,KAAKhC,MAAML,SAAmByC,KAAQmF,GAAKnF,KAAQoF,IAAIzE,KAAK,KAA7E,UACE,eAAC,GAAD,CAAOQ,OAAQvB,KAAKhN,MAAM+P,aAAclB,YAAa,kBAAM,EAAKrB,SAAS,CAAEuC,cAAc,KAAzF,UACE,iEACA,gCACE,oBAAGrB,KAAK,SAAST,QAASjB,KAAK/D,MAAO0F,SAAU,EAAGX,WAAYhB,KAAK/D,MAAOoE,MAAO,CAAEgF,OAAQ,QAAUlF,UAAW,CAAC,YAAa,iBAAkBH,KAAK2D,eAAe5C,KAAK,KAA1K,UACG,IADH,aAIA,oBACEW,KAAK,SACLT,QAAS,kBAAM,EAAKT,SAAS,CAAEuC,cAAc,KAC7CpB,SAAU,EACVX,WAAY,kBAAM,EAAKR,SAAS,CAAEuC,cAAc,KAChD1C,MAAO,CAAEgF,OAAQ,QACjBlF,UAAW,CAAC,YAAa,iBAAkB,WAAWY,KAAK,KAN7D,UAQG,IARH,kBAaHoE,EACD,qBAAKhF,UAAW,CAACC,KAAQqF,iBAAiB1E,KAAK,KAA/C,SACE,qBACEV,MAAO,CACLqF,SAAU,WACV5D,UAAoC,KAAxB9B,KAAKhC,MAAML,SAAiB,YAAc,kBACtDgI,WAAY,KACZC,KAAK,GAAD,OAAKzC,EAAO5F,QAAU,IAAM4F,EAAOxN,aAAa4H,QAAhD,OAENsI,IAAK7F,KAAKhC,MAAML,SAChBwC,UAAW,CAACC,KAAQqF,gBAAyC,IAAxBzF,KAAKhC,MAAML,SAAiByC,KAAQoF,GAAKpF,KAAQ0F,IAAI/E,KAAK,KAC/FgF,OAAO,OACPC,MAAM,QACN5D,IAAG,UAAK6D,aAAL,wBAA2CjG,KAAKhC,MAAML,SAAtD,YAGP,sBAAKwC,UAAWC,KAAQ8F,YAAxB,UACE,gCACE,sBAAM/F,UAAW,CAACH,KAAK4D,gBAAgB7C,KAAK,KAA5C,SACE,sBAAMZ,UAAW,CAACC,KAAQ+F,YAAYpF,KAAK,KAA3C,SAAkDoC,EAAO7F,SAE3D,uBAAM+C,MAAO,CAAEqF,SAAU,YAAcvF,UAAW,CAACH,KAAK4D,gBAAgB7C,KAAK,KAA7E,UACE,uBAAMZ,UAAW,CAAC,WAAYC,KAAQgG,OAAOrF,KAAK,KAAlD,UACE,sBAAMZ,UAAW,CAAC,0BAA0BY,KAAK,OACjD,wBAAQZ,UAAU,cAAcE,MAAO,CAAEgG,MAAO,QAAhD,SACGlD,EAAO5F,YAGZ,8BACE,mBAAGmE,KAAK,SAAST,QAAS,kBAAM,EAAKT,SAAS,CAAEuC,cAAc,KAASpB,SAAU,EAAGX,WAAY,kBAAM,EAAKR,SAAS,CAAEuC,cAAc,KAAS5C,UAAWC,KAAQkG,MAAhK,SACE,mBAAGnG,UAAU,iCAMrB,uBAAMU,IAAKb,KAAKiE,YAAa9D,UAAWC,KAAQmG,SAAhD,UACE,cAACC,GAAA,EAAD,CAAeC,WAAW,WAAWC,QAAS,IAA9C,SACE,8BACE,sBAAMrG,MAAO,CAAEC,QAAS,eAAgBqG,SAAU,SAAWC,wBAAyB,CAAEC,OAAQ7G,KAAKhN,MAAM0D,gBAG/G,sBAAKyJ,UAAWC,KAAQ0G,QAAxB,UACE,mBACE3G,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAK0D,aACd/B,SAAU,EACVX,WAAYhB,KAAK0D,aANnB,SAQE,mBAAGvD,UAAU,4BAEf,mBACEA,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAKtC,aACdiE,SAAU,EACVX,WAAYhB,KAAKtC,aANnB,SAQE,mBAAGyC,UAAU,6BAEf,mBACEA,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAK8E,QACdnD,SAAU,EACVX,WAAYhB,KAAK8E,QANnB,SAQE,mBAAG3E,UAAU,uBAGjB,uBACEU,IAAK,SAAC3C,GACJ,EAAKkG,YAAclG,GAErB8I,UAAW,kBAAM,GACjBhG,WAAY,kBAAM,GAClBiG,QAAS,kBAAM,GACfpR,KAAK,OACLqR,UAAU,IACV/G,UAAW,CAAC,SAAU,iBAAkBH,KAAK4D,eAAgBxD,KAAQ+G,QAAQpG,KAAK,aAIxF,sBAAKZ,UAAWC,KAAQgH,UAAxB,UACE,wBAAQvR,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,YAAa,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAAxL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBACEV,MAAO,CAAEC,QAAS,CAAC,aAAajK,SAAS8M,EAAOxN,aAAaE,MAAQ,OAAS,SAC9EA,KAAK,SACLwR,gBAAerH,KAAKhC,MAAML,SAC1BsD,QAAS,kBAAM,EAAK8D,aAAa,MACjC5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KALtF,eASA,wBACEV,MAAO,CAAEC,QAAS,CAAC,aAAajK,SAAS8M,EAAOxN,aAAaE,MAAQ,QAAU,QAC/EA,KAAK,SACLwR,gBAAerH,KAAKhC,MAAML,SAC1BsD,QAAS,kBAAM,EAAK8D,aAAa,MACjC5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KALtF,eASA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAGA,wBAAQlL,KAAK,SAASwR,gBAAerH,KAAKhC,MAAML,SAAUsD,QAAS,kBAAM,EAAK8D,aAAa,MAAM5E,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KAArL,eAIA,wBACElL,KAAK,SACLwR,gBAAerH,KAAKhC,MAAML,SAC1BsD,QAAS,SAAC/C,GAAD,OAAO,EAAK2F,QAAQ3F,EAAEuC,cAAc6G,QAAQ3J,WACrDwC,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQmH,OAAOxG,KAAK,KAJlF,0B,GAtXuBG,iBAoZlBC,gBAhBS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAKK,SAACb,GAAD,MAAe,CACxCP,MAAO,kBAAMO,EAAS4E,OAGtB1D,aAAc,SAACC,GAAD,OAAcnB,EAAS4E,GAA4BzD,KACjEC,YAAa,SAACD,GAAD,OAAcnB,EAAS4E,GAA2BzD,KAC/DG,IAAK,SAACH,GAAD,OAAcnB,EAAS4E,GAAmBzD,KAC/CE,SAAU,kBAAMrB,EAAS4E,UAGZD,CAA6Cc,I,kBC5W7CuF,OAxDf,SAAsBxJ,GACpB,IAAMyJ,EAASzJ,EAAMX,QAAQ,GAAGE,QAAUS,EAAMX,QAAQ,GAAGE,OAASS,EAAMX,QAAQ,GAAGC,KAAOU,EAAMX,QAAQ,GAAGC,KAEvGoK,EAAU,WACd1J,EAAM/B,QACN+B,EAAM8B,QAAQzI,KAAK,qBAGfgG,EAAU,YAAIW,EAAMX,SAASsK,UAAU1H,KAAI,SAACkD,GAChD,IAAKA,EAAO7F,KAAM,OAAO,cAAC,WAAD,GAAe6F,EAAOjG,IAC/C,IAAM0K,GAASzE,EAAO5F,QAAUkK,IAAWtE,EAAO7F,KAAO,GAAK,GAC9D,OACE,gCACE,+BACGmK,IAAWtE,EAAO7F,KAAO,WAAa,cADzC,IACyD6F,EAAO7F,QAEhE,uBAAM6C,UAAW,CAAC,WAAYC,UAAeW,KAAK,KAAlD,UACE,sBAAMZ,UAAW,CAAC,0BAA0BY,KAAK,OACjD,wBAAQZ,UAAU,cAAlB,SAAiCgD,EAAO5F,SACxC,sBAAM4C,UAAWC,cAAjB,wBAcF,uBAAMD,UAAW,CAAC,WAAYC,UAAeW,KAAK,KAAlD,UACE,sBAAMZ,UAAW,CAAC,0BAA0BY,KAAK,OACjD,wBAAQZ,UAAU,cAAlB,SAAiCsH,IAAWtE,EAAO7F,KAAO,GAAK,IAC/D,sBAAM6C,UAAWC,cAAjB,0BAEF,uBAAMD,UAAW,CAAC,WAAYC,UAAeW,KAAK,KAAlD,UACE,sBAAMZ,UAAW,CAAC,0BAA0BY,KAAK,OACjD,wBAAQZ,UAAU,cAAlB,SAAiCyH,IACjC,sBAAMzH,UAAWC,cAAjB,wBA7BM+C,EAAOjG,OAkCrB,OACE,sBAAKiD,UAAWC,gBAAhB,UACG/C,EACD,wBAAQxH,KAAK,SAASoL,QAASyG,EAAW1G,WAAY0G,EAAWvH,UAAW,CAAC,SAAU,iBAAkBC,UAAeW,KAAK,KAA7H,+B,2BCtCS8G,OAXf,YAAgC,IAATC,EAAQ,EAARA,KACfC,EAAQ,YACXD,EACE7H,KAAI,SAAC+H,GACJ,MAAM,GAAN,OAAUA,EAAEpL,IAAI,KAAhB,YAAwBoL,EAAEpL,IAAI,SAE/BmE,KAAK,QAEV,OAAO,sBAAMZ,UAAWC,QAAc6H,EAAGF,KCG5BG,OAVf,YAA6B,IAAVC,EAAS,EAATA,MACjB,OACE,qBAAKhI,UAAWC,WAAhB,SACG+H,EAAMlI,KAAI,SAAC6H,EAAM5H,GAAP,OACT,cAAC,GAAD,CAAyB4H,KAAMA,GAAb5H,S,ICHHkI,Y,OCEjBC,G,kDACJ,WAAYrK,GAAQ,IAAD,uBACjB,cAAMA,IASRsK,OAAS,WAAO,IACR/J,EAAY,EAAKvL,MAAjBuL,QACF,EAAKvL,MAAMuV,cAAgB,EAAKvV,MAAMuL,QAASA,EAAU,YACnD,EAAKvL,MAAMuV,aAAe,EAAKvV,MAAMuL,UAASA,EAAU,IAElE,EAAKP,MAAMwK,eAAe,EAAKxV,MAAMuV,YAAa,EAAKvV,MAAMsL,QAASC,GACtE,EAAKP,MAAM8B,QAAQzI,KAAK,qBAdxB,IAAMgG,EAAU,CAAEW,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,SAAWU,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,IAFlG,OAGjB,EAAKtK,MAAQ,CACXuV,cAAevK,EAAMuK,YACrBjK,QAASjB,EAAQ,GACjBkB,QAASlB,EAAQ,IANF,E,qDAmBT,IAAD,OACP,OACE,gCACE,oBAAIgD,MAAO,CAAES,UAAW,UAAxB,wBACA,sBAAKX,UAAWC,mBAAhB,UACE,sBAAKD,UAAWC,aAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAK,OAAOsC,MAAM,QAAQW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAS,CAAE+H,aAAa,KAAU7H,gBAAiBV,KAAKhN,MAAMuV,cAClI,kDACA,uBAAO1S,KAAK,OAAO4S,YAAY,cAAclI,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAS,CAAElC,QAASJ,EAAEuC,cAAcb,SAAUtC,KAAK,UAAUsC,MAAOI,KAAKhN,MAAMsL,aAGpJ,gCACE,uBAAOzI,KAAK,QAAQyH,KAAK,OAAOsC,MAAM,OAAOW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAS,CAAE+H,aAAa,KAAS7H,iBAAkBV,KAAKhN,MAAMuV,cACjI,+CACA,uBACElI,MAAO,CAAEqI,WAAa1I,KAAKhN,MAAMuV,YAAyB,UAAX,UAC/C1S,KAAK,OACLyH,KAAK,UACLmL,YAAY,cACZlI,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAS,CAAEjC,QAASL,EAAEuC,cAAcb,SAC1DA,MAAOI,KAAKhN,MAAMuL,gBAIxB,qBAAK8B,MAAO,CAAEC,QAAS,OAAQqI,SAAU,MAAOC,eAAgB,WAAYC,YAAa,QAAzF,SACE,wBACEhT,KAAK,SACL+J,MAAM,QAENqB,QAASjB,KAAKsI,OACdnI,UAAW,CAAC,SAAU,iBAAkBC,UAAeW,KAAK,KAL9D,iC,GA9CkBG,iBAuEfC,gBATS,SAACnO,GAAD,MAAY,CAClCuV,YAAavV,EAAM2J,KAAK4L,YACxBlL,QAASrK,EAAM2J,KAAKU,YAGK,SAACb,GAAD,MAAe,CACxCgM,eAAgB,SAACD,EAAanM,EAAaC,GAA3B,OAA2CG,EfsC9B,SAAC+L,EAAanM,EAAaC,GACxD,OAAO,SAACG,EAAUC,GAChB,IAAMY,EAAO,YAAOZ,IAAWE,KAAKU,SACpCA,EAAQ,GAAGC,KAAOlB,EAClBiB,EAAQ,GAAGC,KAAOjB,EAClBG,EAAS,CACP3G,KAAMqG,EACNqM,YAAaA,EACblL,QAASA,Ke9CuD+D,CAA+BmH,EAAanM,EAAaC,QAGhH8E,CAA6CkH,I,UCzEtDS,G,kDACJ,WAAY9K,GAAQ,IAAD,8BACjB,cAAMA,IAEDhL,MAAQ,GAHI,E,qDAMT,IAAD,OACDqK,EAAU2C,KAAKhC,MAAMX,QAAQ4C,KAAI,SAACkD,EAAQjD,GAAT,OAAoBiD,EAAO7F,KAAO,cAAC,GAAD,CAAoBwC,QAAS,EAAK9B,MAAM8B,QAAyBnC,SAAQ,UAAKwF,EAAOjG,KAA/BiG,EAAOjG,IAAmC,cAAC,WAAD,GAAeiG,EAAOjG,OAC/L,OACE,qBACEiD,UAAWC,QACXC,MAAO,CACL0I,gBAAgB,OAAD,OAAS9C,aAAT,4BAHnB,SAMG5I,Q,GAhBqB6D,iBA6BfC,gBANS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAGK,SAACb,GAAD,MAAe,KAE3B2E,CAA6C2H,I,6BCzBtDE,I,yDACJ,WAAYhL,GAAQ,IAAD,uBACjB,cAAMA,IA0CRC,aAAe,SAACC,GACdA,EAAEC,iBADkB,MAGsF,EAAKC,KAA9FC,GAHG,EAGZC,QAHY,EAGHD,SAASG,EAHN,EAGMA,SAAUC,EAHhB,EAGgBA,UAAWC,EAH3B,EAG2BA,MAAOC,EAHlC,EAGkCA,QAASC,EAH3C,EAG2CA,SAAUO,EAHrD,EAGqDA,MAAOE,EAH5D,EAG4DA,OAAQE,EAHpE,EAGoEA,OAAQE,EAH5E,EAG4EA,MAE1FE,EAAgB,CACpB9J,KAAM6I,EAAMkB,MACZ9J,KAAM0I,EAASoB,MACf7J,QAASsI,EAAQuB,MACjB9I,SAAU,CAAC,MAAMT,SAASqI,EAAMkB,QAAUnB,EAAUmB,MAAQ,EAC5DrC,QAASoB,EAAQiB,MACjBC,MAAO,CAAC,KAAM,MAAO,OAAOxJ,SAASqI,EAAMkB,QAAUP,EAAOO,MAAQ,EACpErI,KAAM4H,EAAMS,MACZ1G,KAAMuG,EAAMG,MACZ/I,OAAQ0I,EAAOK,MACf5J,QAA4B,SAAnB4I,EAASgB,OAgBpB,EAAK5B,MAAM7B,MAAM,EAAKnJ,MAAMsL,QAAS,GAAIqB,EAAeA,GACxD,EAAK3B,MAAM8B,QAAQzI,KAAK,oBAzExB,IAAMgG,EAAU,CAAEW,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,SAAWU,EAAMX,SAAWW,EAAMX,QAAQ,GAAGC,MAAS,IAC7GzH,EAAO,CAAEmI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaE,MAAS,KAAOmI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaE,MAAS,MACrHmI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaI,OAAiBiI,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaI,OAJ/G,OAMjB,EAAK/C,MAAQ,CACX0L,MAAO7I,EAAK,GACZwI,QAAUL,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaI,QAAW,EACpEuI,QAASjB,EAAQ,GACjBmB,SAAWR,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaG,KAAQ,EAClE2I,UAAYT,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAamB,UAAa,EACxE6H,QAAUX,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAa4H,QAAW,GACpEqB,SAAUZ,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAaK,QACzDmJ,MAAOnB,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAa4B,KACtD8H,OAASrB,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAakK,OAAU,EAClEN,OAASvB,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAakB,OAAU,EAClE4I,MAAOzB,EAAMX,SAAWW,EAAMX,QAAQ,GAAG1H,aAAauD,MAjBvC,E,qDAkFT,IAAD,OAGDiK,EAAS,CAAEnD,KAAKhC,MAAMX,SAAW2C,KAAKhC,MAAMX,QAAQ,GAAGC,MAAS,UAH/D,EAMwB0C,KAAKhC,MAAMX,QAAQ,GAApC1H,GANP,EAMC2H,KAND,EAMO3H,cACRoK,EACJ,8BACE,sBAAKI,UAAU,SAAf,UACE,sBAAKA,UAAW,CAAC,YAAaC,SAAcW,KAAK,KAAjD,UACE,sBAAKZ,UAAWC,UAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAI,cARtB,GAQwCsC,MAAM,KAAKW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BARpE,GAQsGtC,EAAEuC,cAAcb,SAAUc,eAAsC,OAAtB/K,EAAaE,OAC/J,0CAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAZtB,GAYwCsC,MAAM,IAAIW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAZnE,GAYqGtC,EAAEuC,cAAcb,SAAUc,eAAsC,MAAtB/K,EAAaE,OAC9J,yCAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAhBtB,GAgBwCsC,MAAM,IAAIW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAhBnE,GAgBqGtC,EAAEuC,cAAcb,SAAUc,eAAsC,MAAtB/K,EAAaE,OAC9J,yCAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cApBtB,GAoBwCsC,MAAM,MAAMW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BApBrE,GAoBuGtC,EAAEuC,cAAcb,SAAUc,eAAsC,QAAtB/K,EAAaE,OAChK,8CAGJ,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAzBpB,GAyBsCsC,MAAM,KAAKW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAzBlE,GAyBoGtC,EAAEuC,cAAcb,SAAUc,eAAsC,OAAtB/K,EAAaE,OAC/J,sCACG,0CAGL,sBAAKsK,UAAWC,UAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAI,cAhCtB,GAgCwCsC,MAAM,SAASW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAhCxE,GAgC0GtC,EAAEuC,cAAcb,SAAUc,eAAsC,WAAtB/K,EAAaE,OACnK,uDAEF,gCACE,uBACEA,KAAK,QACLyH,KAAI,cAtCJ,GAuCAsC,MAAM,YACNW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAxCjB,GAwCmDtC,EAAEuC,cAAcb,SACnEc,eAAsC,cAAtB/K,EAAaE,OAE/B,sDAGJ,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cA/CpB,GA+CsCsC,MAAM,MAAMW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BA/CnE,GA+CqGtC,EAAEuC,cAAcb,SAAUc,eAAsC,QAAtB/K,EAAaE,OAChK,2DAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAnDpB,GAmDsCsC,MAAM,OAAOW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAnDpE,GAmDsGtC,EAAEuC,cAAcb,SAAUc,eAAsC,SAAtB/K,EAAaE,OACjK,4CAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cAvDpB,GAuDsCsC,MAAM,QAAQW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BAvDrE,GAuDuGtC,EAAEuC,cAAcb,SAAUc,eAAsC,UAAtB/K,EAAaE,OAClK,6CAEF,gCACE,uBAAOA,KAAK,QAAQyH,KAAI,cA3DpB,GA2DsCsC,MAAM,OAAOW,SAAU,SAACrC,GAAD,OAAO,EAAKsC,SAAL,8BA3DpE,GA2DsGtC,EAAEuC,cAAcb,SAAUc,eAAsC,SAAtB/K,EAAaE,OACjK,+CAGJ,qBAAKsK,UAAW,CAAC,aAAaY,KAAK,KAAnC,SACE,sBAAKZ,UAAW,CAACC,YAAiBW,KAAK,KAAvC,UACE,sBAAKV,MAAO,CAAEC,QAAS,CAAC,KAAM,MAAO,IAAK,IAAK,KAAM,OAAQ,OAAQ,SAASjK,SAAS2J,KAAKhN,MAAL,cAjEnF,KAiEiH,OAAS,QAA9H,UACE,wCACA,cAAC,KAAD,CAAYsK,KAAK,UAAU2L,SAAU,EAAGC,SAAU,EAAGtJ,MAAOI,KAAKhN,MAAMqL,QAASkC,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAEnC,QAASuB,KAAUuJ,KAAM,OAGhJ,sBAAK9I,MAAO,CAAEM,WAAY,MAAOL,QAAS,CAAC,KAAM,MAAO,OAAOjK,SAAS2J,KAAKhN,MAAL,cAtEpE,KAsEkG,OAAS,QAA/G,UACE,yCACA,cAAC,KAAD,CAAYsK,KAAK,WAAW2L,SAAU,EAAGC,SAAU,GAAItJ,MAAOI,KAAKhN,MAAMwL,SAAU+B,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAEhC,SAAUoB,KAAUuJ,KAAM,OAGpJ,sBAAK9I,MAAO,CAAEC,QAA0C,IAAjCN,KAAKhN,MAAL,gBA3EnB,KA2EyD,CAAC,MAAMqD,SAAS2J,KAAKhN,MAAL,cA3EzE,KA2EuG,OAAS,QAApH,UACE,2CACA,sBAAKmN,UAAWC,SAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAI,cA/E1B,GA+E4CsC,MAAM,IAAIc,eAAsC,MAAtB/K,EAAa4B,OACjF,2CAEF,gCACE,uBAAO1B,KAAK,QAAQyH,KAAI,cAnF1B,GAmF4CsC,MAAM,IAAIc,eAAsC,MAAtB/K,EAAa4B,OACjF,gDAIN,sBAAK8I,MAAO,CAAEC,QAAS,CAAC,YAAY,UAAUjK,SAAS2J,KAAKhN,MAAL,cAxFnD,KAwFiF,OAAS,QAA9F,UACE,sCACA,sBAAKmN,UAAWC,SAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAI,cA5F1B,GA4F4CsC,MAAM,IAAIc,eAAsC,MAAtB/K,EAAauD,OACjF,2CAEF,gCACE,uBAAOrD,KAAK,QAAQyH,KAAI,cAhG1B,GAgG4CsC,MAAM,IAAIc,eAAsC,MAAtB/K,EAAauD,OACjF,gDAIN,sBAAKmH,MAAO,CAAEC,QAAS,CAAC,KAAM,YAAa,UAAUjK,SAAS2J,KAAKhN,MAAL,cArG1D,KAqGwF,OAAS,QAArG,UACE,uCACA,cAAC,KAAD,CACEsK,KAAK,SACL2L,SAAU,EACVC,SAAyC,OAA/BlJ,KAAKhN,MAAL,cA1GV,IA0GgD,EAAI,EACpD4M,MAAOI,KAAKhN,MAAMuM,OAClBgB,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAEjB,OAAQK,KAC7CuJ,KAAM,OAGV,sBAAK9I,MAAO,CAAEC,QAAS,CAAC,KAAM,MAAO,OAAOjK,SAAS2J,KAAKhN,MAAL,cAhHjD,KAgH+E,OAAS,QAA5F,UACE,uCACA,cAAC,KAAD,CAAYsK,KAAK,SAAS2L,SAAU,EAAGC,SAAU,GAAItJ,MAAOI,KAAKhN,MAAMqM,OAAQkB,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAEnB,OAAQO,KAAUuJ,KAAM,EAAGC,YAAa,SAACxJ,GAAD,gBAAcA,EAAd,WAE9J,sBAAKS,MAAO,CAAEC,QAAS,QAAvB,UACE,0CACA,sBAAKH,UAAWC,SAAhB,UACE,gCACE,uBAAOvK,KAAK,QAAQyH,KAAI,iBAxH1B,GAwH+CsC,MAAM,OAAOc,iBAAkB/K,EAAaK,UACzF,2CAEF,gCACE,uBAAOH,KAAK,QAAQyH,KAAI,iBA5H1B,GA4H+CsC,MAAM,QAAQc,gBAAiB/K,EAAaK,UACzF,gDAIN,sBAAKqK,MAAO,CAAEC,QAAwC,OAA/BN,KAAKhN,MAAL,cAjInB,IAiIyD,OAAS,QAAtE,UACE,0CACA,cAAC,KAAD,CAAYsK,KAAK,YAAY2L,SAAU,EAAGC,SAAU,EAAGtJ,MAAOI,KAAKhN,MAAMyL,UAAW8B,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAE/B,UAAWmB,KAAUuJ,KAAM,OAEtJ,sBAAK9I,MAAO,CAAEC,QAAS,QAAvB,UACE,wCACA,cAAC,KAAD,CAAYhD,KAAK,UAAU2L,SAAU,EAAGC,SAAU,GAAItJ,MAAOI,KAAKhN,MAAM2L,QAAS4B,SAAU,SAACX,GAAD,OAAW,EAAKY,SAAS,CAAE7B,QAASiB,KAAUuJ,KAAM,OAEjJ,qBAAK9I,MAAO,CAAEC,QAAS,mBAzInB,GAoJd,OACE,cAAC,WAAD,UACE,uBACEM,SAAUZ,KAAK/B,aACf4C,IAAK,SAAC3C,GACJ,EAAKE,KAAOF,GAHhB,UAME,qBAAIiC,UAAU,eAAeE,MAAO,CAAE2F,MAAO,OAAQlF,UAAW,UAAhE,wBACcqC,KAEd,sBAAKhD,UAAW,CAAC,eAAgBC,sBAA2BW,KAAK,KAAjE,UACGhB,EACD,gCACE,wBACElK,KAAK,SACL+J,MAAM,QAGNO,UAAW,CAAC,SAAU,WAAYC,UAAeW,KAAK,KALxD,sBAUA,wBACElL,KAAK,SACL+J,MAAM,OAENoB,WAAY,SAAC9C,GAAD,OAAO,EAAKF,MAAM8B,QAAQzI,KAAK,eAC3C4J,QAAS,SAAC/C,GAAD,OAAO,EAAKF,MAAM8B,QAAQzI,KAAK,eACxC8I,UAAW,CAAC,SAAU,WAAY,WAAYC,UAAeW,KAAK,KANpE,qC,GApQkBG,kBA8RjBC,gBARS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAGK,SAACb,GAAD,MAAe,CACxCL,MAAO,SAACC,EAAaC,EAAaC,EAAeC,GAA1C,OAA4DC,EAAS4E,GAAqBhF,EAAaC,EAAaC,EAAeC,QAG7H4E,CAA6C6H,I,kDC7L7CK,G,4MA7FbC,aAAe,SAACpL,GACd,IAAItH,EAAS,EAAKwN,YAAYxE,MAC1B,EAAK5B,MAAMuL,YAAW3S,EAAM,UAAM,EAAKwN,YAAYxE,OAAvB,OAA+B,EAAK5B,MAAMuL,WAA1C,OAAsD,EAAKC,aAAa5J,QACxG,EAAK5B,MAAM6F,QAAQjN,I,EAErB6S,eAAiB,SAACvL,GACF,UAAVA,EAAE9F,KACJ,EAAKkR,aAAapL,I,EAItBwL,gBAAkB,SAACxL,GACH,UAAVA,EAAE9F,KACJ,EAAKoR,aAAaG,S,EAItBC,WAAa,WACX,EAAKxF,YAAYxE,MAAQ,GACrB,EAAK5B,MAAMuL,YAAW,EAAKC,aAAa5J,MAAQ,IACpD,EAAKiK,c,EAGPA,WAAa,WACX,EAAKzF,YAAYuF,S,kEA7BjB3J,KAAKhC,MAAM8L,YAAY9J,KAAK4J,YAC5B5J,KAAKhC,MAAM+L,YAAY/J,KAAK6J,YAC5B7J,KAAKoE,YAAYuF,U,+BAgCT,IAAD,OACHK,EACF,uBACEnJ,IAAK,SAAC3C,GACJ,EAAKkG,YAAclG,GAErB+L,UAAU,UACVjD,UAAWhH,KAAKyJ,eAChB5T,KAAK,OACLqR,UAAU,IACV/G,UAAW,CAAC,SAAU,kBAAkBY,KAAK,OAkCjD,OA9BIf,KAAKhC,MAAMuL,YACbS,EACE,eAAC,WAAD,WACE,uBACEvB,YAAY,MACZ5H,IAAK,SAAC3C,GACJ,EAAKkG,YAAclG,GAErB+L,UAAU,UACVjD,UAAWhH,KAAK0J,gBAChB7T,KAAK,OACLqR,UAAU,IACV/G,UAAW,CAAC,SAAU,kBAAkBY,KAAK,OAE9Cf,KAAKhC,MAAMuL,UACZ,uBACEd,YAAY,MACZ5H,IAAK,SAAC3C,GACJ,EAAKsL,aAAetL,GAEtB+L,UAAU,UACVjD,UAAWhH,KAAKyJ,eAChB5T,KAAK,OACLqR,UAAU,IACV/G,UAAW,CAAC,SAAU,kBAAkBY,KAAK,WAOnD,eAAC,WAAD,WACGiJ,EAED,wBAAQnU,KAAK,SAASoL,QAASjB,KAAKsJ,aAAcnJ,UAAW,CAAC,SAAU,iBAAkB,aAAcC,KAAQmH,OAAOxG,KAAK,KAA5H,uB,GArFkBG,iBCepBgJ,G,kDAkBJ,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IAlBRkE,QAAU,IAAIC,QAAK,CAAEC,IAAKC,GAAcC,OAAQ,IAiB7B,EAhBnB9E,MAAQ,IAAI2E,QAAK,CAAEC,IAAKG,GAAYD,OAAQ,IAgBzB,EAfnBE,MAAQ,IAAIL,QAAK,CAAEC,IAAKK,GAAYH,OAAQ,IAezB,EAdnBI,WAAa,IAAIP,QAAK,CAAEC,IAAKO,GAAiBL,OAAQ,IAcnC,EAbnBM,MAAQ,IAAIT,QAAK,CAAEC,IAAKS,GAAYP,OAAQ,IAazB,EAZnBQ,OAAS,GAYU,EAVnB9P,MAAQ,CAIN+P,cAAc,EACdrM,SAAU,GACVsM,aAAc,GACdC,SAAU,GAGO,EA6CnBC,oBAAsB,SAACC,GACrB,IAAMC,EAAQC,YAAW,WACnB,EAAKrQ,MAAMiQ,UAAYE,EAAOxM,UAAUmB,SAC5C,EAAK0I,UAAS,SAAC8C,GAAD,MAAgB,CAAEL,SAAUK,EAAUL,SAAW,EAAGvM,SAAUyM,EAAOxM,UAAU2M,EAAUL,UAAWD,aAAcG,EAAOzM,aACvI,EAAKwM,oBAAoBC,MACxB,IAAOA,EAAOxN,aAAakK,OAC9B,EAAKiD,OAAOzL,KAAK+L,IAnDA,EAsDnBG,gBAAkB,SAACJ,EAAQK,GAEzB,EAAKuG,cACL,IAAIhT,GACJA,EAAIyM,GAAML,EAAOxM,UAAUmB,OAASqL,EAAOxM,UAAUmB,OAAS,EAAI0L,IACzDL,EAAOxM,UAAUmB,QAAUf,EAAI,IAExC,EAAKyJ,UAAS,SAAC8C,GAAD,MAAgB,CAAEL,SAAUlM,EAAI,EAAGL,SAAUyM,EAAOxM,UAAUI,GAAIiM,aAAcG,EAAOzM,aACrG,EAAKwM,oBAAoBC,KA9DR,EAiEnBzF,aAAe,WACb,EAAK+F,aAEL,IAAMN,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAC7C,EAAK4F,gBAAgBJ,EAAQ,EAAKnQ,MAAMiQ,WArEvB,EAwEnBS,aAAe,WACb,EAAKD,aACL,IAAMN,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAE7C,EAAK4F,gBAAgBJ,EAAQ,EAAKnQ,MAAMiQ,SAAW,IA5ElC,EA+EnBU,YAAc,WACZ,MAAO,cAhFU,EAmFnBC,aAAe,WACb,MAAO,cApFU,EAuFnB6F,eAAiB,SAACvL,GACF,UAAVA,EAAE9F,KACJ,EAAKyL,WAzFU,EA6FnBA,QAAU,SAACO,GACT,IAAMjB,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UACvCmG,EAAa,EAAKC,WAAWC,QAC7BC,EAAc,EAAKA,YAAYD,QAC/BE,EAAW,EAAKC,SAASH,QAE/B,GAAKI,EAAL,CAEA,EAAKX,aAEL,IAAI7M,EAASwN,EAOb,GALIjB,EAAOxN,aAAamB,SAAW,IAAGF,IAAWwN,GAAaC,QAAQ,GAAG/M,QAAQ,aAAc,KAK3FgN,OAAO1N,GAAQU,QAAQ,MAAO,KAAOgN,OAAOnB,EAAOvM,QAAQU,QAAQ,MAAO,IAAK,CACjF,GAAI6L,EAAO5F,SAAW4F,EAAOxN,aAAa4H,OAAS,EAYjD,OATA,EAAK2E,QAAQqC,OACb,EAAK7B,WAAW6B,OAChB,EAAKvG,MAAMF,IAAI,EAAKE,MAAML,eAC1B0F,YAAW,WACT,EAAKrF,MAAMH,SAAS,EAAKG,MAAML,UAC/B,EAAKK,MAAM8B,QAAQzI,KAAK,uBACxB,EAAKuL,MAAM2B,SACV,KAKLN,EAAYO,UAAUC,OAAOrE,KAAQsE,cACrCZ,EAAWU,UAAU9J,IAAI0F,KAAQuE,gBACjCV,EAAYO,UAAU9J,IAAI0F,KAAQwE,cAElCvB,YAAW,WACT,EAAKrF,MAAMN,aAAa,EAAKM,MAAML,UAEnC,EAAKmM,cACLhG,EAAWU,UAAUC,OAAOrE,KAAQuE,gBACpCV,EAAYO,UAAUC,OAAOrE,KAAQwE,cACrCX,EAAYO,UAAU9J,IAAI0F,KAAQsE,gBACjC,KACH,EAAKxC,QAAQqC,OACb,EAAK7B,WAAW6B,YAGhBL,EAASM,UAAU9J,IAAI0F,KAAQuE,gBAE/BtB,YAAW,WACT,EAAKrF,MAAMJ,YAAY,EAAKI,MAAML,UAElC,EAAKmM,cACL5F,EAASM,UAAUC,OAAOrE,KAAQuE,kBACjC,KACH,EAAKnH,MAAM+G,SAtJI,EA2JnBd,WAAa,WACX,EAAKX,OAAO3K,SAAQ,SAACiL,GACnByB,cAAczB,OA7JC,EAiKnB0B,QAAU,WACR,IAAM3B,EAAS,EAAKnF,MAAMX,QAAQ,EAAKW,MAAML,UAC7C,EAAK8F,aAEL,EAAKjD,SAAS,CAAE9J,SAAU,GAAIsM,aAAcG,EAAOzM,WAInD,EAAK6M,gBAAgBJ,EAAQ,IAzKZ,EAoLnBlH,MAAQ,WACN,EAAK+B,MAAM/B,QACX,EAAK+B,MAAM8B,QAAQzI,KAAK,qBApLxB,EAAK0M,WAAakB,IAAMC,YACxB,EAAKf,SAAWc,IAAMC,YACtB,EAAKjB,YAAcgB,IAAMC,YAJR,E,gEAUjB,IAAM/B,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UACX,IAA9BwF,EAAOxN,aAAakK,MAAaG,KAAKQ,SAAS,CAAE9J,SAAUyM,EAAOzM,SAAUsM,aAAcG,EAAOzM,WAInGsJ,KAAKuD,gBAAgBJ,EAAQ,K,2CAgB/B,IAAMA,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UACzCwF,EAAOzM,WAAasJ,KAAKhN,MAAMgQ,eAEC,IAA9BG,EAAOxN,aAAakK,MAEtBG,KAAKQ,SAAS,CAAE9J,SAAUyM,EAAOzM,SAAUsM,aAAcG,EAAOzM,WAIhEsJ,KAAKuD,gBAAgBJ,EAAQ,M,+BAgJzB,IAAD,OACDA,EAASnD,KAAKhC,MAAMX,QAAQ2C,KAAKhC,MAAML,UAC7CzK,QAAQC,IAAI,yBAA0B6M,KAAKhC,MAAML,SAAUwF,EAAOvM,OAAQuM,EAAOzM,SAAU,YAAayM,EAAOxM,WAC/G,IAAI4S,EAAY,GAChBA,EAAyC,cAA7BpG,EAAOxN,aAAaE,KAAuB,IAAM0T,EAC7DA,EAAyC,WAA7BpG,EAAOxN,aAAaE,KAAoB,IAAM0T,EAE1D,IAAMpE,EACJ,eAAC,WAAD,WACE,qBAAKtE,IAAKb,KAAK+D,WAAY5D,UAAW,CAACC,KAAQiB,eAAgBjB,KAAQgF,SAASrE,KAAK,KAArF,StBkPC1H,EAvBiB,CACtB,aACA,aACA,QACA,WACA,WACA,aACA,cACA,aACA,aACA,YACA,cACA,cACA,SACA,YACA,YACA,cACA,WACA,QACA,UACA,YACA,iBsB7OI,sBAAKwH,IAAKb,KAAKmE,SAAUhE,UAAW,CAACC,KAAQiB,eAAgBjB,KAAQkF,OAAOvE,KAAK,KAAjF,oBtBoPC1H,EADiB,CAAC,YAAa,cAAe,QAAS,aAAc,iBAAkB,kBsBlPjD,uBADvC,mBACuD8J,EAAOvM,cAKlE,OACE,sBAAKuJ,UAAW,CAACC,KAAQ8J,qBAAqBnJ,KAAK,KAAnD,UACE,eAAC,GAAD,CAAOQ,OAAQvB,KAAKhN,MAAM+P,aAAclB,YAAa,kBAAM,EAAKrB,SAAS,CAAEuC,cAAc,KAAzF,UACE,iEACA,gCACE,oBAAGrB,KAAK,SAAST,QAASjB,KAAK/D,MAAO0F,SAAU,EAAGX,WAAYhB,KAAK/D,MAAOoE,MAAO,CAAEgF,OAAQ,QAAUlF,UAAW,CAAC,YAAa,iBAAkBH,KAAK2D,eAAe5C,KAAK,KAA1K,UACG,IADH,aAIA,oBACEW,KAAK,SACLT,QAAS,kBAAM,EAAKT,SAAS,CAAEuC,cAAc,KAC7CpB,SAAU,EACVX,WAAY,kBAAM,EAAKR,SAAS,CAAEuC,cAAc,KAChD1C,MAAO,CAAEgF,OAAQ,QACjBlF,UAAW,CAAC,YAAa,iBAAkB,WAAWY,KAAK,KAN7D,UAQG,IARH,kBAaHoE,EACD,qBAAKhF,UAAW,CAACC,KAAQqF,iBAAiB1E,KAAK,KAA/C,SACE,qBAAKZ,UAAU,yBAAf,SACE,qBAAKA,UAAU,mCAAmCE,MAAO,CAAE2F,MAAM,GAAD,OAAK7C,EAAO5F,QAAU,KAAO4F,EAAOxN,aAAa4H,QAAjD,OAAhE,SACE,sBAAM4C,UAAWC,KAAQ+J,YAAzB,mBAA0ChH,EAAO5F,OAAjD,YAA2D4F,EAAOxN,aAAa4H,gBAiBrF,qBAAK4C,UAAWC,KAAQ8F,YAAxB,SAoBE,sBAAKrF,IAAKb,KAAKiE,YAAa9D,UAAWC,KAAQmG,SAA/C,UACE,cAACC,GAAA,EAAD,CAAeC,WAAW,WAAWC,QAAS,IAA9C,SACE,8BACE,sBAAMrG,MAAO,CAAEC,QAAS,eAAgBqG,SAAU,SAAWC,wBAAyB,CAAEC,OAAQ7G,KAAKhN,MAAM0D,gBAI/G,sBAAKyJ,UAAWC,KAAQ0G,QAAxB,UACE,mBACE3G,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAK0D,aACd/B,SAAU,EACVX,WAAYhB,KAAK0D,aANnB,SAQE,mBAAGvD,UAAU,4BAEf,mBACEA,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAKtC,aACdiE,SAAU,EACVX,WAAYhB,KAAKtC,aANnB,SAQE,mBAAGyC,UAAU,6BAEf,mBACEA,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAuC,IAA9B6C,EAAOxN,aAAakK,MAAc,OAAS,QAC7D6B,KAAK,SACLT,QAASjB,KAAK8E,QACdnD,SAAU,EACVX,WAAYhB,KAAK8E,QANnB,SAQE,mBAAG3E,UAAU,oBAEf,mBACEA,UAAW,CAAC,SAAU,iBAAkBH,KAAK2D,cAAevD,KAAQ2G,WAAWhG,KAAK,KACpFV,MAAO,CAAEC,QAAS,QAClBoB,KAAK,SACLT,QAAS,kBAAM,EAAKT,SAAS,CAAEuC,cAAc,KAC7CpB,SAAU,EACVX,WAAY,kBAAM,EAAKR,SAAS,CAAEuC,cAAc,KANlD,SAQE,mBAAG5C,UAAU,4BAGjB,qBAAKA,UAAWC,KAAQ+G,OAAxB,SACE,cAAC,GAAD,CACE2C,YAAa,SAAC5L,GACZ,EAAK4L,YAAc5L,GAErB6L,YAAa,SAAC7L,GACZ,EAAK6L,YAAc7L,GAErBqL,UAAWA,EACX1F,QAAS7D,KAAK6D,wB,GArVI3C,iBA0bnBC,gBAhBS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAKK,SAACb,GAAD,MAAe,CACxCP,MAAO,kBAAMO,EAAS4E,OAGtB1D,aAAc,SAACC,GAAD,OAAcnB,EAAS4E,GAA4BzD,KACjEC,YAAa,SAACD,GAAD,OAAcnB,EAAS4E,GAA2BzD,KAC/DG,IAAK,SAACH,GAAD,OAAcnB,EAAS4E,GAAmBzD,KAC/CE,SAAU,kBAAMrB,EAAS4E,UAGZD,CAA6C+I,I,UCzctDE,G,kDACJ,WAAYpM,GAAQ,IAAD,8BACjB,cAAMA,IAEDhL,MAAQ,GAHI,E,qDAOjB,IAAMmQ,EAASnD,KAAKhC,MAAMX,QAAQ,GAClC,OACE,qBAAK8C,UAAWC,QAAhB,SACE,cAAC,GAAD,CAAqBN,QAASE,KAAKhC,MAAM8B,QAAyBnC,SAAQ,UAAKwF,EAAOjG,KAA/BiG,EAAOjG,U,GAXpCgE,iBAwBnBC,gBANS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,YAGK,SAACb,GAAD,MAAe,KAE3B2E,CAA6CiJ,ICbtDC,G,kDACJ,WAAYrM,GAAQ,IAAD,8BACjB,cAAMA,IAEDhL,MAAQ,GAEb,EAAKgL,MAAM/B,QALM,E,kEAgBGqO,EAAWC,GAE/B,OAASvK,KAAKhC,MAAMX,SAAWiN,EAAUjN,SAAY2C,KAAKhC,MAAMwM,YAAcF,EAAUE,WAAaxK,KAAKhC,MAAMyM,UAAYH,EAAUG,U,+BAI9H,IAAD,OAEP,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWvC,KAE1C,cAAC,IAAD,CAAOqC,KAAK,mBAAmBC,OAAK,EAACE,OAAQ,SAAC7M,GAAD,OAAY,EAAKA,MAAMuK,YAAc,cAAC,GAAD,eAAsBvK,IAAY,cAAC,GAAD,eAAuBA,OAC3I,cAAC,IAAD,CAAO0M,KAAK,kBAAkBC,OAAK,EAACE,OAAQ,SAAC7M,GAAD,OAAY,EAAKA,MAAMuK,YAAc,cAACuC,GAAD,eAAwB9M,IAAY,cAAC,GAAD,eAAyBA,OAC9I,cAAC,IAAD,CAAO0M,KAAK,sBAAsBC,OAAK,EAACE,OAAQ,SAAC7M,GAAD,OAAW,cAAC,GAAD,2BAAkBA,GAAlB,IAAyBX,QAAS,EAAKW,MAAMX,QAASpB,MAAO,EAAK+B,MAAM/B,mB,GA/BjHmM,aA4FXjH,gBAbS,SAACnO,GAAD,MAAY,CAClCqK,QAASrK,EAAM2J,KAAKU,QACpBkL,YAAavV,EAAM2J,KAAK4L,YACxBiC,UAAWxX,EAAM2J,KAAK6N,UACtBC,QAASzX,EAAM2J,KAAK8N,YAGK,SAACjO,GAAD,MAAe,CACxCP,MAAO,kBAAMO,EAAS4E,UAKTD,CAA6CkJ,ICpGzCjC,YCSJ2C,OAXf,WAGE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOL,KAAK,IAAIE,UAAWP,QCOlBW,OARf,WAGE,OACE,cAAC,GAAD,KCEE7H,GAAS,CACb7F,KAAM,KACNC,OAAQ,EACRC,MAAO,EACP9G,SAAU,KACVE,OAAQ,KACR6G,aAAc,KACd9H,aAAa,eAnBM,CACnBE,KAAM,KACNC,IAAK,EACLC,OAAQ,EACRe,SAAU,EACVyG,OAAQ,GACRhG,KAAM,IACNsI,MAAO,EACP7J,SAAS,EACTa,MAAO,EACPqC,KAAM,OAWF+R,GAAe,CACnBT,UAAW,KACXC,QAAS,KAQTlC,aAAa,EACblL,QAAS,CAAC,aACNH,GAAI,GAAMiG,IADL,aAELjG,GAAI,GAAMiG,KAEdvN,cAAe,MA0FFsV,GAvFC,WAAmC,IAAlClY,EAAiC,uDAAzBiY,GAAcE,EAAW,uCAG5C9N,EAAU,KACd,OAAQ8N,EAAOtV,MACb,KAAKqG,EACH,OAAO,2BACFlJ,GADL,IAEEqK,QAAQ,YAAK8N,EAAO9N,SACpBkL,YAAa4C,EAAO5C,cAExB,KAAKrM,EACH,OAAO,2BACFlJ,GADL,IAEEwX,UAAW,KACXC,QAAS,OAGb,KAAKvO,EAIH,OAAO,2BACFlJ,GADL,IAEE4C,cAAeuV,EAAOxU,YAE1B,KAAKuF,EAIH,OAAO,2BACFlJ,GADL,IAEEwX,UAAW,IAAIY,KAEf/N,QAAQ,YAAK8N,EAAO9N,WAUxB,KAAKnB,EAOH,OANAmB,EAAO,YAAOrK,EAAMqK,UACZ8N,EAAOxN,UAAUJ,QAAU,EACnCF,EAAQ8N,EAAOxN,UAAUjH,SAAWyU,EAAOzU,SAC3C2G,EAAQ8N,EAAOxN,UAAUhH,UAAYwU,EAAOxU,UAC5C0G,EAAQ8N,EAAOxN,UAAU/G,OAASuU,EAAOvU,OACzCyG,EAAQ8N,EAAOxN,UAAUF,aAAe,UACjC,2BACFzK,GADL,IAEEqK,QAAQ,YAAKA,KAEjB,KAAKnB,EAOH,OANAmB,EAAO,YAAOrK,EAAMqK,UACZ8N,EAAOxN,UAAUH,OAAS,EAClCH,EAAQ8N,EAAOxN,UAAUjH,SAAWyU,EAAOzU,SAC3C2G,EAAQ8N,EAAOxN,UAAUhH,UAAYwU,EAAOxU,UAC5C0G,EAAQ8N,EAAOxN,UAAU/G,OAASuU,EAAOvU,OACzCyG,EAAQ8N,EAAOxN,UAAUF,aAAe,QACjC,2BACFzK,GADL,IAEEqK,QAASA,IAEb,KAAKnB,EAGH,OAFAmB,EAAO,YAAOrK,EAAMqK,UACZ8N,EAAOxN,UAAUJ,QAAU,EAC5B,2BACFvK,GADL,IAGEqK,QAAQ,YAAKA,KAEjB,KAAKnB,EAGH,OAAO,2BACFlJ,GADL,IAEEyX,QAAS,IAAIW,OAGjB,QACE,OAAOpY,ICnHPqY,GAAmBrZ,OAAOsZ,sCAAwCC,IAElEC,GAAcC,YAAgB,CAClC9O,KAAM+O,KAGFC,GAAQC,YAAYJ,GAAaH,GACrCQ,YAAgBC,OAGlBC,IAASlB,OACL,cAAC,IAAD,CAAUc,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGNK,SAASC,eAAe,ShCLjB,SAAkB3Z,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2Z,IAAIjG,aAAwBjU,OAAOC,SAASka,MACpDC,SAAWpa,OAAOC,SAASma,OAIvC,OAGFpa,OAAOqa,iBAAiB,QAAQ,WAC9B,IAAMha,EAAQ,+BAEVP,IAiEV,SAAiCO,EAAOC,GAEtCga,MAAMja,EAAO,CACXka,QAAS,CAAE,iBAAkB,YAE5B7Z,MAAK,SAAC8Z,GAEL,IAAMC,EAAcD,EAASD,QAAQ3P,IAAI,gBAEnB,MAApB4P,EAASE,QACU,MAAfD,IAA8D,IAAvCA,EAAYlU,QAAQ,cAG/ChG,UAAUC,cAAcma,MAAMja,MAAK,SAACC,GAClCA,EAAaia,aAAala,MAAK,WAC7BV,OAAOC,SAAS4a,eAKpBza,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAxFA2Z,CAAwBza,EAAOC,GAI/BC,UAAUC,cAAcma,MAAMja,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OgChBjCE,I,kBCjCAZ,EAAOC,QAAU,CAAC,GAAK,+BAA+B,GAAK,+BAA+B,gBAAkB,4CAA4C,YAAc,wCAAwC,iBAAiB,2CAA2C,wBAAwB,kDAAkD,gBAAgB,0CAA0C,uBAAuB,iDAAiD,SAAW,qCAAqC,MAAQ,kCAAkC,QAAU,oCAAoC,UAAY,sCAAsC,OAAS,mCAAmC,MAAQ,kCAAkC,UAAY,sCAAsC,aAAe,yCAAyC,gBAAgB,0CAA0C,aAAe,yCAAyC,gBAAgB,0CAA0C,eAAiB,2CAA2C,eAAiB,2CAA2C,iBAAiB,2CAA2C,QAAU,oCAAoC,MAAQ,kCAAkC,QAAU,oCAAoC,OAAI,iCAA8B,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,QAAU,oCAAoC,SAAW,uC,mBCAjwDD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,mBCAlED,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,QAAU,gCAAgC,MAAQ,8BAA8B,iBAAiB,yC,mBCA3KD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,UAAY,mCAAmC,MAAQ,kC","file":"static/js/main.17ef0b8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleplayerSection\":\"SingleplayerSection_SingleplayerSection__38mzd\",\"PlayerCharacter\":\"SingleplayerSection_PlayerCharacter__gWm0Y\",\"ProgressBar\":\"SingleplayerSection_ProgressBar__2g8ZI\",\"QuestionBar\":\"SingleplayerSection_QuestionBar__1Iznw\",\"question-enter\":\"SingleplayerSection_question-enter__28PWK\",\"question-enter-active\":\"SingleplayerSection_question-enter-active__3M5Mz\",\"question-exit\":\"SingleplayerSection_question-exit__1jpMR\",\"question-exit-active\":\"SingleplayerSection_question-exit-active__2uRFy\",\"Question\":\"SingleplayerSection_Question__39n_G\",\"Close\":\"SingleplayerSection_Close__2yvDL\",\"Refresh\":\"SingleplayerSection_Refresh__1GF1-\",\"ButtonBar\":\"SingleplayerSection_ButtonBar__3alYz\",\"Answer\":\"SingleplayerSection_Answer__2zs57\",\"BtnGo\":\"SingleplayerSection_BtnGo__2FvSX\",\"BtnNumber\":\"SingleplayerSection_BtnNumber__2JxfN\",\"HideQuestion\":\"SingleplayerSection_HideQuestion__fvc8v\",\"hide-question\":\"SingleplayerSection_hide-question__3ro_n\",\"ShowQuestion\":\"SingleplayerSection_ShowQuestion__2I_JZ\",\"show-question\":\"SingleplayerSection_show-question__3PmVk\",\"DisplayMessage\":\"SingleplayerSection_DisplayMessage___q_ms\",\"MessageAnimate\":\"SingleplayerSection_MessageAnimate__1H87e\",\"hide-animation\":\"SingleplayerSection_hide-animation__2KaC1\",\"Correct\":\"SingleplayerSection_Correct__3vwsf\",\"Wrong\":\"SingleplayerSection_Wrong__3TY7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"MultiplayerWrapper_Race__2J0PG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"AnswerInput_BtnGo__3OVww\",\"BtnNumber\":\"AnswerInput_BtnNumber__3nlvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleplayerSetup\":\"SingleplayerSetup_SingleplayerSetup__1al8v\",\"BtnGo\":\"SingleplayerSetup_BtnGo__2xlBA\",\"Type\":\"SingleplayerSetup_Type__2VIbM\",\"Options\":\"SingleplayerSetup_Options__2HJWM\",\"Group4\":\"SingleplayerSetup_Group4__2sqxg\",\"Group2\":\"SingleplayerSetup_Group2__2MVLS\",\"Items\":\"SingleplayerSetup_Items__2jmiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"MultiplayerSetup_BtnGo__N6py2\",\"BtnNumber\":\"MultiplayerSetup_BtnNumber__1ttzk\",\"MultiplayerSetup\":\"MultiplayerSetup_MultiplayerSetup__1tKOS\",\"Options\":\"MultiplayerSetup_Options__37vVT\",\"Players\":\"MultiplayerSetup_Players__3vjYC\",\"ExtraWide\":\"MultiplayerSetup_ExtraWide__Ef-1Y\",\"Race\":\"MultiplayerSetup_Race__qI4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n      // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = '/math-race/service-worker.js'; \n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service '\n                + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        // eslint-disable-next-line no-param-reassign\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all '\n                    + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.',\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const LOAD_QUESTIONS = 'LOAD_QUESTIONS';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const WIN = 'WIN'; \nexport const COMPLETE = 'COMPLETE'; \nexport const SET_MULTIPLAYER = 'SET_MULTIPLAYER'; \n","/* eslint-disable prefer-const */\n/* eslint-disable no-restricted-syntax */\nconst shouldPrefixWithOne = (n) => {\n  return n >= 100;\n};\n\n/**\n * Checks if a certain number should be joined with hyphens\n * e.g. \"ninety-nine\" versus \"one hundred one\"\n *\n * Examples:\n * _shouldHyphenate(10); // returns False\n * _shouldHyphenate(21); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\nconst shouldHyphenate = (n) => {\n  return n >= 20 && n <= 99;\n};\n\nconst numbers = [\n  { number: 1000000000000, text: 'trillion' },\n  { number: 1000000000, text: 'billion' },\n  { number: 1000000, text: 'million' },\n  { number: 1000, text: 'thousand' },\n  { number: 100, text: 'hundred' },\n  { number: 90, text: 'ninety' },\n  { number: 80, text: 'eighty' },\n  { number: 70, text: 'seventy' },\n  { number: 60, text: 'sixty' },\n  { number: 50, text: 'fifty' },\n  { number: 40, text: 'forty' },\n  { number: 30, text: 'thirty' },\n  { number: 20, text: 'twenty' },\n  { number: 19, text: 'nineteen' },\n  { number: 18, text: 'eighteen' },\n  { number: 17, text: 'seventeen' },\n  { number: 16, text: 'sixteen' },\n  { number: 15, text: 'fifteen' },\n  { number: 14, text: 'fourteen' },\n  { number: 13, text: 'thirteen' },\n  { number: 12, text: 'twelve' },\n  { number: 11, text: 'eleven' },\n  { number: 10, text: 'ten' },\n  { number: 9, text: 'nine' },\n  { number: 8, text: 'eight' },\n  { number: 7, text: 'seven' },\n  { number: 6, text: 'six' },\n  { number: 5, text: 'five' },\n  { number: 4, text: 'four' },\n  { number: 3, text: 'three' },\n  { number: 2, text: 'two' },\n  { number: 1, text: 'one' },\n  { number: 0, text: 'zero' },\n];\n\nconst andWord = 'and';\n\nconst numberToEnglish = (val, options = {}) => {\n  if (!val) return '';\n  const andForBritish = options.ands || false;\n\n  const comma = options.commas ? ',' : '';\n  const and = andForBritish ? `${andWord} ` : '';\n  let words = '';\n  let prefixNum;\n  let remainder;\n  let closestSmallerNumber;\n  let closestSmallerNumberText;\n\n  let numToConvert = parseInt(val, 10);\n\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(numToConvert)) {\n    return 'not a number';\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (!isFinite(numToConvert)) {\n    return 'infinity';\n  }\n\n  if (numToConvert < 0) {\n    words += 'negative ';\n    numToConvert *= -1;\n  }\n\n  // Search list of numbers for closest smaller number.\n  // numToConvert will be written in terms of this number.\n  for (const { number, text } of numbers) {\n    if (numToConvert === number) {\n      if (shouldPrefixWithOne(number)) {\n        words += 'one ';\n      }\n      words += text;\n      return words;\n    }\n\n    if (numToConvert > number) {\n      closestSmallerNumber = number;\n      closestSmallerNumberText = text;\n      break;\n    }\n  }\n\n  // How many 'closestSmallerNumber's can numToConvert be grouped into?\n  // e.g. five 'thousand'.\n  // eslint-disable-next-line prefer-const\n  prefixNum = Math.floor(numToConvert / closestSmallerNumber);\n  if (prefixNum !== 1 || shouldPrefixWithOne(closestSmallerNumber)) {\n    words += `${numberToEnglish(prefixNum, options)} `;\n  }\n\n  words += closestSmallerNumberText;\n\n  remainder = numToConvert - prefixNum * closestSmallerNumber;\n  if (remainder > 0 && shouldHyphenate(closestSmallerNumber)) {\n    words += '-';\n  } else if (closestSmallerNumber >= 1000 && remainder > 0 && remainder < 100) {\n    words += `${comma} ${and}`;\n  } else if (closestSmallerNumber >= 1000 && remainder > 0) {\n    words += `${comma} `;\n  } else if (closestSmallerNumber === 100 && remainder > 0) {\n    words += ` ${and}`;\n  } else {\n    words += ' ';\n  }\n\n  if (remainder > 0) {\n    words += numberToEnglish(remainder, options);\n  }\n\n  return words.trim();\n};\n\nexport default numberToEnglish;\n","import * as mathjs from 'mathjs';\nimport moment from 'moment';\nimport numberToEnglish from './NumberToEnglish';\n\nexport const generateQuestion = (questiontype, wordquestions) => {\n  const { type, nos, digits, inwords } = questiontype;\n  if (type === '+-' || type === '+-x') return generatePlusMinusQuestion(questiontype);\n  else if (type === 'x') return generateMultiplyQuestion(questiontype);\n  else if (type === '/') return generateDivideQuestion(questiontype);\n  else if (type === 'X2') return generateSquareQuestion(questiontype);\n  else if (['WORD', 'MONEY', 'FILL'].includes(type)) return generateWordsQuestion(questiontype, wordquestions);\n  else if (['TIMEHRS+-'].includes(type)) return generateTimeHrsArthematicQuestion(questiontype);\n  else if (['TIME+-'].includes(type)) return generateTimeArthematicQuestion(questiontype);\n  else if (['BAL'].includes(type)) return generateBalance(questiontype);\n  return {\n    question: '', // '2+3',\n    questions: [],\n    answer: '', // mathjs.evaluate('2+3'),\n  };\n}; //\n\n// export const generateMultiQuestion = (questiontype) => {\n//   let currentnumber = 0;\n//   let question = '';\n//   let answer = 0;\n//   const { type, nos, digits, inwords } = questiontype;\n//   let { decimals = 0 } = questiontype;\n//   if (inwords) decimals = 0;\n//   const symbols=[];\n\n//   const totaldigits = digits + decimals;\n//   for (let i = 0; i < nos; i += 1) {\n//     const temptype = type;\n//     let sign = '+';\n//     if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n//     else if ((answer >= 100 || answer <= 10) && type === '+-x') sign = randomSign('+-');\n//     else if (i>1 && type === '+-x' && !symbols.includes('x') && answer>9 && answer<100) sign = 'x'\n//     else sign = randomSign(temptype);\n//     // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n//     symbols.push(sign);\n\n//     let tonumber = 10 ** totaldigits - 1;\n//     let fromnumber = 10 ** (totaldigits - 1) + 1;\n//     if (sign === 'x') {\n//       fromnumber = 2;\n//       tonumber = 9;\n//     } else if (sign === '-' && tonumber > answer) tonumber = answer;\n//     // console.log(`${fromnumber},${tonumber}`)\n//     currentnumber = randomIntFromInterval(fromnumber, tonumber);\n//     if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n//     else if (sign === 'x') answer *= currentnumber;\n//     if (!inwords) question = `${question} ${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n//     else if (inwords) {\n//       const toword = numberToEnglish(currentnumber);\n//       question = `${question}${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' u><i>times</i></u> '}${toword}`;\n//     }\n//   }\n//   answer /= decimals === 0 ? 1 : 10 ** decimals;\n//   console.log(`${question} ? ${answer}`);\n//   return {\n//     question: question,\n//     answer: answer,\n//   };\n// }\n\nexport const generateBalance = (questiontype) => {\n  let question = '';\n  const questions = [];\n  let answer = 0;\n  const { type, nos, digits, inwords, level } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  for (let i = 0; i < nos; i += 1) {\n    const temptype = type;\n    const sign = '|';\n\n    let tonumber = 99;\n    const issingle = randomIntFromInterval(0, 1);\n    if (issingle) tonumber = 9;\n    const fromnumber = 1;\n    const currentnumber = randomIntFromInterval(fromnumber, tonumber);\n\n    if (!inwords) {\n      const q = `${i > 0 ? sign : ''} ${currentnumber}`;\n      question = `${question} ${q}`;\n      questions.push(q.replace('|', ''));\n    } else if (inwords) {\n      const toword = numberToEnglish(currentnumber);\n      const q = `${i <= 0 ? '' : ' <u><i>|</i></u> '}${toword}`;\n      question = `${question}${q}`;\n      questions.push(q.replace('|', ''));\n    }\n    answer = answer * 10 + currentnumber;\n  }\n  // console.log(`${question} ? ${answer}`);\n\n  questions.push('?');\n  // console.log('[Question Generator]', questions);\n  return {\n    question: question,\n    questions: questions,\n    answer: answer,\n  };\n};\n\nexport const generateMultiplyQuestion = (questiontype) => {\n  // let question = '';\n  // let answer = 0;\n  const { type, digits, inwords, tens } = questiontype;\n  const nos = 2;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n  const tonumber = 10 ** digits - 1;\n  const fromnumber = 10 ** (digits - 1) + 1;\n  const multiplicend = randomIntFromInterval(fromnumber, tonumber);\n  const multiplier = randomIntFromInterval(2, 9);\n  const answer = multiplier * multiplicend;\n  // console.log(`${question} ? ${answer}`);\n  let question = '';\n\n  if (!inwords) question = `${multiplicend} X ${multiplier}`;\n  else if (inwords) question = `${numberToEnglish(multiplicend)} X ${numberToEnglish(multiplier)}`;\n\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateDivideQuestion = (questiontype) => {\n  // let question = '';\n  // let answer = 0;\n  const { type, digits, inwords, tens } = questiontype;\n  const nos = 2;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n  const tonumber = 10 ** digits - 1;\n  const fromnumber = 10 ** (digits - 1) + 1;\n  const answer = randomIntFromInterval(fromnumber, tonumber);\n  const divider = randomIntFromInterval(2, 9);\n  const dividend = answer * divider;\n  // console.log(`${question} ? ${answer}`);\n  let question = '';\n\n  if (!inwords) question = `${dividend} / ${divider}`;\n  else if (inwords) question = `${numberToEnglish(dividend)} X ${numberToEnglish(divider)}`;\n\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateSquareQuestion = (questiontype) => {\n  let currentnumber = 0;\n  let question = '';\n  let answer = 0;\n  const { type, digits, inwords, tens } = questiontype;\n  const nos = 2;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  // for (let i = 0; i < nos; i += 1) {\n  const temptype = type;\n  // let sign = '+';\n  // if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n  // else if ((answer >= 100 || answer <= 10) && type === '+-x' && digits > 1) sign = randomSign('+-');\n  // else if (answer > 10 && type === '+-x' && digits === 1) sign = randomSign('+-');\n  // else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer > 9 && answer < 100 && digits > 1) sign = 'x';\n  // else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer < 10 && digits === 1) sign = 'x';\n  // else sign = randomSign(temptype);\n  // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n  // symbols.push(sign);\n\n  let tonumber = 10 ** totaldigits - 1;\n  if (tens === 'Y' && totaldigits === 2) tonumber = 19;\n\n  const fromnumber = 10 ** (totaldigits - 1) + 1;\n  // if (sign === 'x') {\n  //   fromnumber = 2;\n  //   tonumber = 9;\n  // } else if (sign === '-' && tonumber > answer) tonumber = answer;\n  // // console.log(`${fromnumber},${tonumber}`)\n  currentnumber = randomIntFromInterval(fromnumber, tonumber);\n  // if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n  // else if (sign === 'x') answer *= currentnumber;\n  if (!inwords) question = `${currentnumber}<sup>2</sup>`;\n  else if (inwords) {\n    const toword = numberToEnglish(currentnumber);\n    question = `${toword}<sup>2</sup>`;\n  }\n  // }\n  answer = currentnumber * currentnumber;\n  // console.log(`${question} ? ${answer}`);\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateWordsQuestion = (questiontype, questions) => {\n  const { type, nos, digits, inwords } = questiontype;\n  const wordquestions = questions[type];\n  const questionno = randomIntFromInterval(0, wordquestions.length - 1);\n  const question = wordquestions[questionno];\n\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const totaldigits = digits + decimals;\n  const tonumber = 10 ** totaldigits - 1;\n  const fromnumber = 10 ** (totaldigits - 1) + 1;\n\n  const q = question.question;\n  const qparams = {};\n  for (let i = 0; ; i += 1) {\n    if (!(i in question)) break;\n    qparams[i] = question[i];\n  }\n\n  Object.keys(qparams)\n    .sort()\n    .forEach((key) => {\n      const params1 = { ...qparams };\n      const param = qparams[key];\n      if (param.indexOf('{val}') > -1) params1.val = randomIntFromInterval(fromnumber, tonumber);\n      const substitute = replaceValues(param, params1);\n      const evalstr = evaluate(substitute);\n      qparams[key] = evalstr;\n    });\n\n  const answer = evaluate(replaceValues(question.answer, qparams));\n  const questionstr = replaceValues(question.question, qparams);\n\n  return { answer: answer, question: questionstr, questions: [] };\n};\n\nexport const generatePlusMinusQuestion = (questiontype) => {\n  let currentnumber = 0;\n  let question = '';\n  const questions = [];\n  let answer = 0;\n  const { type, nos, digits, inwords, level } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  let isHigherNumber = false;\n  for (let i = 0; i < nos; i += 1) {\n    const temptype = type;\n    let sign = '+';\n    if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n    else if ((answer >= 100 || answer <= 10) && type === '+-x' && digits > 1) sign = randomSign('+-');\n    else if (answer > 10 && type === '+-x' && digits === 1) sign = randomSign('+-');\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer > 9 && answer < 100 && digits > 1) sign = 'x';\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer < 10 && digits === 1) sign = 'x';\n    else sign = randomSign(temptype);\n    // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n    if (!isHigherNumber && level === 2 && i === nos - 1) sign = '+';\n    symbols.push(sign);\n\n    let tonumber = 10 ** totaldigits - 1;\n    let fromnumber = 10 ** (totaldigits - 1) + 1;\n    if (sign === 'x') {\n      fromnumber = 2;\n      tonumber = 9;\n    } else if (sign === '-' && tonumber > answer) tonumber = answer;\n    // console.log(`${fromnumber},${tonumber}`)\n\n    if (!isHigherNumber && level === 2 && i === nos - 1) {\n      fromnumber = 10 ** digits - answer;\n      currentnumber = randomIntFromInterval(fromnumber, fromnumber + 10 ** digits);\n    } else currentnumber = randomIntFromInterval(fromnumber, tonumber);\n    let q = '';\n    if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n    else if (sign === 'x') answer *= currentnumber;\n\n    if (!isHigherNumber && level === 2 && answer.toString().length > digits) isHigherNumber = true;\n\n    if (!inwords) {\n      q = `${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n      question = `${question} ${q}`;\n      questions.push(q.replace('+', ''));\n    } else if (inwords) {\n      const toword = numberToEnglish(currentnumber);\n      q = `${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' <u><i>times</i></u> '}${toword}`;\n      question = `${question}${q}`;\n      questions.push(q.replace('+', ''));\n    }\n  }\n  answer /= decimals === 0 ? 1 : 10 ** decimals;\n  // console.log(`${question} ? ${answer}`);\n\n  questions.push('?');\n  // console.log('[Question Generator]', questions);\n  return {\n    question: question,\n    questions: questions,\n    answer: answer,\n  };\n};\nexport const generateTimeArthematicQuestion = (questiontype) => {\n  // let currentnumber = 0;\n  // let question = '';\n  const questions = [];\n  // let answer = 0;\n  const { type, nos, digits, HR24, level, inwords } = questiontype;\n  const symbols = [];\n\n  const hrs = HR24 === 'Y' ? randomIntFromInterval(0, 23) : randomIntFromInterval(1, 12);\n  let min = 0;\n  if (level === 1) min = randomFromList(['0', '15', '30', '45']);\n  else if (level === 2) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 3) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) min = randomIntFromInterval(0, 59);\n  const timeval = timeformat(hrs, min);\n  const sign = randomSign('+-');\n  let addmin = '';\n  let addhrs = '';\n  if (level === 1) addmin = randomFromList(['15', '30', '45']);\n  else if (level === 2 || level === 3) addmin = randomFromList(['10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) addmin = randomIntFromInterval(1, 59);\n\n  if (level > 2) addhrs = randomIntFromInterval(1, 10);\n\n  // eslint-disable-next-line new-cap\n  const dt1 = moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm');\n  // eslint-disable-next-line new-cap\n  const dt2 = moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm').subtract({ hours: addhrs, minutes: addmin });\n\n  let questionstr = `How many minutes from ${dt2.format(HR24 === 'Y' ? 'HH:mm' : 'hh:mm')} and  ${timeval}?`;\n  // console.log(questionstr);\n\n  if (inwords) {\n    const toword1 = TimeInWords(dt1, HR24);\n    const toword2 = TimeInWords(dt2, HR24);\n    questionstr = `How many minutes from <u><i>${toword2}</u></i> and  <u><i>${toword1}</u></i>?`;\n    // console.log(questionstr);\n  }\n  const answer = `${addhrs}:${addmin}`;\n  // console.log('[GenerateTimeQuestion]', sign, answerdt.format('hh:mm'));\n  // console.log('[Question Generator]', questions);\n  return {\n    question: questionstr,\n    questions: '',\n    answer: answer,\n  };\n};\n\nconst TimeInWords = (time, isHR24) => {\n  let toword = '';\n  const hrFormat = isHR24 === 'Y' ? 'HH' : 'hh';\n  // console.log('QuoteGenerator]TimeInWords', time, isHR24);\n\n  if (+time.format('mm') === 0) toword = `${numberToEnglish(+time.format(hrFormat))} o'clock`;\n  else if (+time.format('mm') === 30) toword = `Half Past ${numberToEnglish(+time.format(hrFormat))}`;\n  else if (+time.format('mm') < 30) toword = `${numberToEnglish(time.format('mm'))} min past ${numberToEnglish(+time.format('HH'))}`;\n  else if (+time.format('mm') > 30) {\n    let tohrstr = 1 + +time.format(hrFormat);\n    tohrstr = isHR24 === 'Y' && tohrstr === 24 ? '0' : tohrstr;\n    tohrstr = isHR24 !== 'Y' && tohrstr === 13 ? '1' : tohrstr;\n    toword = `${numberToEnglish(60 - time.format('mm'))} min to ${numberToEnglish(tohrstr)}`;\n  }\n\n  return toword;\n};\n\nexport const generateTimeHrsArthematicQuestion = (questiontype) => {\n  // let currentnumber = 0;\n  // let question = '';\n  const questions = [];\n  // let answer = 0;\n  const { type, nos, digits, HR24, level, inwords } = questiontype;\n  const symbols = [];\n\n  const hrs = HR24 === 'Y' ? randomIntFromInterval(0, 23) : randomIntFromInterval(1, 12);\n  let min = 0;\n  if (level === 1) min = randomFromList(['0', '15', '30', '45']);\n  else if (level === 2) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 3) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) min = randomIntFromInterval(0, 59);\n  const timeval = timeformat(hrs, min);\n  const sign = randomSign('+-');\n  let addmin = '';\n  let addhrs = '';\n  if (level === 1) addmin = randomFromList(['15', '30', '45']);\n  else if (level === 2 || level === 3) addmin = randomFromList(['10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) addmin = randomIntFromInterval(1, 59);\n\n  if (level > 2) addhrs = randomIntFromInterval(1, 10);\n\n  // eslint-disable-next-line new-cap\n  let answerdt = new moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm');\n  let questionstr = `${timeval} ${sign} ${addhrs} ${addhrs ? 'hrs' : ''} ${addmin} min`;\n  // console.log(questionstr);\n\n  if (inwords) {\n    const toword = TimeInWords(answerdt, HR24);\n    questionstr = `${toword} ${sign === '+' ? ' <u><i>plus</i></u> ' : ' <u><i>minus</i></u> '} ${numberToEnglish(addhrs)} ${addhrs ? 'hrs' : ''} ${numberToEnglish(addmin)} mins`;\n    // console.log(questionstr);\n  }\n\n  if (sign === '+') answerdt = answerdt.add({ hours: addhrs, minutes: addmin });\n  else if (sign === '-') answerdt = answerdt.subtract({ hours: addhrs, minutes: addmin });\n\n  // console.log('[GenerateTimeQuestion]', sign, answerdt.format('hh:mm'));\n  const answer = '';\n  // console.log('[Question Generator]', questions);\n  return {\n    question: questionstr,\n    questions: '',\n    answer: answerdt.format(HR24 === 'Y' ? 'HH:mm' : 'hh:mm'),\n  };\n};\n\nconst timeformat = (hrs, min) => {\n  return `${hrs < 10 ? '0' : ''}${hrs}:${min < 10 ? '0' : ''}${min}`;\n};\n\nexport const randomIntFromInterval = (min, max) => {\n  // min and max included\n  // if (decimals === 0)\n  return Math.floor(Math.random() * (max - min + 1) + min);\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\nexport const randomFromList = (list) => {\n  // retuns a number from list\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n// const randomSign = () => {\n//   return Math.round(Math.random()) * 2 - 1;\n// };\n\nexport const getDisplaySuccessMessage = () => {\n  const successMessages = [\n    'Tremendous',\n    'Remarkable',\n    'Great',\n    'Terrific',\n    'Enormous',\n    'Impressive',\n    'Outstanding',\n    'Phenomenal',\n    'Marvellous',\n    'Wonderful',\n    'Sensational',\n    'Magnificent',\n    'Superb',\n    'Excellent',\n    'Very good',\n    'First-class',\n    'Fabulous',\n    'Super',\n    'Awesome',\n    'Brilliant',\n    'Keep going',\n  ];\n  return randomFromList(successMessages);\n};\n\nexport const getDisplayWrongMessage = () => {\n  const successMessages = ['Try again', 'Concentrate', 'Focus', 'Think hard', 'Give attention', 'Be attentive'];\n  return randomFromList(successMessages);\n};\n\nconst randomSign = (type) => {\n  const signs = type.split('');\n  const randval = randomIntFromInterval(0, signs.length - 1);\n  return signs[randval];\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\nexport const evaluate = (str) => {\n  return mathjs.evaluate(str);\n};\n\nexport const replaceString = (str, ...args) => {\n  let base = str;\n  for (let i = 0; i < args.length; i += 1) base = base.replace(`{${i}}`, args[i]);\n\n  return base;\n  // const replacements = { '{NAME}': 'Mike', '{AGE}': '26', '{EVENT}': '20' };\n  //   let str = 'My Name is {NAME} and my age is {AGE}.';\n\n  // str = str.replace(/{\\w+}/g, (all) => {\n  //   return replacements[`{${all}}`] || all;\n  // });\n};\n\nexport const replaceValues = (str, valueHash) => {\n  let base = str;\n  base = base.replace(/{\\w+}/g, (all) => {\n    // console.log('[Utils.replaceValue]', all);\n    return valueHash[all.replace('{', '').replace('}', '')]; // || all;\n  });\n  return base;\n};\n\nconst gcd = (a, b) => {\n  return b ? gcd(b, a % b) : a;\n};\n\nconst decimalToFraction = (_decimal) => {\n  if (_decimal === parseInt(_decimal, 10)) {\n    return {\n      top: parseInt(_decimal, 10),\n      bottom: 1,\n      display: `${parseInt(_decimal, 10)}/${1}`,\n    };\n  } else {\n    let top = _decimal.toString().includes('.') ? _decimal.toString().replace(/\\d+[.]/, '') : 0;\n    const bottom = 10 ** top.toString().replace('-', '').length;\n    if (_decimal >= 1) {\n      top = +top + Math.floor(_decimal) * bottom;\n    } else if (_decimal <= -1) {\n      top = +top + Math.ceil(_decimal) * bottom;\n    }\n\n    const x = Math.abs(gcd(top, bottom));\n    return {\n      top: top / x,\n      bottom: bottom / x,\n      display: `${top / x}/${bottom / x}`,\n    };\n  }\n};\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDgKDrBQ_-BRnVOuUlqLd7hx1w0R9bBnrA',\n  authDomain: 'math-race-7ea5f.firebaseapp.com',\n  projectId: 'math-race-7ea5f',\n  storageBucket: 'math-race-7ea5f.appspot.com',\n  messagingSenderId: '793417309877',\n  appId: '1:793417309877:web:6764942ec5b237291a68fc',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://math-race-7ea5f-default-rtdb.europe-west1.firebasedatabase.app', // 'https://react-my-burger-2492e.firÍebaseio.com',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport * as Utils from '../../../Utils/QuestionGenerator';\nimport firebase from '../../../Config/Firebase';\nimport axios from '../../../axios-firebase';\n\nexport const reset = () => {\n  return {\n    type: actionTypes.RESET,\n  };\n};\n\nexport const start = (playername1, playername2, questiontype1, questiontype2) => {\n  return async (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    // console.log('[actions] start',questiontype1);\n    if ((['WORD', 'MONEY', 'FILL'].includes(questiontype1.type) || (questiontype2 && ['WORD', 'MONEY', 'FILL'].includes(questiontype2.type))) && !getstate().game.questions) {\n      //   axios.get('/questions.json')\n      //         .then(response=>{\n      //             console.log(response.data);\n      //             // dispatch(setIngredients(response.data))\n      //         })\n      //         .catch(error=>{\n      //             console.log(error);\n      //             // dispatch(fetchIngredientsFailed());\n      //         });\n      // };\n\n      const questions = {};\n\n      const res = await axios.get('/questions.json');\n      const { data } = await res;\n\n      // .then((response) => {\n      // console.log('data:',data);\n      Object.keys(data).forEach((key) => {\n        const q = [];\n        data[key].forEach((item, idx) => {\n          // const question = item;\n          if (!(item.active && item.active === 'N')) q.push({ id: idx, ...item });\n        });\n        questions[key] = q;\n      });\n\n      // data.Word.forEach((item, idx) => {\n      //   // const question = item;\n      //   if (!(item.active && item.active === 'N')) questions.push({ id: idx, ...item });\n      // });\n\n      // console.log('Questions', questions);\n      // const db = firebase.firestore();\n      // const snapshot = db.collection('/questions');\n      // const collections = await snapshot.get();\n      // const questions = [];\n      // collections.docs.forEach((item) => {\n      //   const question = item.data();\n      //   questions.push({ id: item.id, ...question });\n      //   // Object.keys(question).forEach((key) => {\n      //   //   console.log(`${key} - ${question[key]}`);\n      //   // });\n      // });\n      // console.log('[action.start]', questions);\n\n      await dispatch({\n        type: actionTypes.LOAD_QUESTIONS,\n        questions: questions,\n      });\n    }\n    let question2 = {};\n    if (playername2) question2 = { ...Utils.generateQuestion(questiontype2, getstate().game.wordquestions) };\n    // Question loaded if required\n    dispatch({\n      type: actionTypes.START,\n      // questiontype: questiontype,\n      players: [\n        { id: 0, name: playername1, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype1, getstate().game.wordquestions), answerresult: '', questiontype: questiontype1 },\n        { id: 1, name: playername2, points: 0, wrong: 0, ...question2, answerresult: '', questiontype: questiontype2 },\n      ],\n    });\n  };\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.CORRECT,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype, getstate().game.wordquestions),\n    });\n  };\n};\n\nexport const wrongAnswer = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.WRONG,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype, getstate().game.wordquestions),\n    });\n  };\n};\n\nexport const multiplayermode = (multiplayer, playername1, playername2) => {\n  return (dispatch, getstate) => {\n    const players = [...getstate().game.players];\n    players[0].name = playername1;\n    players[1].name = playername2;\n    dispatch({\n      type: actionTypes.SET_MULTIPLAYER,\n      multiplayer: multiplayer,\n      players: players,\n    });\n  };\n};\n\nexport const complete = () => {\n  return {\n    type: actionTypes.COMPLETE,\n  };\n};\n\nexport const win = (playerno) => {\n  return {\n    playerno: playerno,\n    type: actionTypes.WIN,\n  };\n};\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './MultiplayerSetup.module.css';\n\nclass MultiplayerSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    const type = [(props.players && props.players[0].questiontype.type) || '+-', (props.players && props.players[1].questiontype.type) || '+-'];\n    const digits = [(props.players && props.players[0].questiontype.digits) || '2', (props.players && props.players[1].questiontype.digits) || '2'];\n\n    this.state = {\n      type0: type[0],\n      type1: type[1],\n      digits0: digits[0],\n      digits1: digits[1],\n      player0: players[0],\n      player1: players[1],\n    };\n\n    // console.log('MultiplayerSetup[constructor]', this.state);\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[MultiplayerSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      player0,\n      player1,\n      digits0,\n      numbers0,\n      decimals0,\n      type0,\n      points0,\n      inwords0,\n      digits1,\n      numbers1,\n      decimals1,\n      type1,\n      points1,\n      inwords1,\n      tens0,\n      tens1,\n      delay0,\n      delay1,\n      level0,\n      level1,\n      HR240,\n      HR241,\n    } = this.form;\n\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: ['+-'].includes(type0.value) ? +decimals0.value : 0,\n      points: +points0.value,\n      delay: ['+-', '+-x'].includes(type0.value) ? +delay0.value : 0,\n      tens: tens0.value,\n      HR24: HR240.value,\n      level: +level0.value,\n      inwords: inwords0.value === 'true',\n    };\n    const questiontype1 = {\n      type: type1.value,\n      nos: +numbers1.value,\n      digits: +digits1.value,\n      points: +points1.value,\n      decimals: ['+-'].includes(type1.value) ? +decimals1.value : 0,\n      delay: ['+-', '+-x'].includes(type1.value) ? +delay1.value : 0,\n      tens: tens1.value,\n      HR24: HR241.value,\n      level: +level1.value,\n      inwords: inwords1.value === 'true',\n    };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(this.state.player0, this.state.player1, questiontype0, questiontype1);\n    this.props.history.push('/math-race/play');\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    // console.log('[MultiplayerSetup] render');\n\n    const players = [(this.props.players && this.props.players[0].name) || 'Hasana', (this.props.players && this.props.players[1].name) || ''];\n\n    const playersetup = [1, 0].map((index) => {\n      const { name, questiontype } = this.props.players[index];\n      return (\n        <div key={index} className={Classes.Race}>\n          <div className={Classes.MultiplayerSetup}>\n            \n            <div style={{ display: this.state[`player${index}`] ? 'flex' : 'none' }} className={Classes.Options}>\n            <h2>{this.state[`player${index}`]}</h2>\n              <div>\n                <h2>Type</h2>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-'} />\n                  <label>+-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'x'} />\n                  <label>x</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"/\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '/'} />\n                  <label>/</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"+-x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-x'} />\n                  <label>+-x</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"X2\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'X2'} />\n                  <label>\n                    X<sup>2</sup>\n                  </label>\n                </div>\n                <div className={Classes.ExtraWide}>\n                  <input\n                    type=\"radio\"\n                    name={`type${index}`}\n                    value=\"TIMEHRS+-\"\n                    onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })}\n                    defaultChecked={questiontype.type === 'TIMEHRS+-'}\n                  />\n                  <label>TIMEHRS+-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"FILL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'FILL'} />\n                  <label>Fill</label>\n                </div>\n                <div className={Classes.ExtraWide}>\n                  <input type=\"radio\" name={`type${index}`} value=\"MONEY\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'MONEY'} />\n                  <label>Money</label>\n                </div>\n                <div className={Classes.ExtraWide}>\n                  <input type=\"radio\" name={`type${index}`} value=\"WORD\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'WORD'} />\n                  <label>Word</label>\n                </div>\n\n                {/* <div>\n                <input type=\"radio\" placeholder=\"In words\" name={`type${index}`} value=\"+-W\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-W'} />\n                <label>+-(Words)</label>\n              </div> */}\n                {/* <div>\n                        <input type=\"radio\" name=\"type\" value=\"*\" onChange={(e) => this.setState({ type: e.currentTarget.value })} />\n                        <label>X</label>\n                    </div> */}\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div style={{ display: ['+-', '+-x', 'x', '/', 'X2', 'WORD', 'FILL', 'MONEY'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                  <h2>Digits</h2>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"1\" defaultChecked={questiontype.digits === 1} />\n                    <label>1</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"2\" defaultChecked={questiontype.digits === 2} />\n                    <label>2</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"3\" defaultChecked={questiontype.digits === 3} />\n                    <label>3</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"4\" defaultChecked={questiontype.digits === 4} />\n                    <label>4</label>\n                  </div>\n                </div>\n                <div style={{ marginLeft: '0px', display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                  <h2>Numbers</h2>\n\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"2\" defaultChecked={questiontype.nos === 2} />\n                    <label>2</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"3\" defaultChecked={questiontype.nos === 3} />\n                    <label>3</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"4\" defaultChecked={questiontype.nos === 4} />\n                    <label>4</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"5\" defaultChecked={questiontype.nos === 5} />\n                    <label>5</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"10\" defaultChecked={questiontype.nos === 10} />\n                    <label>10</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: this.state[`digits${index}`] === 2 && ['X2'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Tens only</h2>\n                <div>\n                  <input type=\"radio\" name={`tens${index}`} value=\"Y\" defaultChecked={questiontype.tens === 'Y'} />\n                  <label>Yes</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`tens${index}`} value=\"N\" defaultChecked={questiontype.tens === 'N'} />\n                  <label>No</label>\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>24Hr</h2>\n                <div>\n                  <input type=\"radio\" name={`HR24${index}`} value=\"Y\" defaultChecked={questiontype.HR24 === 'Y'} />\n                  <label>Yes</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`HR24${index}`} value=\"N\" defaultChecked={questiontype.HR24 === 'N'} />\n                  <label>No</label>\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Level</h2>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"1\" defaultChecked={questiontype.level === 1} />\n                  <label>1</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"2\" defaultChecked={questiontype.level === 2} />\n                  <label>2</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"3\" defaultChecked={questiontype.level === 3} />\n                  <label>3</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"4\" defaultChecked={questiontype.level === 4} />\n                  <label>4</label>\n                </div>\n              </div>\n              <div style={{ display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Delay</h2>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"0\" defaultChecked={questiontype.delay === 0} />\n                  <label>-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"1\" defaultChecked={questiontype.delay === 1} />\n                  <label>1s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"2\" defaultChecked={questiontype.delay === 2} />\n                  <label>2s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"3\" defaultChecked={questiontype.delay === 3} />\n                  <label>3s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"4\" defaultChecked={questiontype.delay === 4} />\n                  <label>4s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"5\" defaultChecked={questiontype.delay === 5} />\n                  <label>5s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"6\" defaultChecked={questiontype.delay === 6} />\n                  <label>6s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"7\" defaultChecked={questiontype.delay === 7} />\n                  <label>7s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"8\" defaultChecked={questiontype.delay === 8} />\n                  <label>8s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"9\" defaultChecked={questiontype.delay === 9} />\n                  <label>9s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"10\" defaultChecked={questiontype.delay === 10} />\n                  <label>10s</label>\n                </div>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div style={{ display: 'flex' }}>\n                  <h2>In Words</h2>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"true\" defaultChecked={!!questiontype.inwords} />\n                    <label>Yes</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"false\" defaultChecked={!questiontype.inwords} />\n                    <label>No</label>\n                  </div>\n                </div>\n                <div style={{ marginLeft: '100px', display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n                  <h2>Decimals</h2>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                    <label>0</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                    <label>1</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                    <label>2</label>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h2>Points</h2>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"1\" defaultChecked={questiontype.points === 1} />\n                  <label>1</label>\n                </div>\n                {/* <div>\n                <input type=\"radio\" name={`points${index}`} value=\"2\" defaultChecked={questiontype.points === 2} />\n                <label>2</label>\n              </div> */}\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"5\" defaultChecked={questiontype.points === 5} />\n                  <label>5</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"10\" defaultChecked={questiontype.points === 10} />\n                  <label>10</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"15\" defaultChecked={questiontype.points === 15} />\n                  <label>15</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"20\" defaultChecked={questiontype.points === 20} />\n                  <label>20</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"25\" defaultChecked={questiontype.points === 25} />\n                  <label>25</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      // <div>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked value=\"Male\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n\n      // </div>\n\n      <Fragment>\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n          <div>{playersetup}</div>\n          <div>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              // onClick={(e) => this.startGame(e)}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Start &gt;&gt;\n            </button>\n\n            <button\n              type=\"button\"\n              value=\"Home\"\n              // onKeyPress={(e) => this.startGame(e)}\n              onKeyPress={(e) => this.props.history.push('/math-race')}\n              onClick={(e) => this.props.history.push('/math-race')}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              &lt; &lt; Home\n            </button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  //   questiontype: state.game.questiontype,\n  // starttime: state.game.starttime,\n  // endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerSetup);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    // console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            />\n                            );\n                            \n    return (<Fragment />)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<Fragment />)\n    return (\n        <Fragment>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </Fragment>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/success.9e3ceb9f.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.a523fd75.mp3\";","export default __webpack_public_path__ + \"static/media/movingfish.b08d01f0.mp3\";","export default __webpack_public_path__ + \"static/media/click.8515d2a4.mp3\";","export default __webpack_public_path__ + \"static/media/claps.fd683cd7.mp3\";","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n// import useSound from 'use-sound';\nimport { Howl, Howler } from 'howler';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './MultiplayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\nimport clickSound from '../../sounds/click.mp3';\nimport clapsSound from '../../sounds/claps.mp3';\n// // import PlaySound from '../../Utils/PlaySound';\n// import UIfx from 'uifx';\n\nclass MultiplayerSection extends PureComponent {\n  success = new Howl({ src: successSound, volume: 1 });\n  wrong = new Howl({ src: wrongSound, volume: 1 });\n  click = new Howl({ src: clickSound, volume: 1 });\n  movingfish = new Howl({ src: movingFishSound, volume: 1 });\n  claps = new Howl({ src: clapsSound, volume: 1 });\n  timers = [];\n\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n    question: '',\n    fullquestion: '',\n    qcounter: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    const player = this.props.players[this.props.playerno];\n    if (player.questiontype.delay === 0) this.setState({ question: player.question, fullquestion: player.question });\n    else {\n      // eslint-disable-next-line react/no-did-update-set-state\n      // this.setState({ qcounter: 0 });\n      this.displayQuestion(player, 0);\n    }\n    // console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', this.props.players[this.props.playerno].question , nextProps.players[nextProps.playerno].question);\n  //     if (this.props.players[this.props.playerno].question !== nextProps.players[nextProps.playerno].question) {\n  //       const player = nextProps.players[nextProps.playerno];\n  //       this.setState({ question: player.question });\n  //     }\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    // console.log('[PlayerSection] componentDidUpdate');\n    const player = this.props.players[this.props.playerno];\n    if (player.question !== this.state.fullquestion) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      if (player.questiontype.delay === 0)\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ question: player.question, fullquestion: player.question });\n      else {\n        // eslint-disable-next-line react/no-did-update-set-state\n        // this.setState({ qcounter: 0 });\n        this.displayQuestion(player, 0);\n      }\n    }\n  }\n\n  animateNextQuestion = (player) => {\n    const timer = setTimeout(() => {\n      if (this.state.qcounter >= player.questions.length) return;\n      this.setState((prevState) => ({ qcounter: prevState.qcounter + 1, question: player.questions[prevState.qcounter], fullquestion: player.question }));\n      this.animateNextQuestion(player);\n    }, 1000 * player.questiontype.delay);\n    this.timers.push(timer);\n  };\n\n  displayQuestion = (player, no) => {\n    let i = no < 0 ? 0 : no;\n    i = no >= player.questions.length ? player.questions.length - 1 : no;\n    if (i >= player.questions.length || i < 0) return;\n    console.log('[displayquestion]', i);\n    this.setState((prevState) => ({ qcounter: i + 1, question: player.questions[i], fullquestion: player.question }));\n    this.animateNextQuestion(player);\n  };\n\n  nextQuestion = () => {\n    this.clearTimer();\n    console.log('[nextquestion]', this.state.qcounter);\n    const player = this.props.players[this.props.playerno];\n    this.displayQuestion(player, this.state.qcounter);\n  };\n\n  prevQuestion = () => {\n    this.clearTimer();\n    const player = this.props.players[this.props.playerno];\n    console.log('[nextquestion]', this.state.qcounter);\n    this.displayQuestion(player, this.state.qcounter - 2);\n  };\n\n  buttonTheme = () => {\n    return this.props.playerno === '1' ? 'w3-ripple w3-hover-indigo w3-indigo' : 'w3-ripple w3-hover-red w3-pink';\n  };\n\n  sectionTheme = () => {\n    return this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink';\n  };\n\n  goClick = () => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n\n    if (!this.inputAnswer.value) return;\n\n    this.clearTimer();\n\n    let answer = this.inputAnswer.value;\n\n    if (player.questiontype.decimals > 0) answer = (+this.inputAnswer.value).toFixed(2).replace(/(\\.0+|0+)$/, '');\n\n    // console.log(answer,String(answer).replace(/^0+/, '') , String(player.answer).replace(/^0+/, ''))\n\n    // eslint-disable-next-line eqeqeq\n    if (String(answer).replace(/^0+/, '') == String(player.answer).replace(/^0+/, '')) {\n      if (player.points === player.questiontype.points - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.success.play();\n        this.movingfish.play();\n        this.props.win(this.props.playerno);\n        setTimeout(() => {\n          this.props.complete(this.props.playerno);\n          this.props.history.push('/math-race/complete');\n          this.claps.play();\n        }, 2000);\n\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      this.success.play();\n      this.movingfish.play();\n      // new UIfx({ asset: successSound }).play();\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.wrong.play();\n      // new UIfx({ asset: wrongSound }).play();\n    }\n  };\n\n  clearTimer = () => {\n    this.timers.forEach((timer) => {\n      clearInterval(timer);\n    });\n  };\n\n  restart = () => {\n    const player = this.props.players[this.props.playerno];\n    this.clearTimer();\n\n    this.setState({ question: '', fullquestion: player.question });\n    // const timer = setTimeout(() => {\n    // eslint-disable-next-line react/no-did-update-set-state\n    // this.setState({ qcounter: 0 });\n    this.displayQuestion(player, 0);\n    // }, 1000);\n    // clearInterval(timer);\n  };\n\n  appendAnswer = (val) => {\n    if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n    else this.inputAnswer.value += `${val}`;\n    this.click.play();\n  };\n\n  reset = () => {\n    this.props.reset();\n    this.props.history.push('/math-race/setup');\n  };\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answer, player.question, 'questions', player.questions);\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {player.answer}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[this.props.playerno === '0' ? Classes._0 : Classes._1].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.reset} tabIndex={0} onKeyPress={this.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '2s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          />\n        </div>\n        <div className={Classes.QuestionBar}>\n          <div>\n            <span className={[this.sectionTheme()].join(' ')}>\n              <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n            </span>\n            <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n              <span className={['fa-stack', Classes.Score].join(' ')}>\n                <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                  {player.points}\n                </strong>\n              </span>\n              <div>\n                <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                  <i className=\"fa fa-window-close\" />\n                </a>\n              </div>\n            </span>\n          </div>\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <span ref={this.questionRef} className={Classes.Question}>\n            <CSSTransition classNames=\"question\" timeout={200}>\n              <div>\n                <span style={{ display: 'inline-block', fontSize: '2.5em' }} dangerouslySetInnerHTML={{ __html: this.state.question }} />\n              </div>\n            </CSSTransition>\n            <div className={Classes.Refresh}>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.prevQuestion}\n                tabIndex={0}\n                onKeyPress={this.prevQuestion}\n              >\n                <i className=\"fa fa-long-arrow-left\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.nextQuestion}\n                tabIndex={0}\n                onKeyPress={this.nextQuestion}\n              >\n                <i className=\"fa fa-long-arrow-right\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.restart}\n                tabIndex={0}\n                onKeyPress={this.restart}\n              >\n                <i className=\"fa fa-refresh\" />\n              </a>\n            </div>\n            <input\n              ref={(e) => {\n                this.inputAnswer = e;\n              }}\n              onKeyDown={() => false}\n              onKeyPress={() => false}\n              onKeyUp={() => false}\n              type=\"text\"\n              maxLength=\"7\"\n              className={['w3-btn', 'w3-round-large', this.sectionTheme(), Classes.Answer].join(' ')}\n            />\n          </span>\n        </div>\n        <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'none' : 'block' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('.')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            .\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'block' : 'none' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer(':')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            :\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  win: (playerno) => dispatch(ReducerActions.win(playerno)),\n  complete: () => dispatch(ReducerActions.complete()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerSection);\n","import React, { Fragment } from 'react';\nimport * as Classes from './RaceComplete.module.css';\n\nfunction RaceComplete(props) {\n  const winner = props.players[0].points >= props.players[1].points ? props.players[0].name : props.players[1].name;\n\n  const playAgain=() => {\n    props.reset();\n    props.history.push('/math-race/setup')\n  }\n\n  const players = [...props.players].reverse().map((player) => {\n    if (!player.name) return <Fragment key={player.id} />;\n    const score = +player.points + (winner === player.name ? 10 : 0);\n    return (\n      <div key={player.id}>\n        <h1>\n          {winner === player.name ? 'Good Job' : 'Keep trying'} {player.name}\n        </h1>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.points}</strong>\n          <span className={Classes.ScoreLabel}>Correct</span>\n        </span>\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{-player.wrong}</strong>\n          <span className={Classes.ScoreLabel}>Wrong</span>\n        </span> */}\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{winner === player.name ? 10 : 0}</strong>\n          <span className={Classes.ScoreLabel}>Win Bonus</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{score}</strong>\n          <span className={Classes.ScoreLabel}>Total</span>\n        </span>\n      </div>\n    );\n  });\n  return (\n    <div className={Classes.RaceComplete}>\n      {players}\n      <button type=\"button\" onClick={playAgain} onKeyPress={playAgain} className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}>\n        Play Again &gt;&gt;\n      </button>\n    </div>\n  );\n}\n\nexport default RaceComplete;\n","import React from 'react';\nimport * as Classes from './DrawArea.module.css';\n\nfunction DrawingLine({ line }) {\n  const pathData = `M ${\n     line\n      .map((p) => {\n        return `${p.get('x')} ${p.get('y')}`;\n      })\n      .join(' L ')}`;\n\n  return <path className={Classes.path} d={pathData} />;\n}\n\nexport default DrawingLine;\n","import React from 'react';\nimport DrawingLine from './DrawingLine';\nimport * as Classes from './DrawArea.module.css';\n\nfunction Drawing({ lines }) {\n  return (\n    <svg className={Classes.drawing}>\n      {lines.map((line, index) => (\n        <DrawingLine key={index} line={line} />\n      ))}\n    </svg>\n  );\n}\n\nexport default Drawing;\n","import React, { Component } from 'react';\nimport Map, { List } from 'immutable';\nimport Drawing from './Drawing';\nimport * as Classes from './DrawArea.module.css';\n\nclass DrawArea extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      lines: new List(),\n      isDrawing: false,\n    };\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  handleMouseDown(mouseEvent) {\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState((prevState) => ({\n      lines: prevState.lines.push(new List([point])),\n      isDrawing: true,\n    }));\n  }\n\n  handleMouseMove(mouseEvent) {\n    if (!this.state.isDrawing) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState((prevState) => ({\n      lines: prevState.lines.updateIn([prevState.lines.size - 1], (line) => line.push(point)),\n    }));\n  }\n\n  handleMouseUp() {\n    this.setState({ isDrawing: false });\n  }\n\n  relativeCoordinatesForEvent(mouseEvent) {\n    const boundingRect = this.drawArea.getBoundingClientRect();\n    return new Map({\n      x: mouseEvent.clientX - boundingRect.left,\n      y: mouseEvent.clientY - boundingRect.top,\n    });\n  }\n\n  render() {\n    return (\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={Classes.drawArea}\n        ref={(c) => {\n          this.drawArea = c;\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.handleMouseMove}\n      >\n        <Drawing lines={this.state.lines} />\n      </div>\n    );\n  }\n}\n\nexport default DrawArea;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './PlayerSelection.module.css';\n\nclass PlayerSelection extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    this.state = {\n      multiplayer: !!props.multiplayer,\n      player0: players[0],\n      player1: players[1],\n    };\n  }\n\n  goNext = () => {\n    let { player1 } = this.state;\n    if (this.state.multiplayer && !this.state.player1) player1 = 'Player 2';\n    else if (!this.state.multiplayer && this.state.player1) player1 = '';\n\n    this.props.setMultiplayer(this.state.multiplayer, this.state.player0, player1);\n    this.props.history.push('/math-race/setup');\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n        <div className={Classes.PlayerSelection}>\n          <div className={Classes.RaceSetup}>\n            <div>\n              <input type=\"radio\" name=\"mode\" value=\"false\" onChange={(e) => this.setState({ multiplayer: false })} defaultChecked={!this.state.multiplayer} />\n              <label>Single Player</label>\n              <input type=\"text\" placeholder=\"Player Name\" onChange={(e) => this.setState({ player0: e.currentTarget.value })} name=\"player1\" value={this.state.player0} />\n            </div>\n\n            <div>\n              <input type=\"radio\" name=\"mode\" value=\"true\" onChange={(e) => this.setState({ multiplayer: true })} defaultChecked={!!this.state.multiplayer} />\n              <label>Two Player</label>\n              <input\n                style={{ visibility: !this.state.multiplayer ? 'hidden' : 'visible' }}\n                type=\"text\"\n                name=\"player1\"\n                placeholder=\"Player Name\"\n                onChange={(e) => this.setState({ player1: e.currentTarget.value })}\n                value={this.state.player1}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexFlow: 'row', justifyContent: 'flex-end', marginRight: '10px' }}>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              onClick={this.goNext}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Next &gt;&gt;\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  multiplayer: state.game.multiplayer,\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setMultiplayer: (multiplayer, playername1, playername2) => dispatch(ReducerActions.multiplayermode(multiplayer, playername1, playername2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSelection);\n","import React, { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport MultiplayerSection from '../MultiplayerSection/MultiplayerSection';\nimport * as Classes from './MultiplayerWrapper.module.css';\n\nclass MultiplayerPlay extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const players = this.props.players.map((player, index) => (player.name ? <MultiplayerSection history={this.props.history} key={player.id} playerno={`${player.id}`} /> : <Fragment key={player.id} />));\n    return (\n      <div\n        className={Classes.Race}\n        style={{\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/underwater.png)`,\n        }}\n      >\n        {players}\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerPlay);\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// import Slider from 'react-rangeslider';\nimport InputRange from 'react-input-range';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './SingleplayerSetup.module.css';\n// import 'react-rangeslider/lib/index.css'\nimport 'react-input-range/lib/css/index.css';\n\nclass SingleplayerSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    const type = [(props.players && props.players[0].questiontype.type) || '+-', (props.players && props.players[1].questiontype.type) || '+-'];\n    const digits = [(props.players && props.players[0].questiontype.digits) || '2', (props.players && props.players[1].questiontype.digits) || '2'];\n\n    this.state = {\n      type0: type[0],\n      digits0: (props.players && props.players[0].questiontype.digits) || 3,\n      player0: players[0],\n      numbers0: (props.players && props.players[0].questiontype.nos) || 4,\n      decimals0: (props.players && props.players[0].questiontype.decimals) || 0,\n      points0: (props.players && props.players[0].questiontype.points) || 10,\n      inwords0: props.players && props.players[0].questiontype.inwords,\n      tens0: props.players && props.players[0].questiontype.tens,\n      delay0: (props.players && props.players[0].questiontype.delay) || 0,\n      level0: (props.players && props.players[0].questiontype.level) || 2,\n      HR240: props.players && props.players[0].questiontype.HR24,\n    };\n\n    // console.log('SingleplayerSetup[constructor]', this.state);\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[SingleplayerSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { player0, digits0, numbers0, decimals0, type0, points0, inwords0, tens0, delay0, level0, HR240 } = this.form;\n    // console.log('[SingleplayerSetup]', this.form);\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: ['+-'].includes(type0.value) ? +decimals0.value : 0,\n      points: +points0.value,\n      delay: ['+-', '+-x', 'BAL'].includes(type0.value) ? +delay0.value : 0,\n      tens: tens0.value,\n      HR24: HR240.value,\n      level: +level0.value,\n      inwords: inwords0.value === 'true',\n    };\n    // const questiontype1 = {\n    //   type: type1.value,\n    //   nos: +numbers1.value,\n    //   digits: +digits1.value,\n    //   points: +points1.value,\n    //   decimals: ['+-'].includes(type1.value) ? +decimals1.value : 0,\n    //   delay: ['+-', '+-x'].includes(type1.value) ? +delay1.value : 0,\n    //   tens: tens1.value,\n    //   HR24: HR241.value,\n    //   level: +level1.value,\n    //   inwords: inwords1.value === 'true',\n    // };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(this.state.player0, '', questiontype0, questiontype0);\n    this.props.history.push('/math-race/play');\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    // console.log('[SingleplayerSetup] render');\n\n    const player = [(this.props.players && this.props.players[0].name) || 'Hasana'];\n\n    const index = 0;\n    const { name, questiontype } = this.props.players[0];\n    const playersetup = (\n      <div key={index}>\n        <div className=\"w3-row\">\n          <div className={['w3-col m6', Classes.Type].join(' ')}>\n            <div className={Classes.Group4}>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-'} />\n                <label>+-</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'x'} />\n                <label>X</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"/\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '/'} />\n                <label>/</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-x'} />\n                <label>+-x</label>\n              </div>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"X2\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'X2'} />\n              <label>\n                X<sup>2</sup>\n              </label>\n            </div>\n            <div className={Classes.Group2}>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"TIME+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'TIME+-'} />\n                <label>Time Difference</label>\n              </div>\n              <div>\n                <input\n                  type=\"radio\"\n                  name={`type${index}`}\n                  value=\"TIMEHRS+-\"\n                  onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })}\n                  defaultChecked={questiontype.type === 'TIMEHRS+-'}\n                />\n                <label>Time +- Hrs</label>\n              </div>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"BAL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'BAL'} />\n              <label>Balancing Technique</label>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"FILL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'FILL'} />\n              <label>Fill</label>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"MONEY\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'MONEY'} />\n              <label>Money</label>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"WORD\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'WORD'} />\n              <label>Word</label>\n            </div>\n          </div>\n          <div className={['w3-col m6'].join(' ')}>\n            <div className={[Classes.Options].join(' ')}>\n              <div style={{ display: ['+-', '+-x', 'x', '/', 'X2', 'WORD', 'FILL', 'MONEY'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Digits</h5>\n                <InputRange name=\"digits0\" minValue={1} maxValue={4} value={this.state.digits0} onChange={(value) => this.setState({ digits0: value })} step={1} />\n              </div>\n\n              <div style={{ marginLeft: '0px', display: ['+-', '+-x', 'BAL'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Numbers</h5>\n                <InputRange name=\"numbers0\" minValue={2} maxValue={10} value={this.state.numbers0} onChange={(value) => this.setState({ numbers0: value })} step={1} />\n              </div>\n\n              <div style={{ display: this.state[`digits${index}`] === 2 && ['X2'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Tens only</h5>\n                <div className={Classes.Items}>\n                  <div>\n                    <input type=\"radio\" name={`tens${index}`} value=\"Y\" defaultChecked={questiontype.tens === 'Y'} />\n                    <label>Yes</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`tens${index}`} value=\"N\" defaultChecked={questiontype.tens === 'N'} />\n                    <label>No</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-','TIME+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>24Hr</h5>\n                <div className={Classes.Items}>\n                  <div>\n                    <input type=\"radio\" name={`HR24${index}`} value=\"Y\" defaultChecked={questiontype.HR24 === 'Y'} />\n                    <label>Yes</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`HR24${index}`} value=\"N\" defaultChecked={questiontype.HR24 === 'N'} />\n                    <label>No</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: ['+-', 'TIMEHRS+-', 'TIME+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Level</h5>\n                <InputRange\n                  name=\"level0\"\n                  minValue={1}\n                  maxValue={this.state[`type${index}`] === '+-' ? 2 : 4}\n                  value={this.state.level0}\n                  onChange={(value) => this.setState({ level0: value })}\n                  step={1}\n                />\n              </div>\n              <div style={{ display: ['+-', '+-x', 'BAL'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Delay</h5>\n                <InputRange name=\"delay0\" minValue={0} maxValue={10} value={this.state.delay0} onChange={(value) => this.setState({ delay0: value })} step={1} formatLabel={(value) => `${value}s`} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <h5>In Words</h5>\n                <div className={Classes.Items}>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"true\" defaultChecked={!!questiontype.inwords} />\n                    <label>Yes</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"false\" defaultChecked={!questiontype.inwords} />\n                    <label>No</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n                <h5>Decimals</h5>\n                <InputRange name=\"decimals0\" minValue={0} maxValue={2} value={this.state.decimals0} onChange={(value) => this.setState({ decimals0: value })} step={1} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <h5>Points</h5>\n                <InputRange name=\"points0\" minValue={1} maxValue={20} value={this.state.points0} onChange={(value) => this.setState({ points0: value })} step={1} />\n              </div>\n              <div style={{ display: 'flex' }} />\n            </div>\n          </div>\n          {/* <div className={['w3-col m4', Classes.Type].join(' ')}>\n          </div>\n          \n         */}\n        </div>\n      </div>\n    );\n\n    return (\n      <Fragment>\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h5 className=\"w3-container\" style={{ width: '100%', textAlign: 'center' }}>\n            Maths Race {player}\n          </h5>\n          <div className={['w3-container', Classes.SingleplayerSetup].join(' ')}>\n            {playersetup}\n            <div>\n              <button\n                type=\"submit\"\n                value=\"Start\"\n                // onKeyPress={(e) => this.startGame(e)}\n                // onClick={(e) => this.startGame(e)}\n                className={['w3-btn', 'w3-round', Classes.BtnGo].join(' ')}\n              >\n                Start &gt;&gt;\n              </button>\n\n              <button\n                type=\"button\"\n                value=\"Home\"\n                // onKeyPress={(e) => this.startGame(e)}\n                onKeyPress={(e) => this.props.history.push('/math-race')}\n                onClick={(e) => this.props.history.push('/math-race')}\n                className={['w3-btn', 'w3-round', 'w3-white', Classes.BtnGo].join(' ')}\n              >\n                &lt; &lt; Home\n              </button>\n            </div>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerSetup);\n","import React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { render } from '@testing-library/react';\nimport Classes from './AnswerInput.module.css';\n\nclass AnswerInput extends PureComponent {\n  // const {} = props\n  componentDidMount() {\n    this.props.resetAnswer(this.resetInput);\n    this.props.focusAnswer(this.focusInput);\n    this.inputAnswer.focus();\n  }\n\n  submitAnswer = (e) => {\n    let answer = this.inputAnswer.value;\n    if (this.props.seperator) answer = `${this.inputAnswer.value}${this.props.seperator}${this.inputAnswer1.value}`;\n    this.props.goClick(answer);\n  };\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.submitAnswer(e);\n    }\n  };\n\n  _handleKeyDown1 = (e) => {\n    if (e.key === 'Enter') {\n      this.inputAnswer1.focus();\n    }\n  };\n\n  resetInput = () => {\n    this.inputAnswer.value = '';\n    if (this.props.seperator) this.inputAnswer1.value = '';\n    this.focusInput();\n  };\n\n  focusInput = () => {\n    this.inputAnswer.focus();\n  };\n\n  //   let inputAnswer = null;\n\n  render() {\n    let inputfields = (\n      <input\n        ref={(e) => {\n          this.inputAnswer = e;\n        }}\n        inputMode=\"numeric\"\n        onKeyDown={this._handleKeyDown}\n        type=\"text\"\n        maxLength=\"7\"\n        className={['w3-btn', 'w3-round-large'].join(' ')}\n      />\n    );\n\n    if (this.props.seperator) {\n      inputfields = (\n        <Fragment>\n          <input\n            placeholder=\"hrs\"\n            ref={(e) => {\n              this.inputAnswer = e;\n            }}\n            inputMode=\"numeric\"\n            onKeyDown={this._handleKeyDown1}\n            type=\"text\"\n            maxLength=\"7\"\n            className={['w3-btn', 'w3-round-large'].join(' ')}\n          />\n          {this.props.seperator}\n          <input\n            placeholder=\"min\"\n            ref={(e) => {\n              this.inputAnswer1 = e;\n            }}\n            inputMode=\"numeric\"\n            onKeyDown={this._handleKeyDown}\n            type=\"text\"\n            maxLength=\"7\"\n            className={['w3-btn', 'w3-round-large'].join(' ')}\n          />\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        {inputfields}\n\n        <button type=\"button\" onClick={this.submitAnswer} className={['w3-btn', 'w3-round-large', 'ColorTheme', Classes.BtnGo].join(' ')}>\n          GO\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nAnswerInput.propTypes = {\n  // type: PropTypes.string.isRequired,\n  seperator: PropTypes.string,\n  goClick: PropTypes.func.isRequired,\n  focusAnswer: PropTypes.func.isRequired,\n  resetAnswer: PropTypes.func.isRequired,\n};\n\nexport default AnswerInput;\n","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n// import useSound from 'use-sound';\nimport { Howl, Howler } from 'howler';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './SingleplayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\nimport clickSound from '../../sounds/click.mp3';\nimport clapsSound from '../../sounds/claps.mp3';\nimport AnswerInput from '../AnswerInput/AnswerInput';\n// // import PlaySound from '../../Utils/PlaySound';\n// import UIfx from 'uifx';\n\nclass SingleplayerSection extends PureComponent {\n  success = new Howl({ src: successSound, volume: 1 });\n  wrong = new Howl({ src: wrongSound, volume: 1 });\n  click = new Howl({ src: clickSound, volume: 1 });\n  movingfish = new Howl({ src: movingFishSound, volume: 1 });\n  claps = new Howl({ src: clapsSound, volume: 1 });\n  timers = [];\n\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n    question: '',\n    fullquestion: '',\n    qcounter: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    const player = this.props.players[this.props.playerno];\n    if (player.questiontype.delay === 0) this.setState({ question: player.question, fullquestion: player.question });\n    else {\n      // eslint-disable-next-line react/no-did-update-set-state\n      // this.setState({ qcounter: 0 });\n      this.displayQuestion(player, 0);\n    }\n    // console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', this.props.players[this.props.playerno].question , nextProps.players[nextProps.playerno].question);\n  //     if (this.props.players[this.props.playerno].question !== nextProps.players[nextProps.playerno].question) {\n  //       const player = nextProps.players[nextProps.playerno];\n  //       this.setState({ question: player.question });\n  //     }\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    // console.log('[PlayerSection] componentDidUpdate');\n    const player = this.props.players[this.props.playerno];\n    if (player.question !== this.state.fullquestion) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      if (player.questiontype.delay === 0)\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ question: player.question, fullquestion: player.question });\n      else {\n        // eslint-disable-next-line react/no-did-update-set-state\n        // this.setState({ qcounter: 0 });\n        this.displayQuestion(player, 0);\n      }\n    }\n  }\n\n  animateNextQuestion = (player) => {\n    const timer = setTimeout(() => {\n      if (this.state.qcounter >= player.questions.length) return;\n      this.setState((prevState) => ({ qcounter: prevState.qcounter + 1, question: player.questions[prevState.qcounter], fullquestion: player.question }));\n      this.animateNextQuestion(player);\n    }, 1000 * player.questiontype.delay);\n    this.timers.push(timer);\n  };\n\n  displayQuestion = (player, no) => {\n    // this.inputAnswer.focus();\n    this.focusAnswer();\n    let i = no < 0 ? 0 : no;\n    i = no >= player.questions.length ? player.questions.length - 1 : no;\n    if (i >= player.questions.length || i < 0) return;\n    // console.log('[displayquestion]', i);\n    this.setState((prevState) => ({ qcounter: i + 1, question: player.questions[i], fullquestion: player.question }));\n    this.animateNextQuestion(player);\n  };\n\n  nextQuestion = () => {\n    this.clearTimer();\n    // console.log('[nextquestion]', this.state.qcounter);\n    const player = this.props.players[this.props.playerno];\n    this.displayQuestion(player, this.state.qcounter);\n  };\n\n  prevQuestion = () => {\n    this.clearTimer();\n    const player = this.props.players[this.props.playerno];\n    // console.log('[nextquestion]', this.state.qcounter);\n    this.displayQuestion(player, this.state.qcounter - 2);\n  };\n\n  buttonTheme = () => {\n    return 'ColorTheme';\n  };\n\n  sectionTheme = () => {\n    return 'ColorTheme';\n  };\n\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.goClick();\n    }\n  };\n\n  goClick = (inputAnswer) => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n\n    if (!inputAnswer) return;\n\n    this.clearTimer();\n\n    let answer = inputAnswer;\n\n    if (player.questiontype.decimals > 0) answer = (+inputAnswer).toFixed(2).replace(/(\\.0+|0+)$/, '');\n\n    // console.log('[SingleplayerSection]', answer, String(answer).replace(/^0+/, ''), String(player.answer).replace(/^0+/, ''));\n\n    // eslint-disable-next-line eqeqeq\n    if (String(answer).replace(/^0+/, '') == String(player.answer).replace(/^0+/, '')) {\n      if (player.points === player.questiontype.points - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.success.play();\n        this.movingfish.play();\n        this.props.win(this.props.playerno);\n        setTimeout(() => {\n          this.props.complete(this.props.playerno);\n          this.props.history.push('/math-race/complete');\n          this.claps.play();\n        }, 2000);\n\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.inputAnswer.value = '';\n        this.resetAnswer();\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      this.success.play();\n      this.movingfish.play();\n      // new UIfx({ asset: successSound }).play();\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.inputAnswer.value = '';\n        this.resetAnswer();\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.wrong.play();\n      // new UIfx({ asset: wrongSound }).play();\n    }\n  };\n\n  clearTimer = () => {\n    this.timers.forEach((timer) => {\n      clearInterval(timer);\n    });\n  };\n\n  restart = () => {\n    const player = this.props.players[this.props.playerno];\n    this.clearTimer();\n\n    this.setState({ question: '', fullquestion: player.question });\n    // const timer = setTimeout(() => {\n    // eslint-disable-next-line react/no-did-update-set-state\n    // this.setState({ qcounter: 0 });\n    this.displayQuestion(player, 0);\n    // }, 1000);\n    // clearInterval(timer);\n  };\n\n  //   appendAnswer = (val) => {\n  //     if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n  //     else this.inputAnswer.value += `${val}`;\n  //     this.click.play();\n  //   };\n\n  reset = () => {\n    this.props.reset();\n    this.props.history.push('/math-race/setup');\n  };\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answer, player.question, 'questions', player.questions);\n    let seperator = '';\n    seperator = player.questiontype.type === 'TIMEHRS+-' ? ':' : seperator;\n    seperator = player.questiontype.type === 'TIME+-' ? ':' : seperator;\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          {Utils.getDisplaySuccessMessage()}\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {`${Utils.getDisplayWrongMessage()}`}<br /> {`It's ${player.answer}`}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[Classes.SingleplayerSection].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.reset} tabIndex={0} onKeyPress={this.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <div className=\"w3-light-grey w3-round\">\n            <div className=\"w3-container w3-round ColorTheme\" style={{ width: `${player.points * (100 / +player.questiontype.points)}vw` }}>\n              <span className={Classes.ProgressBar}>{`${player.points}/${player.questiontype.points}`}</span>\n            </div>\n          </div>\n          {/* <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '2s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          /> */}\n        </div>\n        <div className={Classes.QuestionBar}>\n          {/* <div>\n            <span className={[this.sectionTheme()].join(' ')}>\n              <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n            </span>\n            <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n              <span className={['fa-stack', Classes.Score].join(' ')}>\n                <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                  {player.points}\n                </strong>\n              </span>\n              <div>\n                <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                  <i className=\"fa fa-window-close\" />\n                </a>\n              </div>\n            </span>\n          </div> */}\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <div ref={this.questionRef} className={Classes.Question}>\n            <CSSTransition classNames=\"question\" timeout={200}>\n              <div>\n                <span style={{ display: 'inline-block', fontSize: '2.5em' }} dangerouslySetInnerHTML={{ __html: this.state.question }} />\n              </div>\n            </CSSTransition>\n\n            <div className={Classes.Refresh}>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.prevQuestion}\n                tabIndex={0}\n                onKeyPress={this.prevQuestion}\n              >\n                <i className=\"fa fa-long-arrow-left\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.nextQuestion}\n                tabIndex={0}\n                onKeyPress={this.nextQuestion}\n              >\n                <i className=\"fa fa-long-arrow-right\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.restart}\n                tabIndex={0}\n                onKeyPress={this.restart}\n              >\n                <i className=\"fa fa-refresh\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: 'flex' }}\n                role=\"button\"\n                onClick={() => this.setState({ closedisplay: true })}\n                tabIndex={0}\n                onKeyPress={() => this.setState({ closedisplay: true })}\n              >\n                <i className=\"fa fa-window-close\" />\n              </a>\n            </div>\n            <div className={Classes.Answer}>\n              <AnswerInput\n                resetAnswer={(e) => {\n                  this.resetAnswer = e;\n                }}\n                focusAnswer={(e) => {\n                  this.focusAnswer = e;\n                }}\n                seperator={seperator}\n                goClick={this.goClick}\n              />\n              {/* <input\n                ref={(e) => {\n                  this.inputAnswer = e;\n                }}\n                inputMode=\"numeric\"\n                onKeyDown={this._handleKeyDown}\n                type=\"text\"\n                maxLength=\"7\"\n                className={['w3-btn', 'w3-round-large'].join(' ')}\n              /> */}\n            </div>\n          </div>\n        </div>\n        {/* <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'none' : 'block' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('.')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            .\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'block' : 'none' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer(':')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            :\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  win: (playerno) => dispatch(ReducerActions.win(playerno)),\n  complete: () => dispatch(ReducerActions.complete()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerSection);\n","import React, { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport SingleplayerSection from '../SingleplayerSection/SingleplayerSection';\nimport * as Classes from './SingleplayerWrapper.module.css';\n\nclass SingleplayerWrapper extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const player = this.props.players[0];\n    return (\n      <div className={Classes.Race}>\n        <SingleplayerSection history={this.props.history} key={player.id} playerno={`${player.id}`} />\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerWrapper);\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Race from '../../components/Race/Race';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport MultiplayerSetup from '../../components/MultiplayerSetup/MultiplayerSetup';\nimport MultiplayerSection from '../../components/MultiplayerSection/MultiplayerSection';\nimport * as Classes from './RaceWrapper.module.css';\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\nimport DrawArea from '../../components/DrawArea/DrawArea';\nimport PlayerSelection from '../../components/PlayerSelection/PlayerSelection';\nimport MultiplayerWrapper from '../../components/MultiplayerWrapper/MultiplayerWrapper';\nimport SingleplayerSetup from '../../components/SingleplayerSetup/SingleplayerSetup';\nimport SingleplayerWrapper from '../../components/SingleplayerWrapper/SingleplayerWrapper';\n\nclass RaceWrapper extends Component {\n  constructor(props) {\n    super(props);\n    // console.log('[Racewrapper] constructor');\n    this.state = {};\n\n    this.props.reset();\n    // const questiontype = {\n    //     type: '+-',\n    //     nos: 4,\n    //     digits: 3,\n    //     decimals: 0,\n    // };\n    // this.props.init('Nanna', 'Hasana', questiontype);\n    // this.props.start();\n  }\n\n  shouldComponentUpdate(nextProps, newState) {\n    // console.log('[RaceWrapper] shouldComponentUpdate', !this.props.players && nextProps.players);\n    return (!this.props.players && nextProps.players) || this.props.starttime !== nextProps.starttime || this.props.endtime !== nextProps.endtime;\n    // return true;\n  }\n\n  render() {\n    // console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n    return (\n      <Fragment>\n        <Route path=\"/math-race\" exact component={PlayerSelection} />\n\n        <Route path=\"/math-race/setup\" exact render={(props) => (this.props.multiplayer ? <MultiplayerSetup {...props} /> : <SingleplayerSetup {...props} />)} />\n        <Route path=\"/math-race/play\" exact render={(props) => (this.props.multiplayer ? <MultiplayerWrapper {...props} /> : <SingleplayerWrapper {...props} />)} />\n        <Route path=\"/math-race/complete\" exact render={(props) => <RaceComplete {...props} players={this.props.players} reset={this.props.reset} />} />\n        {/* <Route path=\"/math-race/setup\" exact component={RaceSetup2} />\n        <Route path=\"/math-race/complete\" render={(props) => (<RaceComplete players={this.props.players} reset={this.props.reset} />)} /> */}\n        {/* <div className={Classes.Race}> */}\n\n        {/* <Route path=\"/math-race/play\" exact component={RacePlayerSelection} /> */}\n\n        {/* </div> */}\n      </Fragment>\n    );\n\n    // if (!this.props.starttime)\n    //   return (\n    //     <div className={Classes.Race}>\n    //       <Route path=\"/math-race\" exact component={RaceSetup} />\n    //     </div>\n    //   );\n    // else if (this.props.endtime)\n    //   return (\n    //     <div className={Classes.Race}>\n    //       <Route path=\"/math-race/complete\" render={(props) => (<RaceComplete players={this.props.players} reset={this.props.reset} />)} />\n    //     </div>\n    //   );\n\n    // const players = this.props.players.map((player, index) => (player.name ? <PlayerSection key={player.id} playerno={`${player.id}`} /> : <Fragment key={player.id} />));\n    // const players = this.props.players.map((player, index) => (player.name ? <PlayerSection key={player.id} playerno={`${player.id}`} /> : <DrawArea />));\n    // console.log('[Race] render', this.props.players);\n    // return (\n    // <div\n    // className={Classes.Race}\n    // style={{\n    //   backgroundImage: `url(${process.env.PUBLIC_URL}/images/underwater.png)`,\n    // }}\n    // >\n    // {players}\n    // {/* <div className={Classes.Divider}/> */}\n    // </div>\n    // );\n    // return (\n    //         <Race players={this.props.players} />\n    // )\n  }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  multiplayer: state.game.multiplayer,\n  starttime: state.game.starttime,\n  endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper);\n","// import { null } from 'mathjs';\nimport React, { Component } from 'react';\nimport firebase from './Config/Firebase';\nimport * as Utils from './Utils/QuestionGenerator';\nimport axios from './axios-firebase';\n\n// import QuestionsDataService from './QuestionsDataService'\n\nclass Temp extends Component {\n  state = {\n    questions: null,\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const questions = [];\n    const res=await axios.get('/questions.json');\n    const { data } = await res;\n\n    // axios\n      // .get('/questions.json')\n      // .then((response) => {\n        console.log(data.Word);\n        data.Word.forEach((item, idx) => {\n          // const question = item;\n          questions.push({ id: idx, ...item });\n          console.log(questions);\n        });\n\n        questions.forEach((question, idx) => {\n            const q = question.question;\n            const params = {};\n            for (let i = 0; ; i += 1) {\n              if (!(i in question)) break;\n              params[i] = question[i];\n            }\n      \n            Object.keys(params)\n              .sort()\n              .forEach((key) => {\n                const params1 = { ...params };\n                const param = params[key];\n                if (param.indexOf('{val}') > -1) params1.val = Utils.randomIntFromInterval(10, 99);\n                const substitute = Utils.replaceValues(param, params1);\n                const evalstr = Utils.evaluate(substitute);\n                params[key] = evalstr;\n              });\n            const answer = Utils.evaluate(Utils.replaceValues(question.answer, params));\n            const questionstr = Utils.replaceValues(question.question, params);\n            const question1 = { answer: answer, question: questionstr };\n            questions[idx] = { ...question, ...params };\n            console.log(question1);\n        \n          // const snapshot = db.collection('/questions').startAfter(2).limit(1);\n          // const item = await snapshot.get();\n          // const questions = [];\n          // // collections.docs.forEach((item) => {\n          //   const question = item.data();\n          //   questions.push({ id: item.id, ...question });\n          //   // Object.keys(question).forEach((key) => {\n          //   //   console.log(`${key} - ${question[key]}`);\n          //   // });\n          // // });\n          console.log(questions);\n          this.setState({ questions: questions });\n          // Object.keys(question).forEach((key) => {\n          //   console.log(`${key} - ${question[key]}`);\n          // });\n        // });\n        // dispatch(setIngredients(response.data))\n      })\n      // .catch((error) => {\n      //   console.log(error);\n      //   // dispatch(fetchIngredientsFailed());\n      // });\n  // }\n  // async componentDidMount() {\n  //   console.log('Loading...');\n  //   const db = firebase.firestore();\n  //   const firebaseDb = db.collection('/questions');\n  //   console.log(firebaseDb);\n  //   const snapshot = db.collection('/questions');\n  //   const collections = await snapshot.get();\n  //   const questions = [];\n  //   collections.docs.forEach((item) => {\n  //     const question = item.data();\n  //     questions.push({ id: item.id, ...question });\n  //     // Object.keys(question).forEach((key) => {\n  //     //   console.log(`${key} - ${question[key]}`);\n  //     // });\n  //   });\n   \n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n    // const snapshot = await firebase.collection('questions').get();\n    // const questions = [];\n    // snapshot.docs.forEach((doc) => {\n    //   questions.push(doc.data());\n    //   console.log(doc.id, '=>', doc.data());\n    // });\n    // this.setState({ questions: questions });\n    // console.log(`Loaded${this.state.questions[0]}`);\n    // // const firebaseDb = firebase.collection('/questions')\n    // // firebaseDb.settings({\n    // //   timestampsInSnapshots: true,\n    // // });\n    // // const snapshot = await firebaseDb.collection('questions').get();\n    // // snapshot.forEach((doc) => {\n    // //   console.log(doc);\n    // // });\n  }\n\n  render() {\n    if (!this.state.questions) return <p>Loading....</p>;\n    else {\n      const wrapper = this.state.questions.map((question, idx) => {\n        return (\n          <p key={question.id}>\n            {question.question} - {question.answer}\n          </p>\n        );\n      });\n      return <div>{wrapper}</div>;\n    }\n  }\n}\n\nexport default Temp;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper';\nimport Temp from '../temp';\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n      {/* <Temp /> */}\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\n// import { null } from 'mathjs';\nimport * as actionTypes from '../actionTypes';\n\nconst questiontype = {\n  type: '+-',\n  nos: 2,\n  digits: 2,\n  decimals: 0,\n  points: 10,\n  tens: 'Y',\n  delay: 0,\n  inwords: false,\n  level: 1,\n  HR24: 'N',\n};\nconst player = {\n  name: null,\n  points: 0,\n  wrong: 0,\n  question: null,\n  answer: null,\n  answerresult: null,\n  questiontype: { ...questiontype },\n};\nconst initialState = {\n  starttime: null,\n  endtime: null,\n  // questiontype: {\n  //     type: '+-',\n  //     nos: 3,\n  //     digits: 3,\n  //     decimals: 0,\n  //     points:10,\n  // },\n  multiplayer: false,\n  players: [\n    { id: 0, ...player },\n    { id: 1, ...player },\n  ],\n  wordquestions: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  // console.log(action.type)\n  // console.log('[reducer]', action.type);\n  let players = null;\n  switch (action.type) {\n    case actionTypes.SET_MULTIPLAYER:\n      return {\n        ...state,\n        players: [...action.players],\n        multiplayer: action.multiplayer,\n      };\n    case actionTypes.RESET:\n      return {\n        ...state,\n        starttime: null,\n        endtime: null,\n        // players: null,\n      };\n    case actionTypes.LOAD_QUESTIONS: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        wordquestions: action.questions,\n      };\n    case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        starttime: new Date(),\n        // questiontype: action.questiontype,\n        players: [...action.players],\n      };\n    // case actionTypes.START: // players:[{question,answer}]\n    //     players = [...state.players];\n    //     action.players.forEach((player, index) => {\n    //         players[index] = { ...players[index], ...player }\n    //     });\n    //     return {\n    //         ...state, starttime: new Date(), players: players,\n    //     };\n    case actionTypes.CORRECT:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].questions = action.questions;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'CORRECT';\n      return {\n        ...state,\n        players: [...players],\n      };\n    case actionTypes.WRONG:\n      players = [...state.players];\n      players[action.playerno].wrong += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].questions = action.questions;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'WRONG';\n      return {\n        ...state,\n        players: players,\n      };\n    case actionTypes.WIN:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      return {\n        ...state,\n        // endtime: new Date(),\n        players: [...players],\n      };\n    case actionTypes.COMPLETE:\n      // players = [...state.players];\n      // players[action.playerno].points += 1;\n      return {\n        ...state,\n        endtime: new Date(),\n        // players: [...players],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"MultiplayerSection__0__3FQ2z\",\"_1\":\"MultiplayerSection__1__1cAKq\",\"PlayerCharacter\":\"MultiplayerSection_PlayerCharacter__3QSp1\",\"QuestionBar\":\"MultiplayerSection_QuestionBar__XK5hd\",\"question-enter\":\"MultiplayerSection_question-enter__2KMpy\",\"question-enter-active\":\"MultiplayerSection_question-enter-active__1UzVo\",\"question-exit\":\"MultiplayerSection_question-exit__242UT\",\"question-exit-active\":\"MultiplayerSection_question-exit-active__2s6OB\",\"Question\":\"MultiplayerSection_Question__J6kWx\",\"Close\":\"MultiplayerSection_Close__1D6se\",\"Refresh\":\"MultiplayerSection_Refresh__2Eo9H\",\"ButtonBar\":\"MultiplayerSection_ButtonBar__svEE5\",\"Answer\":\"MultiplayerSection_Answer__2b1su\",\"BtnGo\":\"MultiplayerSection_BtnGo__33T6Z\",\"BtnNumber\":\"MultiplayerSection_BtnNumber__2X92x\",\"HideQuestion\":\"MultiplayerSection_HideQuestion__2-oOJ\",\"hide-question\":\"MultiplayerSection_hide-question___SqoQ\",\"ShowQuestion\":\"MultiplayerSection_ShowQuestion__ifrF6\",\"show-question\":\"MultiplayerSection_show-question__2_CVP\",\"DisplayMessage\":\"MultiplayerSection_DisplayMessage__ztVg3\",\"MessageAnimate\":\"MultiplayerSection_MessageAnimate__2LgMl\",\"hide-animation\":\"MultiplayerSection_hide-animation__-RAXp\",\"Correct\":\"MultiplayerSection_Correct__3QQZL\",\"Wrong\":\"MultiplayerSection_Wrong__nTh0d\",\"points0\":\"MultiplayerSection_points0__3OZAD\",\"Ò\":\"MultiplayerSection_Ò__22fnT\",\"points1\":\"MultiplayerSection_points1__3nLOM\",\"points2\":\"MultiplayerSection_points2__fY2ls\",\"points3\":\"MultiplayerSection_points3__ZLtxp\",\"points4\":\"MultiplayerSection_points4__2laE2\",\"points5\":\"MultiplayerSection_points5__3hRkC\",\"points6\":\"MultiplayerSection_points6__1lFrV\",\"points7\":\"MultiplayerSection_points7__3boD6\",\"points8\":\"MultiplayerSection_points8__Mjm5G\",\"points9\":\"MultiplayerSection_points9__2KgCZ\",\"points10\":\"MultiplayerSection_points10__1RQat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawArea\":\"DrawArea_drawArea__2zm64\",\"drawing\":\"DrawArea_drawing__12Nyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerSelection\":\"PlayerSelection_PlayerSelection__12WSJ\",\"RaceSetup\":\"PlayerSelection_RaceSetup__-PjGT\",\"BtnGo\":\"PlayerSelection_BtnGo__2UJKn\"};"],"sourceRoot":""}