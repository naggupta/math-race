{"version":3,"sources":["components/PlayerSection/PlayerSection.module.css","components/RaceComplete/RaceComplete.module.css","components/RaceSetup/RaceSetup.module.css","UI/DisplayMessage/DisplayMessage.module.css","containers/RaceWrapper/RaceWrapper.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","sounds/success.mp3","sounds/wrong.mp3","sounds/movingfish.mp3","serviceWorker.js","Utils/QuestionGenerator.js","components/RaceSetup/RaceSetup.js","store/game/actions/actions.js","store/game/actions/actionTypes.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","components/PlayerSection/PlayerSection.js","components/RaceComplete/RaceComplete.js","containers/RaceWrapper/RaceWrapper.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","generateQuestion","questiontype","currentnumber","question","answer","nos","digits","decimals","totaldigits","i","sign","randomSign","tonumber","fromnumber","randomIntFromInterval","min","max","Math","floor","random","round","RaceSetup","props","handleSubmit","e","preventDefault","form","player0","player1","digits0","numbers0","decimals0","type0","points0","digits1","numbers1","decimals1","type1","points1","questiontype0","type","value","points","questiontype1","start","players","this","name","playersetup","map","index","key","className","Classes","defaultChecked","onChange","setState","currentTarget","style","display","onSubmit","ref","textAlign","join","PureComponent","connect","game","dispatch","playername1","playername2","questiontype2","id","wrong","Utils","answerresult","ReducerActions","DisplayMessage","Backdrop","show","classes","onClick","clicked","onKeyPress","role","tabIndex","Modal","modelClosed","transform","opacity","children","PlayerSection","closedisplay","buttonTheme","playerno","sectionTheme","goClick","player","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","complete","classList","remove","ShowQuestion","add","MessageAnimate","HideQuestion","setTimeout","nextQuestion","wrongAnswer","appendAnswer","val","slice","React","createRef","messagedisplay","Correct","margin","Wrong","_0","_1","reset","PlayerCharacter","position","transition","left","alt","_2","height","width","src","process","QuestionBar","PlayerName","Question","fontSize","onKeyDown","onKeyUp","maxLength","Answer","Score","color","Close","ButtonBar","data-playerno","BtnNumber","dataset","BtnGo","getstate","RaceComplete","winner","reverse","score","RaceWrapper","nextProps","newState","starttime","endtime","backgroundImage","Component","Layout","path","component","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f696e0db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"PlayerSection__0__16GFq\",\"_1\":\"PlayerSection__1__1EQA8\",\"PlayerCharacter\":\"PlayerSection_PlayerCharacter__118mI\",\"QuestionBar\":\"PlayerSection_QuestionBar__K1Czx\",\"Question\":\"PlayerSection_Question__3Ac7J\",\"Close\":\"PlayerSection_Close__1gOHI\",\"ButtonBar\":\"PlayerSection_ButtonBar__2tk7H\",\"Answer\":\"PlayerSection_Answer__1JQjr\",\"BtnGo\":\"PlayerSection_BtnGo__No7ze\",\"BtnNumber\":\"PlayerSection_BtnNumber__kbZb7\",\"HideQuestion\":\"PlayerSection_HideQuestion__2Rf4I\",\"hide-question\":\"PlayerSection_hide-question___kcKy\",\"ShowQuestion\":\"PlayerSection_ShowQuestion__PJYlO\",\"show-question\":\"PlayerSection_show-question__1c6wT\",\"DisplayMessage\":\"PlayerSection_DisplayMessage__3hzSb\",\"MessageAnimate\":\"PlayerSection_MessageAnimate__1NLY0\",\"hide-animation\":\"PlayerSection_hide-animation__1WCrl\",\"Correct\":\"PlayerSection_Correct__3LiMU\",\"Wrong\":\"PlayerSection_Wrong__l9GG-\",\"points0\":\"PlayerSection_points0__3RGGb\",\"Ò\":\"PlayerSection_Ò__iN7sG\",\"points1\":\"PlayerSection_points1__18mF8\",\"points2\":\"PlayerSection_points2__2M6od\",\"points3\":\"PlayerSection_points3__X6CcJ\",\"points4\":\"PlayerSection_points4__3bNiR\",\"points5\":\"PlayerSection_points5__YsW7z\",\"points6\":\"PlayerSection_points6__2GBKu\",\"points7\":\"PlayerSection_points7__2GXH2\",\"points8\":\"PlayerSection_points8__2T4s2\",\"points9\":\"PlayerSection_points9__3Vkzb\",\"points10\":\"PlayerSection_points10__3q6zW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"RaceSetup_BtnGo__1olAv\",\"BtnNumber\":\"RaceSetup_BtnNumber__1nWwX\",\"RaceSetup\":\"RaceSetup_RaceSetup__2MTWI\",\"Players\":\"RaceSetup_Players__3Mw1p\",\"Options\":\"RaceSetup_Options__3gKGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","module.exports = __webpack_public_path__ + \"static/media/success.9145040e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong.1cb7c040.mp3\";","module.exports = __webpack_public_path__ + \"static/media/movingfish.9529495e.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n      // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = '/math-race/service-worker.js'; \n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service '\n                + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all '\n                    + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.',\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n","export const generateQuestion = (questiontype) => {\n    let currentnumber = 0;\n    let question = '';\n    let answer = 0;\n    const {nos, digits, decimals = 0}=questiontype;\n    const totaldigits = digits + decimals;\n    for (let i = 0; i < nos; i += 1) {\n        const sign = (i === 0 || answer < 10 ** (totaldigits - 1) ? 1 : randomSign());\n\n        let tonumber = (10 ** totaldigits) - 1;\n        const fromnumber = (10 ** (totaldigits - 1)) + 1\n        if (sign < 0 && tonumber > answer) tonumber = answer;\n        // console.log(`${fromnumber},${tonumber}`)\n        currentnumber = randomIntFromInterval(fromnumber, tonumber, decimals);\n        answer += (sign * currentnumber);\n        question = `${question}${currentnumber > 0 && sign > 0 ? (i > 0 ? ' + ' : '') : ' - '}${currentnumber / (decimals === 0 ? 1 : (10 ** decimals))}`;\n    }\n    answer /= (decimals === 0 ? 1 : (10 ** decimals));\n    console.log(`${question} ? ${answer}`)\n    return {\n        question: question,\n        answer: answer,\n    }\n}\n\nconst randomIntFromInterval = (min, max, decimals) => { // min and max included \n    // if (decimals === 0)\n    return Math.floor(Math.random() * (max - min + 1) + min);\n    // else {\n    //     const decimalnumber = (10 ** decimals);\n    //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n    //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n    // }\n}\n\nconst randomSign = () => {\n    return Math.round(Math.random()) * 2 - 1;\n}\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './RaceSetup.module.css';\n\nclass RaceSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type0: '+-',\n      type1: '+-',\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[RaceSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { player0, player1, digits0, numbers0, decimals0, type0, points0, digits1, numbers1, decimals1, type1, points1 } = this.form;\n\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: +decimals0.value,\n      points: +points0.value,\n    };\n    const questiontype1 = {\n      type: type1.value,\n      nos: +numbers1.value,\n      digits: +digits1.value,\n      decimals: +decimals1.value,\n      points: +points1.value,\n    };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(player0.value, player1.value, questiontype0, questiontype1);\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    console.log('[RaceSetup] render');\n\n    const players = [(this.props.players && this.props.players[0].name) || 'Hasana', (this.props.players && this.props.players[1].name) || 'Nanna'];\n\n    const playersetup = [1,0].map((index) => {\n      const { name,questiontype } = this.props.players[index];\n      return (\n        <div key={index} className={Classes.RaceSetup}>\n          <div className={Classes.Players}>\n            <div>\n              <h2>{`Player - ${index + 1}`}</h2>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Bruhathi\" defaultChecked={players[index] === 'Bruhathi'} />\n                <label>Bruhathi</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Hasana\" defaultChecked={players[index] === 'Hasana'} />\n                <label>Hasana</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Krishna\" defaultChecked={players[index] === 'Krishna'} />\n                <label>Krishna</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Nanna\" defaultChecked={players[index] === 'Nanna'} />\n                <label>Nanna</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Amma\" defaultChecked={players[index] === 'Amma'} />\n                <label>Amma</label>\n              </div>\n            </div>\n            {/* <div><h2>Player1</h2>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Bruhathi\" defaultChecked={player1 === 'Bruhathi'} />\n                        <label>Bruhathi</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Hasana\" defaultChecked={player1 === 'Hasana'} />\n                        <label>Hasana</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Krishna\" defaultChecked={player1 === 'Krishna'} />\n                        <label>Krishna</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Nanna\" defaultChecked={player1 === 'Nanna'} />\n                        <label>Nanna</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Amma\" defaultChecked={player1 === 'Amma'} />\n                        <label>Amma</label>\n                    </div>\n                </div> */}\n          </div>\n          <div className={Classes.Options}>\n            <div>\n              <h2>Type</h2>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked=\"true\" />\n                <label>+-</label>\n              </div>\n              {/* <div>\n                        <input type=\"radio\" name=\"type\" value=\"*\" onChange={(e) => this.setState({ type: e.currentTarget.value })} />\n                        <label>X</label>\n                    </div> */}\n            </div>\n            <div style={{ display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n              <h2>Digits</h2>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"1\" defaultChecked={questiontype.digits === 1} />\n                <label>1</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"2\" defaultChecked={questiontype.digits === 2} />\n                <label>2</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"3\" defaultChecked={questiontype.digits === 3} />\n                <label>3</label>\n              </div>\n            </div>\n            <div style={{ display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n              <h2>Numbers</h2>\n\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"2\" defaultChecked={questiontype.nos === 2} />\n                <label>2</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"3\" defaultChecked={questiontype.nos === 3} />\n                <label>3</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"4\" defaultChecked={questiontype.nos === 4} />\n                <label>4</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"5\" defaultChecked={questiontype.nos === 5} />\n                <label>5</label>\n              </div>\n            </div>\n            <div style={{ display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n              <h2>Decimals</h2>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                <label>0</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                <label>1</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                <label>2</label>\n              </div>\n            </div>\n            <div>\n              <h2>Points</h2>\n              {/* <div>\n                        <input type=\"radio\" name={`points${index}`} value=\"1\" defaultChecked={questiontype.points === 1} />\n                        <label>1</label>\n                    </div> */}\n              {/* <div>\n                <input type=\"radio\" name={`points${index}`} value=\"2\" defaultChecked={questiontype.points === 2} />\n                <label>2</label>\n              </div> */}\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"5\" defaultChecked={questiontype.points === 5} />\n                <label>5</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"10\" defaultChecked={questiontype.points === 10} />\n                <label>10</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"15\" defaultChecked={questiontype.points === 15} />\n                <label>15</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"20\" defaultChecked={questiontype.points === 20} />\n                <label>20</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"25\" defaultChecked={questiontype.points === 25} />\n                <label>25</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      // <div>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked value=\"Male\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n\n      // </div>\n\n      <Fragment>\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n          <div>{playersetup}</div>\n          <div>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              // onClick={(e) => this.startGame(e)}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Start &gt;&gt;\n            </button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  //   questiontype: state.game.questiontype,\n  // starttime: state.game.starttime,\n  // endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceSetup);\n","import * as actionTypes from './actionTypes';\nimport * as Utils from '../../../Utils/QuestionGenerator';\n\nexport const reset = () => {\n  return {\n    type: actionTypes.RESET,\n  };\n};\n\nexport const start = (\n  playername1,\n  playername2,\n  questiontype1,\n  questiontype2,\n) => {\n  return {\n    type: actionTypes.START,\n    // questiontype: questiontype,\n    players: [\n      { id: 0, name: playername1, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype1), answerresult: '', questiontype: questiontype1 },\n      { id: 1, name: playername2, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype2), answerresult: '', questiontype: questiontype2 },\n    ],\n  };\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.CORRECT,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype),\n    });\n  };\n};\n\nexport const wrongAnswer = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.WRONG,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype),\n    });\n  };\n};\n\nexport const complete = (playerno) => {\n  return {\n    playerno: playerno,\n    type: actionTypes.COMPLETE,\n  };\n};\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const COMPLETE = 'COMPLETE'; \n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            ></div>\n                            );\n                            \n    return (<Fragment />)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<Fragment />)\n    return (\n        <Fragment>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </Fragment>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport useSound from 'use-sound';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './PlayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\n\nclass PlayerSection extends PureComponent {\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', nextProps.players[nextProps.playerno]);\n  //     // return this.props.players[this.props.playerno] !== nextProps.players[nextProps.playerno];\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    console.log('[PlayerSection] componentDidUpdate');\n  }\n\n  buttonTheme = () => {\n    return this.props.playerno === '1' ? 'w3-ripple w3-hover-indigo w3-indigo' : 'w3-ripple w3-hover-red w3-pink';\n  };\n\n  sectionTheme = () => {\n    return this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink';\n  };\n\n  goClick = () => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n    if (!this.inputAnswer.value) return;\n    if (+this.inputAnswer.value === +player.answer) {\n      if (player.points === player.questiontype.points - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.props.complete(this.props.playerno);\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n      \n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      // useSound(successSound);\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n    }\n  };\n\n  appendAnswer = (val) => {\n    if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n    else this.inputAnswer.value += `${val}`;\n  };\n\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answerresult, 'Points', player.points * (+player.questiontype.points - 1));\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {player.answer}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[this.props.playerno === '0' ? Classes._0 : Classes._1].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.props.reset} tabIndex={0} onKeyPress={this.props.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '1s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          />\n        </div>\n        <div className={Classes.QuestionBar}>\n          <span className={[this.sectionTheme()].join(' ')}>\n            <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n          </span>\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <span ref={this.questionRef} className={Classes.Question}>\n            <span style={{ fontSize: '3em' }}>{`${player.question}?`}</span>\n            <input\n              ref={(e) => {\n                this.inputAnswer = e;\n              }}\n              onKeyDown={() => false}\n              onKeyPress={() => false}\n              onKeyUp={() => false}\n              type=\"text\"\n              maxLength=\"7\"\n              className={['w3-btn', 'w3-round-large', this.sectionTheme(), Classes.Answer].join(' ')}\n            />\n          </span>\n          <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n            <span className={['fa-stack', Classes.Score].join(' ')}>\n              <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n              <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                {player.points}\n              </strong>\n            </span>\n            <div>\n              <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                <i className=\"fa fa-window-close\" />\n              </a>\n            </div>\n          </span>\n        </div>\n        <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('.')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            .\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  complete: (playerno) => dispatch(ReducerActions.complete(playerno)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSection);\n","import React from 'react';\nimport * as Classes from './RaceComplete.module.css';\n\nfunction RaceComplete(props) {\n  const winner = props.players[0].points >= props.players[1].points\n      ? props.players[0].name\n      : props.players[1].name;\n\n  const players = [...props.players].reverse().map((player) => {\n    const score = +player.points - player.wrong + (winner === player.name ? 10 : 0);\n    return (\n      <div key={player.key}>\n        <h1>\n          {player.name},{' '}\n          {winner === player.name ? 'You won!!' : 'Opps You lost!!'}\n        </h1>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.points}</strong>\n          <span className={Classes.ScoreLabel}>Correct</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{-player.wrong}</strong>\n          <span className={Classes.ScoreLabel}>Wrong</span>\n        </span>\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">\n            {winner === player.name ? 10 : 0}\n          </strong>\n          <span className={Classes.ScoreLabel}>Win Bonus</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{score}</strong>\n          <span className={Classes.ScoreLabel}>Total</span>\n        </span>\n      </div>\n    );\n  });\n  return (\n    <div className={Classes.RaceComplete}>\n      {players}\n      <button\n        type=\"button\"\n        onClick={(e) => props.reset()}\n        onKeyPress={(e) => props.reset()}\n        className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n      >\n        Play Again &gt;&gt;\n      </button>\n    </div>\n  );\n}\n\nexport default RaceComplete;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Race from '../../components/Race/Race';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport RaceSetup from '../../components/RaceSetup/RaceSetup';\nimport PlayerSection from '../../components/PlayerSection/PlayerSection';\nimport * as Classes from './RaceWrapper.module.css';\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\n\nclass RaceWrapper extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[Racewrapper] constructor');\n    this.state = {};\n\n    this.props.reset();\n    // const questiontype = {\n    //     type: '+-',\n    //     nos: 4,\n    //     digits: 3,\n    //     decimals: 0,\n    // };\n    // this.props.init('Nanna', 'Hasana', questiontype);\n    // this.props.start();\n  }\n\n  shouldComponentUpdate(nextProps, newState) {\n    console.log(\n      '[RaceWrapper] shouldComponentUpdate',\n      !this.props.players && nextProps.players,\n    );\n    return (\n      (!this.props.players && nextProps.players)\n      || this.props.starttime !== nextProps.starttime\n      || this.props.endtime !== nextProps.endtime\n    );\n    // return true;\n  }\n\n  render() {\n    console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n\n    if (!this.props.starttime)\n      return (\n        <div className={Classes.Race}>\n          <RaceSetup />\n        </div>\n      );\n    else if (this.props.endtime)\n      return (\n        <div className={Classes.Race}>\n          <RaceComplete players={this.props.players} reset={this.props.reset} />\n        </div>\n      );\n\n    const players = this.props.players.map((player, index) => (\n      <PlayerSection key={player.id} playerno={`${player.id}`} />\n    ));\n    // console.log('[Race] render', this.props.players);\n    return (\n      <div\n        className={Classes.Race}\n        style={{\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/rock.svg), url(${process.env.PUBLIC_URL}/images/underwater.jpg)`,\n        }}\n      >\n        {players}\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n    // return (\n    //         <Race players={this.props.players} />\n    // )\n  }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  starttime: state.game.starttime,\n  endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper'\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\nimport * as actionTypes from '../actionTypes';\n\nconst questiontype = {\n  type: '+-',\n  nos: 2,\n  digits: 2,\n  decimals: 0,\n  points: 10,\n};\nconst player = {\n  name: null,\n  points: 0,\n  wrong: 0,\n  question: null,\n  answer: null,\n  answerresult: null,\n  questiontype: { ...questiontype },\n};\nconst initialState = {\n  starttime: null,\n  endtime: null,\n  // questiontype: {\n  //     type: '+-',\n  //     nos: 3,\n  //     digits: 3,\n  //     decimals: 0,\n  //     points:10,\n  // },\n  players: [\n    { id: 0, ...player },\n    { id: 1, ...player },\n  ],\n};\n\nconst reducer = (state = initialState, action) => {\n  // console.log(action.type)\n  console.log('[reducer]', action.type);\n  let players = null;\n  switch (action.type) {\n    case actionTypes.RESET:\n      return {\n        ...state,\n        starttime: null,\n        endtime: null,\n        // players: null,\n      };\n    case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        starttime: new Date(),\n        // questiontype: action.questiontype,\n        players: [...action.players],\n      };\n    // case actionTypes.START: // players:[{question,answer}]\n    //     players = [...state.players];\n    //     action.players.forEach((player, index) => {\n    //         players[index] = { ...players[index], ...player }\n    //     });\n    //     return {\n    //         ...state, starttime: new Date(), players: players,\n    //     };\n    case actionTypes.CORRECT:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'CORRECT';\n      return {\n        ...state,\n        players: [...players],\n      };\n    case actionTypes.WRONG:\n      players = [...state.players];\n      players[action.playerno].wrong += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'WRONG';\n      return {\n        ...state,\n        players: players,\n      };\n    case actionTypes.COMPLETE:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      return {\n        ...state,\n        endtime: new Date(),\n        players: [...players],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}