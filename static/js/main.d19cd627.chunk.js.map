{"version":3,"sources":["components/SingleplayerSection/SingleplayerSection.module.css","components/PlayerSelection/PlayerSelection.module.css","components/controls/ToggleControl/ToggleControl.module.css","components/CanvasDraw/CanvasDraw.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","components/MultiplayerWrapper/MultiplayerWrapper.module.css","components/AnswerInput/AnswerInput.module.css","containers/RaceWrapper/RaceWrapper.module.css","components/SingleplayerSetup/SingleplayerSetup.module.css","serviceWorker.js","components/CanvasDraw/Drawing.js","components/CanvasDraw/DrawArea.js","store/game/actions/actionTypes.js","Utils/NumberToEnglish.js","Utils/QuestionGenerator.js","Config/Firebase.js","axios-firebase.js","store/game/actions/actions.js","components/MultiplayerSetup/MultiplayerSetup.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","sounds/success.mp3","sounds/wrong.mp3","sounds/movingfish.mp3","sounds/click.mp3","sounds/claps.mp3","components/MultiplayerSection/MultiplayerSection.js","components/RaceComplete/RaceComplete.js","components/DrawArea/DrawingLine.js","components/DrawArea/Drawing.js","components/DrawArea/DrawArea.js","components/PlayerSelection/PlayerSelection.js","components/MultiplayerWrapper/MultiplayerWrapper.js","components/controls/ToggleControl/ToggleControl.js","components/SingleplayerSetup/SingleplayerSetup.js","components/AnswerInput/AnswerInput.js","components/SingleplayerSection/SingleplayerSection.js","components/SingleplayerWrapper/SingleplayerWrapper.js","containers/RaceWrapper/RaceWrapper.js","temp.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js","components/MultiplayerSetup/MultiplayerSetup.module.css","components/RaceComplete/RaceComplete.module.css","components/MultiplayerSection/MultiplayerSection.module.css","components/DrawArea/DrawArea.module.css","UI/DisplayMessage/DisplayMessage.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Drawing","_ref","lines","_jsx","_Fragment","children","Component","RESET","LOAD_QUESTIONS","START","CORRECT","WRONG","COMPLETE","SET_MULTIPLAYER","shouldPrefixWithOne","n","numbers","number","text","numberToEnglish","val","options","arguments","length","undefined","prefixNum","remainder","closestSmallerNumber","closestSmallerNumberText","andForBritish","ands","comma","commas","and","concat","words","numToConvert","parseInt","isNaN","isFinite","_i","_numbers","_numbers$_i","Math","floor","trim","generateQuestion","questiontype","wordquestions","wordquestionsindexs","type","nos","digits","inwords","generatePlusMinusQuestion","generateMultiplyQuestion","generateDivideQuestion","generateSquareQuestion","generateFractionQuestion","includes","generateWordsQuestion","generateTimeHrsArthematicQuestion","generateTimeArthematicQuestion","generateBalance","question","questions","answers","answer","level","decimals","i","tonumber","randomIntFromInterval","currentnumber","toword","q","push","replace","tens","pow","fromnumber","multiplicend","multiplier","dividend","divisor","trunc","tofraction","fromfraction","intermediateno","denominator","neumerator","_questiontype$decimal4","totaldigits","questionno","randomFromList","_questiontype$decimal5","qparams","Object","keys","sort","forEach","key","params1","_objectSpread","param","substitute","list","min","max","replaceValues","indexOf","evalstr","evaluate","roundValue","questionstr","round","_questiontype$decimal6","symbols","isHigherNumber","prevnumber","temptype","sign","randomSign","toString","HR24","hrs","timeval","timeformat","addmin","addhrs","dt1","moment","dt2","subtract","hours","minutes","format","toword1","TimeInWords","toword2","time","isHR24","hrFormat","tohrstr","answerdt","add","exceptList","random","signs","split","str","mathjs","valueHash","base","all","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","instance","axios","create","baseURL","reset","actionTypes","start","playername1","playername2","questiontype1","questiontype2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","getstate","lquestiontype1","lquestiontype2","res","_yield$res","data","question2","indexs2","indexs1","wrap","_context","prev","next","game","get","sent","item","idx","active","id","points","_toConsumableArray","Array","Utils","players","name","wrong","answerresult","stop","_x","_x2","apply","nextQuestion","playerno","isCorrect","_getstate$game$player","index","splice","wrongAnswer","complete","win","MultiplayerSetup","_PureComponent","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleSubmit","e","preventDefault","_this$form","form","digits0","player0","player1","numbers0","decimals0","type0","points0","inwords0","digits1","numbers1","decimals1","type1","points1","inwords1","tens0","tens1","delay0","delay1","level0","level1","HR240","HR241","questiontype0","value","delay","history","_createClass","_this2","playersetup","this","map","_this2$props$players$","className","Classes","_jsxs","style","display","onChange","setState","_defineProperty","currentTarget","defaultChecked","marginLeft","onSubmit","ref","textAlign","join","onKeyPress","onClick","PureComponent","connect","ReducerActions","DisplayMessage","Backdrop","show","classes","clicked","role","tabIndex","Modal","modelClosed","transform","opacity","MultiplayerSection","success","Howl","src","successSound","volume","wrongSound","click","clickSound","movingfish","movingFishSound","claps","clapsSound","timers","closedisplay","fullquestion","qcounter","animateNextQuestion","player","timer","setTimeout","prevState","displayQuestion","no","clearTimer","prevQuestion","buttonTheme","sectionTheme","goClick","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","toFixed","String","play","classList","remove","ShowQuestion","MessageAnimate","HideQuestion","clearInterval","restart","appendAnswer","slice","React","createRef","messagedisplay","Fragment","Correct","margin","Wrong","_0","_1","PlayerCharacter","position","transition","left","alt","_2","height","width","process","QuestionBar","PlayerName","Score","color","Close","Question","CSSTransition","classNames","timeout","fontSize","dangerouslySetInnerHTML","__html","Refresh","BtnNumber","onKeyDown","onKeyUp","maxLength","Answer","ButtonBar","dataset","BtnGo","RaceComplete","winner","playAgain","reverse","testmode","DrawingLine","line","pathData","p","d","PlayerSelection","goNext","multiplayer","setMultiplayer","placeholder","visibility","flexFlow","justifyContent","marginRight","MultiplayerPlay","backgroundImage","ToggleControl","label","checked","Toggle","Slider","SingleplayerSetup","testmode0","_this$props$players$","InputRange","minValue","maxValue","step","formatLabel","AnswerInput","_len","args","_key","submitAnswer","seperator","inputAnswer1","_handleKeyDown","_handleKeyDown1","focus","resetInput","focusInput","resetAnswer","focusAnswer","inputfields","inputMode","SingleplayerSection","answertimers","attempts","answerRef","automate","HideAnswer","answertimer","retryRef","iscorrect","Retry","ProgressBar","paddingBottom","NextAnswer","SingleplayerWrapper","RaceWrapper","_Component","nextProps","newState","starttime","endtime","Route","path","exact","component","render","MultiplayerWrapper","Layout","Switch","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","Provider","BrowserRouter","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d19cd627.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleplayerSection\":\"SingleplayerSection_SingleplayerSection__38mzd\",\"PlayerCharacter\":\"SingleplayerSection_PlayerCharacter__gWm0Y\",\"ProgressBar\":\"SingleplayerSection_ProgressBar__2g8ZI\",\"QuestionBar\":\"SingleplayerSection_QuestionBar__1Iznw\",\"question-enter\":\"SingleplayerSection_question-enter__28PWK\",\"question-enter-active\":\"SingleplayerSection_question-enter-active__3M5Mz\",\"question-exit\":\"SingleplayerSection_question-exit__1jpMR\",\"question-exit-active\":\"SingleplayerSection_question-exit-active__2uRFy\",\"Question\":\"SingleplayerSection_Question__39n_G\",\"Close\":\"SingleplayerSection_Close__2yvDL\",\"Refresh\":\"SingleplayerSection_Refresh__1GF1-\",\"ButtonBar\":\"SingleplayerSection_ButtonBar__3alYz\",\"Answer\":\"SingleplayerSection_Answer__2zs57\",\"BtnGo\":\"SingleplayerSection_BtnGo__2FvSX\",\"BtnNumber\":\"SingleplayerSection_BtnNumber__2JxfN\",\"HideQuestion\":\"SingleplayerSection_HideQuestion__fvc8v\",\"hide-question\":\"SingleplayerSection_hide-question__3ro_n\",\"HideAnswer\":\"SingleplayerSection_HideAnswer__2KDrd\",\"ShowQuestion\":\"SingleplayerSection_ShowQuestion__2I_JZ\",\"show-question\":\"SingleplayerSection_show-question__3PmVk\",\"DisplayMessage\":\"SingleplayerSection_DisplayMessage___q_ms\",\"MessageAnimate\":\"SingleplayerSection_MessageAnimate__1H87e\",\"hide-animation\":\"SingleplayerSection_hide-animation__2KaC1\",\"Correct\":\"SingleplayerSection_Correct__3vwsf\",\"Wrong\":\"SingleplayerSection_Wrong__3TY7c\",\"Retry\":\"SingleplayerSection_Retry__2kFG-\",\"NextAnswer\":\"SingleplayerSection_NextAnswer__1HmYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerSelection\":\"PlayerSelection_PlayerSelection__12WSJ\",\"RaceSetup\":\"PlayerSelection_RaceSetup__-PjGT\",\"BtnGo\":\"PlayerSelection_BtnGo__2UJKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggle\":\"ToggleControl_Toggle__1DhTu\",\"Slider\":\"ToggleControl_Slider__3D0u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgComponent\":\"CanvasDraw_svgComponent__2sxd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"MultiplayerWrapper_Race__2J0PG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"AnswerInput_BtnGo__3OVww\",\"BtnNumber\":\"AnswerInput_BtnNumber__3nlvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleplayerSetup\":\"SingleplayerSetup_SingleplayerSetup__1al8v\",\"BtnGo\":\"SingleplayerSetup_BtnGo__2xlBA\",\"Type\":\"SingleplayerSetup_Type__2VIbM\",\"Options\":\"SingleplayerSetup_Options__2HJWM\",\"Group4\":\"SingleplayerSetup_Group4__2sqxg\",\"Group2\":\"SingleplayerSetup_Group2__2MVLS\",\"Items\":\"SingleplayerSetup_Items__2jmiM\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n      // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = '/math-race/service-worker.js'; \n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service '\n                + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        // eslint-disable-next-line no-param-reassign\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all '\n                    + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.',\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n","import React from 'react';\nimport DrawingLine from './DrawingLine';\n\nfunction Drawing({ lines }) {\n  return (\n    <> </>\n    // <svg>\n    //   {lines.map((line, index) => {\n    //     // eslint-disable-next-line react/no-array-index-key\n    //     console.log('[Drawing]', `M ${line.map((p) => `${p.get('x')} ${p.get('y')}`).join(' L ')}`);\n    //     return <DrawingLine key={index} line={line} />;\n    //   })}\n    // </svg>\n  );\n}\n\nexport default Drawing;\n","import React, { Component } from 'react';\nimport Immutable from 'immutable';\nimport Drawing from './Drawing';\nimport Classes from './CanvasDraw.module.css';\n\nclass DrawArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDrawing: false,\n      lines: Immutable.List(),\n    };\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mouseup', this.handleMouseUp);\n    document.addEventListener('touchend', this.handleMouseUp);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.handleMouseUp);\n    document.removeEventListener('touchend', this.handleMouseUp);\n  }\n\n  handleMouseUp = () => {\n    this.setState({ isDrawing: false });\n  };\n\n  relativeCoordinatesForEvent = (mouseEvent) => {\n    const boundingRect = this.drawArearef.getBoundingClientRect();\n    return new Immutable.Map({\n      x: mouseEvent.clientX - boundingRect.left,\n      y: mouseEvent.clientY - boundingRect.top,\n    });\n  };\n\n  handleMouseDown = (mouseEvent) => {\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n    this.setState((prevState) => {\n      return {\n        lines: prevState.lines.push(Immutable.List([point])),\n        isDrawing: true,\n      };\n    });\n  };\n\n  handleMouseMove = (mouseEvent) => {\n    if (!this.state.isDrawing) {\n      return;\n    }\n    console.log('[DrawArea] handlemouseMove');\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState((prevState) => {\n      return {\n        lines: prevState.lines.updateIn([prevState.lines.size - 1], (line) => line.push(point)),\n      };\n    });\n  };\n  render() {\n    return (\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={Classes.svgComponent}\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n        ref={(c) => {\n          this.drawArearef = c;\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.handleMouseMove}\n        onTouchStart={this.handleMouseDown}\n        onTouchMove={this.handleMouseMove}\n      >\n        <Drawing lines={this.state.lines} />\n      </div>\n    );\n  }\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//       backgroundColor: '#F5FCFF',\n//       flex: 1,\n//       paddingTop: 20,\n//     },\n//     actionsBar: {\n//       alignItems: 'stretch',\n//       flexDirection: 'row',\n//       justifyContent: 'space-between',\n//       padding: 20,\n//     },\n//   });\nexport default DrawArea;\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const LOAD_QUESTIONS = 'LOAD_QUESTIONS';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const WIN = 'WIN'; \nexport const COMPLETE = 'COMPLETE'; \nexport const SET_MULTIPLAYER = 'SET_MULTIPLAYER'; \n","/* eslint-disable prefer-const */\n/* eslint-disable no-restricted-syntax */\nconst shouldPrefixWithOne = (n) => {\n  return n >= 100;\n};\n\n/**\n * Checks if a certain number should be joined with hyphens\n * e.g. \"ninety-nine\" versus \"one hundred one\"\n *\n * Examples:\n * _shouldHyphenate(10); // returns False\n * _shouldHyphenate(21); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\nconst shouldHyphenate = (n) => {\n  return n >= 20 && n <= 99;\n};\n\nconst numbers = [\n  { number: 1000000000000, text: 'trillion' },\n  { number: 1000000000, text: 'billion' },\n  { number: 1000000, text: 'million' },\n  { number: 1000, text: 'thousand' },\n  { number: 100, text: 'hundred' },\n  { number: 90, text: 'ninety' },\n  { number: 80, text: 'eighty' },\n  { number: 70, text: 'seventy' },\n  { number: 60, text: 'sixty' },\n  { number: 50, text: 'fifty' },\n  { number: 40, text: 'forty' },\n  { number: 30, text: 'thirty' },\n  { number: 20, text: 'twenty' },\n  { number: 19, text: 'nineteen' },\n  { number: 18, text: 'eighteen' },\n  { number: 17, text: 'seventeen' },\n  { number: 16, text: 'sixteen' },\n  { number: 15, text: 'fifteen' },\n  { number: 14, text: 'fourteen' },\n  { number: 13, text: 'thirteen' },\n  { number: 12, text: 'twelve' },\n  { number: 11, text: 'eleven' },\n  { number: 10, text: 'ten' },\n  { number: 9, text: 'nine' },\n  { number: 8, text: 'eight' },\n  { number: 7, text: 'seven' },\n  { number: 6, text: 'six' },\n  { number: 5, text: 'five' },\n  { number: 4, text: 'four' },\n  { number: 3, text: 'three' },\n  { number: 2, text: 'two' },\n  { number: 1, text: 'one' },\n  { number: 0, text: 'zero' },\n];\n\nconst andWord = 'and';\n\nconst numberToEnglish = (val, options = {}) => {\n  if (!val) return '';\n  const andForBritish = options.ands || false;\n\n  const comma = options.commas ? ',' : '';\n  const and = andForBritish ? `${andWord} ` : '';\n  let words = '';\n  let prefixNum;\n  let remainder;\n  let closestSmallerNumber;\n  let closestSmallerNumberText;\n\n  let numToConvert = parseInt(val, 10);\n\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(numToConvert)) {\n    return 'not a number';\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (!isFinite(numToConvert)) {\n    return 'infinity';\n  }\n\n  if (numToConvert < 0) {\n    words += 'negative ';\n    numToConvert *= -1;\n  }\n\n  // Search list of numbers for closest smaller number.\n  // numToConvert will be written in terms of this number.\n  for (const { number, text } of numbers) {\n    if (numToConvert === number) {\n      if (shouldPrefixWithOne(number)) {\n        words += 'one ';\n      }\n      words += text;\n      return words;\n    }\n\n    if (numToConvert > number) {\n      closestSmallerNumber = number;\n      closestSmallerNumberText = text;\n      break;\n    }\n  }\n\n  // How many 'closestSmallerNumber's can numToConvert be grouped into?\n  // e.g. five 'thousand'.\n  // eslint-disable-next-line prefer-const\n  prefixNum = Math.floor(numToConvert / closestSmallerNumber);\n  if (prefixNum !== 1 || shouldPrefixWithOne(closestSmallerNumber)) {\n    words += `${numberToEnglish(prefixNum, options)} `;\n  }\n\n  words += closestSmallerNumberText;\n\n  remainder = numToConvert - prefixNum * closestSmallerNumber;\n  if (remainder > 0 && shouldHyphenate(closestSmallerNumber)) {\n    words += '-';\n  } else if (closestSmallerNumber >= 1000 && remainder > 0 && remainder < 100) {\n    words += `${comma} ${and}`;\n  } else if (closestSmallerNumber >= 1000 && remainder > 0) {\n    words += `${comma} `;\n  } else if (closestSmallerNumber === 100 && remainder > 0) {\n    words += ` ${and}`;\n  } else {\n    words += ' ';\n  }\n\n  if (remainder > 0) {\n    words += numberToEnglish(remainder, options);\n  }\n\n  return words.trim();\n};\n\nexport default numberToEnglish;\n","import * as mathjs from 'mathjs';\nimport moment from 'moment';\nimport numberToEnglish from './NumberToEnglish';\n\nexport const generateQuestion = (questiontype, wordquestions, wordquestionsindexs = []) => {\n  const { type, nos, digits, inwords } = questiontype;\n  if (type === '+' || type === '+-' || type === '+-x') return generatePlusMinusQuestion(questiontype);\n  else if (type === 'x') return generateMultiplyQuestion(questiontype);\n  else if (type === '/') return generateDivideQuestion(questiontype);\n  else if (type === 'X2') return generateSquareQuestion(questiontype);\n  else if (type === 'x/y') return generateFractionQuestion(questiontype);\n  else if (['WORD', 'MONEY', 'FILL', 'CONVERSIONS'].includes(type)) return generateWordsQuestion(questiontype, wordquestions, wordquestionsindexs);\n  else if (['TIMEHRS+-'].includes(type)) return generateTimeHrsArthematicQuestion(questiontype);\n  else if (['TIME+-'].includes(type)) return generateTimeArthematicQuestion(questiontype);\n  else if (['BAL'].includes(type)) return generateBalance(questiontype);\n  return {\n    question: '', // '2+3',\n    questions: [],\n    answers: [],\n    answer: '', // mathjs.evaluate('2+3'),\n  };\n}; //\n\n// export const generateMultiQuestion = (questiontype) => {\n//   let currentnumber = 0;\n//   let question = '';\n//   let answer = 0;\n//   const { type, nos, digits, inwords } = questiontype;\n//   let { decimals = 0 } = questiontype;\n//   if (inwords) decimals = 0;\n//   const symbols=[];\n\n//   const totaldigits = digits + decimals;\n//   for (let i = 0; i < nos; i += 1) {\n//     const temptype = type;\n//     let sign = '+';\n//     if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n//     else if ((answer >= 100 || answer <= 10) && type === '+-x') sign = randomSign('+-');\n//     else if (i>1 && type === '+-x' && !symbols.includes('x') && answer>9 && answer<100) sign = 'x'\n//     else sign = randomSign(temptype);\n//     // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n//     symbols.push(sign);\n\n//     let tonumber = 10 ** totaldigits - 1;\n//     let fromnumber = 10 ** (totaldigits - 1) + 1;\n//     if (sign === 'x') {\n//       fromnumber = 2;\n//       tonumber = 9;\n//     } else if (sign === '-' && tonumber > answer) tonumber = answer;\n//     // console.log(`${fromnumber},${tonumber}`)\n//     currentnumber = randomIntFromInterval(fromnumber, tonumber);\n//     if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n//     else if (sign === 'x') answer *= currentnumber;\n//     if (!inwords) question = `${question} ${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n//     else if (inwords) {\n//       const toword = numberToEnglish(currentnumber);\n//       question = `${question}${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' u><i>times</i></u> '}${toword}`;\n//     }\n//   }\n//   answer /= decimals === 0 ? 1 : 10 ** decimals;\n//   console.log(`${question} ? ${answer}`);\n//   return {\n//     question: question,\n//     answer: answer,\n//   };\n// }\n\nexport const generateBalance = (questiontype) => {\n  let question = '';\n  const questions = [];\n  const answers = [];\n  let answer = 0;\n  const { type, nos, digits, inwords, level } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  for (let i = 0; i < nos; i += 1) {\n    const temptype = type;\n    const sign = '|';\n\n    let tonumber = 99;\n    const issingle = randomIntFromInterval(0, 1);\n    if (issingle) tonumber = 9;\n    const fromnumber = 1;\n    const currentnumber = randomIntFromInterval(fromnumber, tonumber);\n\n    if (!inwords) {\n      const q = `${i > 0 ? sign : ''} ${currentnumber < 10 && level === 1 ? `&nbsp;${currentnumber}` : currentnumber}`;\n      question = `${question} ${q}`;\n      questions.push(q.replace('|', ''));\n    } else if (inwords) {\n      const toword = numberToEnglish(currentnumber);\n      const q = `${i <= 0 ? '' : ' <u><i>|</i></u> '}${toword}`;\n      question = `${question}${q}`;\n      questions.push(q.replace('|', ''));\n    }\n    answer = answer * 10 + currentnumber;\n    answers.push(answer);\n  }\n  // console.log(`${question} ? ${answer}`);\n\n  questions.push('?');\n  // console.log('[Question Generator]', questions);\n  return {\n    question: question,\n    questions: questions,\n    answers: answers,\n    answer: answer,\n  };\n};\n\nexport const generateMultiplyQuestion = (questiontype) => {\n  // let question = '';\n  // let answer = 0;\n  // console.log(questiontype)\n  const { type, digits, nos, inwords, tens } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n  const tonumber = 10 ** digits - 1;\n  const fromnumber = 10 ** (digits - 1) + 1;\n  const multiplicend = randomIntFromInterval(fromnumber, tonumber);\n  const multiplier = randomIntFromInterval(10 ** (nos - 1) + 1, 10 ** nos - 1);\n  const answer = multiplier * multiplicend;\n  // console.log(`${question} ? ${answer}`);\n  let question = '';\n\n  if (!inwords) question = `${multiplicend} X ${multiplier}`;\n  else if (inwords) question = `${numberToEnglish(multiplicend)} X ${numberToEnglish(multiplier)}`;\n\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateDivideQuestion = (questiontype) => {\n  // let question = '';\n  // let answer = 0;\n  const { type, digits, nos, inwords, tens } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n  const tonumber = 10 ** digits - 1;\n  const fromnumber = 10 ** (digits - 1) + 1;\n  const dividend = randomIntFromInterval(fromnumber, tonumber);\n  const divisor = randomIntFromInterval(10 ** (nos - 1) + 1, 10 ** nos - 1);\n  let answer = dividend / divisor;\n  answer = Math.trunc(answer * 100) / 100\n  // console.log(`${question} ? ${answer}`);\n  let question = '';\n\n  if (!inwords) question = `${dividend} / ${divisor}`;\n  else if (inwords) question = `${numberToEnglish(dividend)} X ${numberToEnglish(divisor)}`;\n\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateFractionQuestion = (questiontype) => {\n  const { type, digits, inwords } = questiontype;\n  const tonumber = 10 ** (digits + 1) - 1;\n  const fromnumber = 10 ** digits + 1;\n\n  const tofraction = 10 ** digits - 1;\n  const fromfraction = 10 ** (digits - 1) + 1;\n\n  const intermediateno = randomIntFromInterval(fromnumber, tonumber);\n  const denominator = randomIntFromInterval(fromfraction, tofraction);\n  let question = intermediateno * denominator;\n  const neumerator = randomIntFromInterval(fromfraction, tofraction, [denominator]);\n  const answer = intermediateno * neumerator;\n\n  question = `<sup>${neumerator}</sup>&frasl;<sub>${denominator}</sub> of ${question}`;\n  return {\n    question: question,\n    questions: [],\n    answer: answer,\n  };\n};\n\nexport const generateSquareQuestion = (questiontype) => {\n  let currentnumber = 0;\n  let question = '';\n  let answer = 0;\n  const { type, digits, inwords, tens } = questiontype;\n  const nos = 2;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  // for (let i = 0; i < nos; i += 1) {\n  const temptype = type;\n  // let sign = '+';\n  // if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n  // else if ((answer >= 100 || answer <= 10) && type === '+-x' && digits > 1) sign = randomSign('+-');\n  // else if (answer > 10 && type === '+-x' && digits === 1) sign = randomSign('+-');\n  // else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer > 9 && answer < 100 && digits > 1) sign = 'x';\n  // else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer < 10 && digits === 1) sign = 'x';\n  // else sign = randomSign(temptype);\n  // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n  // symbols.push(sign);\n\n  let tonumber = 10 ** totaldigits - 1;\n  if (tens === 'Y' && totaldigits === 2) tonumber = 19;\n\n  const fromnumber = 10 ** (totaldigits - 1) + 1;\n  // if (sign === 'x') {\n  //   fromnumber = 2;\n  //   tonumber = 9;\n  // } else if (sign === '-' && tonumber > answer) tonumber = answer;\n  // // console.log(`${fromnumber},${tonumber}`)\n  currentnumber = randomIntFromInterval(fromnumber, tonumber);\n  // if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n  // else if (sign === 'x') answer *= currentnumber;\n  if (!inwords) question = `${currentnumber}<sup>2</sup>`;\n  else if (inwords) {\n    const toword = numberToEnglish(currentnumber);\n    question = `${toword}<sup>2</sup>`;\n  }\n  // }\n  answer = currentnumber * currentnumber;\n  // console.log(`${question} ? ${answer}`);\n  return {\n    question: question,\n    questions: [],\n    answers: [],\n    answer: answer,\n  };\n};\n\nconst isJsonString = (str) => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const generateWordsQuestion = (questiontype, questions, wordquestionsindexs) => {\n  const { type, nos, digits, inwords } = questiontype;\n  const wordquestions = questions[type];\n  // const questionno = randomIntFromInterval(0, wordquestions.length - 1);\n  const questionno = randomFromList(wordquestionsindexs);\n  const question = wordquestions[questionno];\n\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const totaldigits = digits + decimals;\n  const tonumber = 10 ** totaldigits - 1;\n  const fromnumber = 10 ** (totaldigits - 1) + 1;\n\n  const q = question.question;\n  const qparams = {};\n  for (let i = 0; ; i += 1) {\n    if (!(i in question)) break;\n    qparams[i] = question[i];\n  }\n\n  Object.keys(qparams)\n    .sort()\n    .forEach((key) => {\n      const params1 = { ...qparams };\n      const param = qparams[key];\n      let substitute = '';\n      console.log('[QuestionGenerator]generatewordsQuestion', param);\n      if (param instanceof Object) {\n        if ('list' in param) {\n          params1.val = randomFromList(param.list);\n        } else {\n          params1.val = randomIntFromInterval('min' in param ? param.min : fromnumber, 'max' in param ? param.max : tonumber);\n        }\n        substitute = replaceValues(param.val, params1);\n      } else if (param.indexOf('{val}') > -1) {\n        params1.val = randomIntFromInterval(fromnumber, tonumber);\n        substitute = replaceValues(param, params1);\n      }\n      const evalstr = evaluate(substitute);\n      qparams[key] = roundValue(evalstr);\n    });\n\n  const answer = evaluate(replaceValues(question.answer, qparams));\n  const questionstr = replaceValues(question.question, qparams);\n\n  return { answer: roundValue(answer), question: questionstr, questions: [], questionno: questionno };\n};\n\nconst roundValue = (val) => {\n  return Math.round(val * 100) / 100;\n};\n\nexport const generatePlusMinusQuestion = (questiontype) => {\n  let currentnumber = 0;\n  let question = '';\n  const questions = [];\n  const answers = [];\n  let answer = 0;\n  const { type, nos, digits, inwords, level } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  let isHigherNumber = false;\n  let prevnumber = -999;\n  for (let i = 0; i < nos; i += 1) {\n    console.log(`Number generating i: ,${i}`);\n    const temptype = type;\n    let sign = '+';\n    if (i === 0 || type === '+' || answer < 10 ** (totaldigits - 1)) sign = '+';\n    else if ((answer >= 100 || answer <= 10) && type === '+-x' && digits > 1) sign = randomSign('+-');\n    else if (answer > 10 && type === '+-x' && digits === 1) sign = randomSign('+-');\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer > 9 && answer < 100 && digits > 1) sign = 'x';\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer < 10 && digits === 1) sign = 'x';\n    else sign = randomSign(temptype);\n    // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n    if (!isHigherNumber && level === 2 && i === nos - 1) sign = '+';\n    symbols.push(sign);\n\n    let tonumber = 10 ** totaldigits - 1;\n    let fromnumber = 10 ** (totaldigits - 1) + 1;\n    if (sign === 'x') {\n      fromnumber = 2;\n      tonumber = 9;\n    } else if (sign === '-' && tonumber > answer) tonumber = answer;\n    // console.log(`${fromnumber},${tonumber}`)\n\n    if (!isHigherNumber && level === 2 && i === nos - 1) {\n      fromnumber = 10 ** digits - answer;\n      currentnumber = randomIntFromInterval(fromnumber, fromnumber + 10 ** digits);\n    } else currentnumber = randomIntFromInterval(fromnumber, tonumber);\n\n    // console.log(`current no and prev number: ${currentnumber},${prevnumber}`);\n    if (currentnumber === prevnumber) {\n      i -= 1;\n      // console.log(`*** Skipping number and resetting count i ,${i}`);\n    } else {\n      prevnumber = currentnumber;\n\n      let q = '';\n      if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n      else if (sign === 'x') answer *= currentnumber;\n\n      if (!isHigherNumber && level === 2 && answer.toString().length > digits) isHigherNumber = true;\n\n      if (!inwords) {\n        q = `${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n        question = `${question} ${q}`;\n        questions.push(q.replace('+', ''));\n      } else if (inwords) {\n        const toword = numberToEnglish(currentnumber);\n        q = `${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' <u><i>times</i></u> '}${toword}`;\n        question = `${question}${q}`;\n        questions.push(q.replace('+', ''));\n      }\n      answers.push(answer);\n    }\n  }\n  answer /= decimals === 0 ? 1 : 10 ** decimals;\n  // console.log(`${question} ? ${answer}`);\n\n  questions.push('?');\n  // console.log('[Question Generator]', questions);\n  return {\n    question: question,\n    questions: questions,\n    answer: answer,\n    answers: answers,\n  };\n};\nexport const generateTimeArthematicQuestion = (questiontype) => {\n  // let currentnumber = 0;\n  // let question = '';\n  const questions = [];\n  // let answer = 0;\n  const { type, nos, digits, HR24, level, inwords } = questiontype;\n  const symbols = [];\n\n  const hrs = HR24 === 'Y' ? randomIntFromInterval(0, 23) : randomIntFromInterval(1, 12);\n  let min = 0;\n  if (level === 1) min = randomFromList(['0', '15', '30', '45']);\n  else if (level === 2) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 3) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) min = randomIntFromInterval(0, 59);\n  const timeval = timeformat(hrs, min);\n  const sign = randomSign('+-');\n  let addmin = '';\n  let addhrs = '';\n  if (level === 1) addmin = randomFromList(['15', '30', '45']);\n  else if (level === 2 || level === 3) addmin = randomFromList(['10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) addmin = randomIntFromInterval(1, 59);\n\n  if (level > 2) addhrs = randomIntFromInterval(1, 10);\n\n  // eslint-disable-next-line new-cap\n  const dt1 = moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm');\n  // eslint-disable-next-line new-cap\n  const dt2 = moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm').subtract({ hours: addhrs, minutes: addmin });\n\n  let questionstr = `How many minutes from ${dt2.format(HR24 === 'Y' ? 'HH:mm' : 'hh:mm')} and  ${timeval}?`;\n  // console.log(questionstr);\n\n  if (inwords) {\n    const toword1 = TimeInWords(dt1, HR24);\n    const toword2 = TimeInWords(dt2, HR24);\n    questionstr = `How many minutes from <u><i>${toword2}</u></i> and  <u><i>${toword1}</u></i>?`;\n    // console.log(questionstr);\n  }\n  const answer = `${addhrs}:${addmin}`;\n  // console.log('[GenerateTimeQuestion]', sign, answerdt.format('hh:mm'));\n  // console.log('[Question Generator]', questions);\n  return {\n    question: questionstr,\n    questions: '',\n    answers: '',\n    answer: answer,\n  };\n};\n\nconst TimeInWords = (time, isHR24) => {\n  let toword = '';\n  const hrFormat = isHR24 === 'Y' ? 'HH' : 'hh';\n  // console.log('QuoteGenerator]TimeInWords', time, isHR24);\n\n  if (+time.format('mm') === 0) toword = `${numberToEnglish(+time.format(hrFormat))} o'clock`;\n  else if (+time.format('mm') === 30) toword = `Half Past ${numberToEnglish(+time.format(hrFormat))}`;\n  else if (+time.format('mm') < 30) toword = `${numberToEnglish(time.format('mm'))} min past ${numberToEnglish(+time.format('HH'))}`;\n  else if (+time.format('mm') > 30) {\n    let tohrstr = 1 + +time.format(hrFormat);\n    tohrstr = isHR24 === 'Y' && tohrstr === 24 ? '0' : tohrstr;\n    tohrstr = isHR24 !== 'Y' && tohrstr === 13 ? '1' : tohrstr;\n    toword = `${numberToEnglish(60 - time.format('mm'))} min to ${numberToEnglish(tohrstr)}`;\n  }\n\n  return toword;\n};\n\nexport const generateTimeHrsArthematicQuestion = (questiontype) => {\n  // let currentnumber = 0;\n  // let question = '';\n  const questions = [];\n  // let answer = 0;\n  const { type, nos, digits, HR24, level, inwords } = questiontype;\n  const symbols = [];\n\n  const hrs = HR24 === 'Y' ? randomIntFromInterval(0, 23) : randomIntFromInterval(1, 12);\n  let min = 0;\n  if (level === 1) min = randomFromList(['0', '15', '30', '45']);\n  else if (level === 2) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 3) min = randomFromList(['0', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) min = randomIntFromInterval(0, 59);\n  const timeval = timeformat(hrs, min);\n  const sign = randomSign('+-');\n  let addmin = '';\n  let addhrs = '';\n  if (level === 1) addmin = randomFromList(['15', '30', '45']);\n  else if (level === 2 || level === 3) addmin = randomFromList(['10', '15', '20', '25', '30', '35', '40', '45', '50', '55']);\n  else if (level === 4) addmin = randomIntFromInterval(1, 59);\n\n  if (level > 2) addhrs = randomIntFromInterval(1, 10);\n\n  // eslint-disable-next-line new-cap\n  let answerdt = new moment(timeval, HR24 === 'Y' ? 'HH:mm' : 'hh:mm');\n  let questionstr = `${timeval} ${sign} ${addhrs} ${addhrs ? 'hrs' : ''} ${addmin} min`;\n  // console.log(questionstr);\n\n  if (inwords) {\n    const toword = TimeInWords(answerdt, HR24);\n    questionstr = `${toword} ${sign === '+' ? ' <u><i>plus</i></u> ' : ' <u><i>minus</i></u> '} ${numberToEnglish(addhrs)} ${addhrs ? 'hrs' : ''} ${numberToEnglish(addmin)} mins`;\n    // console.log(questionstr);\n  }\n\n  if (sign === '+') answerdt = answerdt.add({ hours: addhrs, minutes: addmin });\n  else if (sign === '-') answerdt = answerdt.subtract({ hours: addhrs, minutes: addmin });\n\n  // console.log('[GenerateTimeQuestion]', sign, answerdt.format('hh:mm'));\n  const answer = '';\n  // console.log('[Question Generator]', questions);\n  return {\n    question: questionstr,\n    questions: '',\n    answers: '',\n    answer: answerdt.format(HR24 === 'Y' ? 'HH:mm' : 'hh:mm'),\n  };\n};\n\nconst timeformat = (hrs, min) => {\n  return `${hrs < 10 ? '0' : ''}${hrs}:${min < 10 ? '0' : ''}${min}`;\n};\n\nexport const randomIntFromInterval = (min, max, exceptList = []) => {\n  // min and max included\n  // if (decimals === 0)\n  let val;\n\n  do {\n    val = Math.floor(Math.random() * (max - min + 1) + min);\n  } while (exceptList.indexOf(val) > -1);\n  return val;\n\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\nexport const randomFromList = (list) => {\n  // retuns a number from list\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n// const randomSign = () => {\n//   return Math.round(Math.random()) * 2 - 1;\n// };\n\nexport const getDisplaySuccessMessage = () => {\n  const successMessages = [\n    'Tremendous',\n    'Remarkable',\n    'Great',\n    'Terrific',\n    'Enormous',\n    'Impressive',\n    'Outstanding',\n    'Phenomenal',\n    'Marvellous',\n    'Wonderful',\n    'Sensational',\n    'Magnificent',\n    'Superb',\n    'Excellent',\n    'Very good',\n    'First-class',\n    'Fabulous',\n    'Super',\n    'Awesome',\n    'Brilliant',\n    'Keep going',\n  ];\n  return randomFromList(successMessages);\n};\n\nexport const getDisplayWrongMessage = () => {\n  const successMessages = ['Concentrate', 'Focus', 'Think hard', 'Give attention', 'Be attentive'];\n  return randomFromList(successMessages);\n};\n\nexport const getDisplayRetryMessage = () => {\n  const successMessages = ['Try Again', 'Retry', 'Re-attempt', 'Re-Think'];\n  return randomFromList(successMessages);\n};\n\nconst randomSign = (type) => {\n  const signs = type.split('');\n  const randval = randomIntFromInterval(0, signs.length - 1);\n  return signs[randval];\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\nexport const evaluate = (str) => {\n  return mathjs.evaluate(str);\n};\n\nexport const replaceString = (str, ...args) => {\n  let base = str;\n  for (let i = 0; i < args.length; i += 1) base = base.replace(`{${i}}`, args[i]);\n\n  return base;\n  // const replacements = { '{NAME}': 'Mike', '{AGE}': '26', '{EVENT}': '20' };\n  //   let str = 'My Name is {NAME} and my age is {AGE}.';\n\n  // str = str.replace(/{\\w+}/g, (all) => {\n  //   return replacements[`{${all}}`] || all;\n  // });\n};\n\nexport const replaceValues = (str, valueHash) => {\n  let base = str;\n  base = base.replace(/{\\w+}/g, (all) => {\n    // console.log('[Utils.replaceValue]', all);\n    return valueHash[all.replace('{', '').replace('}', '')]; // || all;\n  });\n  return base;\n};\n\nconst gcd = (a, b) => {\n  return b ? gcd(b, a % b) : a;\n};\n\nconst decimalToFraction = (_decimal) => {\n  if (_decimal === parseInt(_decimal, 10)) {\n    return {\n      top: parseInt(_decimal, 10),\n      bottom: 1,\n      display: `${parseInt(_decimal, 10)}/${1}`,\n    };\n  } else {\n    let top = _decimal.toString().includes('.') ? _decimal.toString().replace(/\\d+[.]/, '') : 0;\n    const bottom = 10 ** top.toString().replace('-', '').length;\n    if (_decimal >= 1) {\n      top = +top + Math.floor(_decimal) * bottom;\n    } else if (_decimal <= -1) {\n      top = +top + Math.ceil(_decimal) * bottom;\n    }\n\n    const x = Math.abs(gcd(top, bottom));\n    return {\n      top: top / x,\n      bottom: bottom / x,\n      display: `${top / x}/${bottom / x}`,\n    };\n  }\n};\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDgKDrBQ_-BRnVOuUlqLd7hx1w0R9bBnrA',\n  authDomain: 'math-race-7ea5f.firebaseapp.com',\n  projectId: 'math-race-7ea5f',\n  storageBucket: 'math-race-7ea5f.appspot.com',\n  messagingSenderId: '793417309877',\n  appId: '1:793417309877:web:6764942ec5b237291a68fc',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://math-race-7ea5f-default-rtdb.europe-west1.firebasedatabase.app', // 'https://react-my-burger-2492e.firÍebaseio.com',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport * as Utils from '../../../Utils/QuestionGenerator';\nimport firebase from '../../../Config/Firebase';\nimport axios from '../../../axios-firebase';\n\nexport const reset = () => {\n  return {\n    type: actionTypes.RESET,\n  };\n};\n\nexport const start = (playername1, playername2, questiontype1, questiontype2) => {\n  return async (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    // console.log('[actions] start',questiontype1);\n    const lquestiontype1 = questiontype1;\n    const lquestiontype2 = questiontype2;\n    if (\n      // eslint-disable-next-line operator-linebreak\n      !getstate().game.questions &&\n      (['WORD', 'MONEY', 'FILL', 'CONVERSIONS'].includes(lquestiontype1.type) || (lquestiontype2 && ['WORD', 'MONEY', 'FILL', 'CONVERSIONS'].includes(lquestiontype2.type)))\n    ) {\n      //   axios.get('/questions.json')\n      //         .then(response=>{\n      //             console.log(response.data);\n      //             // dispatch(setIngredients(response.data))\n      //         })\n      //         .catch(error=>{\n      //             console.log(error);\n      //             // dispatch(fetchIngredientsFailed());\n      //         });\n      // };\n\n      const questions = {};\n\n      const res = await axios.get('/questions.json');\n      const { data } = await res;\n\n      // .then((response) => {\n      // console.log('data:',data);\n      Object.keys(data).forEach((key) => {\n        const q = [];\n        data[key].forEach((item, idx) => {\n          // const question = item;\n          if (!(item.active && item.active === 'N')) q.push({ id: idx, ...item });\n        });\n        questions[key] = q;\n      });\n\n      // data.Word.forEach((item, idx) => {\n      //   // const question = item;\n      //   if (!(item.active && item.active === 'N')) questions.push({ id: idx, ...item });\n      // });\n\n      // console.log('Questions', questions);\n      // const db = firebase.firestore();\n      // const snapshot = db.collection('/questions');\n      // const collections = await snapshot.get();\n      // const questions = [];\n      // collections.docs.forEach((item) => {\n      //   const question = item.data();\n      //   questions.push({ id: item.id, ...question });\n      //   // Object.keys(question).forEach((key) => {\n      //   //   console.log(`${key} - ${question[key]}`);\n      //   // });\n      // });\n      // console.log('[action.start]', questions);\n\n      await dispatch({\n        type: actionTypes.LOAD_QUESTIONS,\n        questions: questions,\n      });\n    }\n    let question2 = {};\n    let indexs2 = [];\n    if (playername2) {\n      if (['WORD', 'MONEY', 'FILL', 'CONVERSIONS'].includes(questiontype2.type)) {\n        lquestiontype2.points = indexs2.length;\n        indexs2 = [...Array(getstate().game.wordquestions[lquestiontype2.type].length).keys()];\n      }\n      question2 = { ...Utils.generateQuestion(lquestiontype2, getstate().game.wordquestions, indexs2) };\n    }\n\n    let indexs1 = [];\n    if (['WORD', 'MONEY', 'FILL', 'CONVERSIONS'].includes(questiontype1.type)) {\n      indexs1 = [...Array(getstate().game.wordquestions[lquestiontype1.type].length).keys()];\n      lquestiontype1.points = indexs1.length;\n    }\n\n    // Question loaded if required\n    dispatch({\n      type: actionTypes.START,\n      // questiontype: questiontype,\n      players: [\n        {\n          id: 0,\n          name: playername1,\n          points: 0,\n          wrong: 0,\n          ...Utils.generateQuestion(lquestiontype1, getstate().game.wordquestions, indexs1),\n          answerresult: '',\n          questiontype: lquestiontype1,\n          wordquestionsindexs: indexs1,\n        },\n        { id: 1, name: playername2, points: 0, wrong: 0, ...question2, answerresult: '', questiontype: lquestiontype2, wordquestionsindexs: indexs2 },\n      ],\n    });\n  };\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno, isCorrect = true) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    const { questionno, questiontype } = getstate().game.players[playerno];\n    const { wordquestionsindexs } = getstate().game.players[playerno];\n    const index = wordquestionsindexs.indexOf(questionno);\n    if (index > -1) {\n      wordquestionsindexs.splice(index, 1);\n    } //\n    // Reload the indexes if all questions are answered...\n    // if (!wordquestionsindexs || wordquestionsindexs.length <= 0) {\n      // dispatch(complete());\n      // return;\n      // wordquestionsindexs = [...Array(getstate().game.wordquestions[questiontype.type].length).keys()];\n    // }\n    dispatch({\n      type: actionTypes.CORRECT,\n      isCorrect: isCorrect,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype, getstate().game.wordquestions, wordquestionsindexs),\n      wordquestionsindexs: wordquestionsindexs,\n    });\n  };\n};\n\nexport const wrongAnswer = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    const { wordquestionsindexs } = getstate().game.players[playerno];\n    dispatch({\n      type: actionTypes.WRONG,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype, getstate().game.wordquestions, wordquestionsindexs),\n    });\n  };\n};\n\nexport const multiplayermode = (multiplayer, playername1, playername2) => {\n  return (dispatch, getstate) => {\n    const players = [...getstate().game.players];\n    players[0].name = playername1;\n    players[1].name = playername2;\n    dispatch({\n      type: actionTypes.SET_MULTIPLAYER,\n      multiplayer: multiplayer,\n      players: players,\n    });\n  };\n};\n\nexport const complete = () => {\n  return {\n    type: actionTypes.COMPLETE,\n  };\n};\n\nexport const win = (playerno, isCorrect = true) => {\n  return {\n    playerno: playerno,\n    type: actionTypes.WIN,\n    isCorrect: isCorrect,\n  };\n};\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './MultiplayerSetup.module.css';\n\nclass MultiplayerSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    const type = [(props.players && props.players[0].questiontype.type) || '+-', (props.players && props.players[1].questiontype.type) || '+-'];\n    const digits = [(props.players && props.players[0].questiontype.digits) || '2', (props.players && props.players[1].questiontype.digits) || '2'];\n\n    this.state = {\n      type0: type[0],\n      type1: type[1],\n      digits0: digits[0],\n      digits1: digits[1],\n      player0: players[0],\n      player1: players[1],\n    };\n\n    // console.log('MultiplayerSetup[constructor]', this.state);\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[MultiplayerSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      player0,\n      player1,\n      digits0,\n      numbers0,\n      decimals0,\n      type0,\n      points0,\n      inwords0,\n      digits1,\n      numbers1,\n      decimals1,\n      type1,\n      points1,\n      inwords1,\n      tens0,\n      tens1,\n      delay0,\n      delay1,\n      level0,\n      level1,\n      HR240,\n      HR241,\n    } = this.form;\n\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: ['+-'].includes(type0.value) ? +decimals0.value : 0,\n      points: +points0.value,\n      delay: ['+-', '+-x'].includes(type0.value) ? +delay0.value : 0,\n      tens: tens0.value,\n      HR24: HR240.value,\n      level: +level0.value,\n      inwords: inwords0.value === 'true',\n    };\n    const questiontype1 = {\n      type: type1.value,\n      nos: +numbers1.value,\n      digits: +digits1.value,\n      points: +points1.value,\n      decimals: ['+-'].includes(type1.value) ? +decimals1.value : 0,\n      delay: ['+-', '+-x'].includes(type1.value) ? +delay1.value : 0,\n      tens: tens1.value,\n      HR24: HR241.value,\n      level: +level1.value,\n      inwords: inwords1.value === 'true',\n    };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(this.state.player0, this.state.player1, questiontype0, questiontype1);\n    this.props.history.push('/math-race/play');\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    // console.log('[MultiplayerSetup] render');\n\n    const players = [(this.props.players && this.props.players[0].name) || 'Hasana', (this.props.players && this.props.players[1].name) || ''];\n\n    const playersetup = [1, 0].map((index) => {\n      const { name, questiontype } = this.props.players[index];\n      return (\n        <div key={index} className={Classes.Race}>\n          <div className={Classes.MultiplayerSetup}>\n            \n            <div style={{ display: this.state[`player${index}`] ? 'flex' : 'none' }} className={Classes.Options}>\n            <h2>{this.state[`player${index}`]}</h2>\n              <div>\n                <h2>Type</h2>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-'} />\n                  <label>+-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'x'} />\n                  <label>x</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"/\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '/'} />\n                  <label>/</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"+-x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-x'} />\n                  <label>+-x</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"X2\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'X2'} />\n                  <label>\n                    X<sup>2</sup>\n                  </label>\n                </div>\n                <div className={Classes.ExtraWide}>\n                  <input\n                    type=\"radio\"\n                    name={`type${index}`}\n                    value=\"TIMEHRS+-\"\n                    onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })}\n                    defaultChecked={questiontype.type === 'TIMEHRS+-'}\n                  />\n                  <label>TIMEHRS+-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`type${index}`} value=\"FILL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'FILL'} />\n                  <label>Fill</label>\n                </div>\n                {/* <div className={Classes.ExtraWide}>\n                  <input type=\"radio\" name={`type${index}`} value=\"MONEY\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'MONEY'} />\n                  <label>Money</label>\n                </div>\n                <div className={Classes.ExtraWide}>\n                  <input type=\"radio\" name={`type${index}`} value=\"WORD\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'WORD'} />\n                  <label>Word</label>\n                </div> */}\n\n                {/* <div>\n                <input type=\"radio\" placeholder=\"In words\" name={`type${index}`} value=\"+-W\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-W'} />\n                <label>+-(Words)</label>\n              </div> */}\n                {/* <div>\n                        <input type=\"radio\" name=\"type\" value=\"*\" onChange={(e) => this.setState({ type: e.currentTarget.value })} />\n                        <label>X</label>\n                    </div> */}\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div style={{ display: ['+-', 'x/y', '+-x', 'x', '/', 'X2', 'WORD', 'FILL', 'MONEY'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                  <h2>Digits</h2>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"1\" defaultChecked={questiontype.digits === 1} />\n                    <label>1</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"2\" defaultChecked={questiontype.digits === 2} />\n                    <label>2</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"3\" defaultChecked={questiontype.digits === 3} />\n                    <label>3</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`digits${index}`} onChange={(e) => this.setState({ [`digits${index}`]: e.currentTarget.value })} value=\"4\" defaultChecked={questiontype.digits === 4} />\n                    <label>4</label>\n                  </div>\n                </div>\n                <div style={{ marginLeft: '0px', display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                  <h2>Numbers</h2>\n\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"2\" defaultChecked={questiontype.nos === 2} />\n                    <label>2</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"3\" defaultChecked={questiontype.nos === 3} />\n                    <label>3</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"4\" defaultChecked={questiontype.nos === 4} />\n                    <label>4</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"5\" defaultChecked={questiontype.nos === 5} />\n                    <label>5</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`numbers${index}`} value=\"10\" defaultChecked={questiontype.nos === 10} />\n                    <label>10</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: this.state[`digits${index}`] === 2 && ['X2'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Tens only</h2>\n                <div>\n                  <input type=\"radio\" name={`tens${index}`} value=\"Y\" defaultChecked={questiontype.tens === 'Y'} />\n                  <label>Yes</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`tens${index}`} value=\"N\" defaultChecked={questiontype.tens === 'N'} />\n                  <label>No</label>\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>24Hr</h2>\n                <div>\n                  <input type=\"radio\" name={`HR24${index}`} value=\"Y\" defaultChecked={questiontype.HR24 === 'Y'} />\n                  <label>Yes</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`HR24${index}`} value=\"N\" defaultChecked={questiontype.HR24 === 'N'} />\n                  <label>No</label>\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Level</h2>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"1\" defaultChecked={questiontype.level === 1} />\n                  <label>1</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"2\" defaultChecked={questiontype.level === 2} />\n                  <label>2</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"3\" defaultChecked={questiontype.level === 3} />\n                  <label>3</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`level${index}`} value=\"4\" defaultChecked={questiontype.level === 4} />\n                  <label>4</label>\n                </div>\n              </div>\n              <div style={{ display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h2>Delay</h2>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"0\" defaultChecked={questiontype.delay === 0} />\n                  <label>-</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"1\" defaultChecked={questiontype.delay === 1} />\n                  <label>1s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"2\" defaultChecked={questiontype.delay === 2} />\n                  <label>2s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"3\" defaultChecked={questiontype.delay === 3} />\n                  <label>3s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"4\" defaultChecked={questiontype.delay === 4} />\n                  <label>4s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"5\" defaultChecked={questiontype.delay === 5} />\n                  <label>5s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"6\" defaultChecked={questiontype.delay === 6} />\n                  <label>6s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"7\" defaultChecked={questiontype.delay === 7} />\n                  <label>7s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"8\" defaultChecked={questiontype.delay === 8} />\n                  <label>8s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"9\" defaultChecked={questiontype.delay === 9} />\n                  <label>9s</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`delay${index}`} value=\"10\" defaultChecked={questiontype.delay === 10} />\n                  <label>10s</label>\n                </div>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div style={{ display: 'flex' }}>\n                  <h2>In Words</h2>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"true\" defaultChecked={!!questiontype.inwords} />\n                    <label>Yes</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`inwords${index}`} value=\"false\" defaultChecked={!questiontype.inwords} />\n                    <label>No</label>\n                  </div>\n                </div>\n                <div style={{ marginLeft: '100px', display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n                  <h2>Decimals</h2>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                    <label>0</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                    <label>1</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name={`decimals${index}`} value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                    <label>2</label>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h2>Points</h2>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"1\" defaultChecked={questiontype.points === 1} />\n                  <label>1</label>\n                </div>\n                {/* <div>\n                <input type=\"radio\" name={`points${index}`} value=\"2\" defaultChecked={questiontype.points === 2} />\n                <label>2</label>\n              </div> */}\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"5\" defaultChecked={questiontype.points === 5} />\n                  <label>5</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"10\" defaultChecked={questiontype.points === 10} />\n                  <label>10</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"15\" defaultChecked={questiontype.points === 15} />\n                  <label>15</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"20\" defaultChecked={questiontype.points === 20} />\n                  <label>20</label>\n                </div>\n                <div>\n                  <input type=\"radio\" name={`points${index}`} value=\"25\" defaultChecked={questiontype.points === 25} />\n                  <label>25</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      // <div>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked value=\"Male\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n\n      // </div>\n\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n          <div>{playersetup}</div>\n          <div>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              // onClick={(e) => this.startGame(e)}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Start &gt;&gt;\n            </button>\n\n            <button\n              type=\"button\"\n              value=\"Home\"\n              // onKeyPress={(e) => this.startGame(e)}\n              onKeyPress={(e) => this.props.history.push('/math-race')}\n              onClick={(e) => this.props.history.push('/math-race')}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              &lt; &lt; Home\n            </button>\n          </div>\n        </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  //   questiontype: state.game.questiontype,\n  // starttime: state.game.starttime,\n  // endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerSetup);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    // console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            />\n                            );\n                            \n    return (<> </>)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<> </>)\n    return (\n        <>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/success.9e3ceb9f.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.a523fd75.mp3\";","export default __webpack_public_path__ + \"static/media/movingfish.b08d01f0.mp3\";","export default __webpack_public_path__ + \"static/media/click.8515d2a4.mp3\";","export default __webpack_public_path__ + \"static/media/claps.fd683cd7.mp3\";","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n// import useSound from 'use-sound';\nimport { Howl, Howler } from 'howler';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './MultiplayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\nimport clickSound from '../../sounds/click.mp3';\nimport clapsSound from '../../sounds/claps.mp3';\n// // import PlaySound from '../../Utils/PlaySound';\n// import UIfx from 'uifx';\n\nclass MultiplayerSection extends PureComponent {\n  success = new Howl({ src: successSound, volume: 1 });\n  wrong = new Howl({ src: wrongSound, volume: 1 });\n  click = new Howl({ src: clickSound, volume: 1 });\n  movingfish = new Howl({ src: movingFishSound, volume: 1 });\n  claps = new Howl({ src: clapsSound, volume: 1 });\n  timers = [];\n\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n    question: '',\n    fullquestion: '',\n    qcounter: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    const player = this.props.players[this.props.playerno];\n    if (player.questiontype.delay === 0) this.setState({ question: player.question, fullquestion: player.question });\n    else {\n      // eslint-disable-next-line react/no-did-update-set-state\n      // this.setState({ qcounter: 0 });\n      this.displayQuestion(player, 0);\n    }\n    // console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', this.props.players[this.props.playerno].question , nextProps.players[nextProps.playerno].question);\n  //     if (this.props.players[this.props.playerno].question !== nextProps.players[nextProps.playerno].question) {\n  //       const player = nextProps.players[nextProps.playerno];\n  //       this.setState({ question: player.question });\n  //     }\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    // console.log('[PlayerSection] componentDidUpdate');\n    const player = this.props.players[this.props.playerno];\n    if (player.question !== this.state.fullquestion) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      if (player.questiontype.delay === 0)\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ question: player.question, fullquestion: player.question });\n      else {\n        // eslint-disable-next-line react/no-did-update-set-state\n        // this.setState({ qcounter: 0 });\n        this.displayQuestion(player, 0);\n      }\n    }\n  }\n\n  animateNextQuestion = (player) => {\n    const timer = setTimeout(() => {\n      if (this.state.qcounter >= player.questions.length) return;\n      this.setState((prevState) => ({ qcounter: prevState.qcounter + 1, question: player.questions[prevState.qcounter], fullquestion: player.question }));\n      this.animateNextQuestion(player);\n    }, 1000 * player.questiontype.delay);\n    this.timers.push(timer);\n  };\n\n  displayQuestion = (player, no) => {\n    let i = no < 0 ? 0 : no;\n    i = no >= player.questions.length ? player.questions.length - 1 : no;\n    if (i >= player.questions.length || i < 0) return;\n    console.log('[displayquestion]', i);\n    this.setState((prevState) => ({ qcounter: i + 1, question: player.questions[i], fullquestion: player.question }));\n    this.animateNextQuestion(player);\n  };\n\n  nextQuestion = () => {\n    this.clearTimer();\n    console.log('[nextquestion]', this.state.qcounter);\n    const player = this.props.players[this.props.playerno];\n    this.displayQuestion(player, this.state.qcounter);\n  };\n\n  prevQuestion = () => {\n    this.clearTimer();\n    const player = this.props.players[this.props.playerno];\n    console.log('[nextquestion]', this.state.qcounter);\n    this.displayQuestion(player, this.state.qcounter - 2);\n  };\n\n  buttonTheme = () => {\n    return this.props.playerno === '1' ? 'w3-ripple w3-hover-indigo w3-indigo' : 'w3-ripple w3-hover-red w3-pink';\n  };\n\n  sectionTheme = () => {\n    return this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink';\n  };\n\n  goClick = () => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n\n    if (!this.inputAnswer.value) return;\n\n    this.clearTimer();\n\n    let answer = this.inputAnswer.value;\n\n    if (player.questiontype.decimals > 0) answer = (+this.inputAnswer.value).toFixed(2).replace(/(\\.0+|0+)$/, '');\n\n    // console.log(answer,String(answer).replace(/^0+/, '') , String(player.answer).replace(/^0+/, ''))\n\n    // eslint-disable-next-line eqeqeq\n    if (String(answer).replace(/^0+/, '') == String(player.answer).replace(/^0+/, '')) {\n      if (player.points === player.questiontype.points - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.success.play();\n        this.movingfish.play();\n        this.props.win(this.props.playerno);\n        setTimeout(() => {\n          this.props.complete(this.props.playerno);\n          this.props.history.push('/math-race/complete');\n          this.claps.play();\n        }, 2000);\n\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      this.success.play();\n      this.movingfish.play();\n      // new UIfx({ asset: successSound }).play();\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.wrong.play();\n      // new UIfx({ asset: wrongSound }).play();\n    }\n  };\n\n  clearTimer = () => {\n    this.timers.forEach((timer) => {\n      clearInterval(timer);\n    });\n  };\n\n  restart = () => {\n    const player = this.props.players[this.props.playerno];\n    this.clearTimer();\n\n    this.setState({ question: '', fullquestion: player.question });\n    // const timer = setTimeout(() => {\n    // eslint-disable-next-line react/no-did-update-set-state\n    // this.setState({ qcounter: 0 });\n    this.displayQuestion(player, 0);\n    // }, 1000);\n    // clearInterval(timer);\n  };\n\n  appendAnswer = (val) => {\n    if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n    else this.inputAnswer.value += `${val}`;\n    this.click.play();\n  };\n\n  reset = () => {\n    this.props.reset();\n    this.props.history.push('/math-race/setup');\n  };\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answer, player.question, 'questions', player.questions);\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {player.answer}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[this.props.playerno === '0' ? Classes._0 : Classes._1].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.reset} tabIndex={0} onKeyPress={this.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '2s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          />\n        </div>\n        <div className={Classes.QuestionBar}>\n          <div>\n            <span className={[this.sectionTheme()].join(' ')}>\n              <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n            </span>\n            <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n              <span className={['fa-stack', Classes.Score].join(' ')}>\n                <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                  {player.points}\n                </strong>\n              </span>\n              <div>\n                <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                  <i className=\"fa fa-window-close\" />\n                </a>\n              </div>\n            </span>\n          </div>\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <span ref={this.questionRef} className={Classes.Question}>\n            <CSSTransition classNames=\"question\" timeout={200}>\n              <div>\n                <span style={{ display: 'inline-block', fontSize: '2.5em' }} dangerouslySetInnerHTML={{ __html: this.state.question }} />\n              </div>\n            </CSSTransition>\n            <div className={Classes.Refresh}>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.prevQuestion}\n                tabIndex={0}\n                onKeyPress={this.prevQuestion}\n              >\n                <i className=\"fa fa-long-arrow-left\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.nextQuestion}\n                tabIndex={0}\n                onKeyPress={this.nextQuestion}\n              >\n                <i className=\"fa fa-long-arrow-right\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.restart}\n                tabIndex={0}\n                onKeyPress={this.restart}\n              >\n                <i className=\"fa fa-refresh\" />\n              </a>\n            </div>\n            <input\n              ref={(e) => {\n                this.inputAnswer = e;\n              }}\n              onKeyDown={() => false}\n              onKeyPress={() => false}\n              onKeyUp={() => false}\n              type=\"text\"\n              maxLength=\"7\"\n              className={['w3-btn', 'w3-round-large', this.sectionTheme(), Classes.Answer].join(' ')}\n            />\n          </span>\n        </div>\n        <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'none' : 'block' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('.')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            .\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'block' : 'none' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer(':')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            :\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  win: (playerno) => dispatch(ReducerActions.win(playerno)),\n  complete: () => dispatch(ReducerActions.complete()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerSection);\n","import React, { Fragment } from 'react';\nimport * as Classes from './RaceComplete.module.css';\n\nfunction RaceComplete(props) {\n  const winner = props.players[0].points >= props.players[1].points ? props.players[0].name : props.players[1].name;\n\n  const playAgain = () => {\n    props.reset();\n    props.history.push('/math-race/setup');\n  };\n\n  const players = [...props.players].reverse().map((player) => {\n    if (!player.name) return <Fragment key={player.id} />;\n    const score = +player.points + (winner === player.name ? 10 : 0);\n    return (\n      <div key={player.id}>\n        <h1>\n          {winner === player.name ? 'Good Job' : 'Keep trying'} {player.name}\n        </h1>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.points - (player.questiontype.testmode ? player.wrong : 0)}</strong>\n          <span className={Classes.ScoreLabel}>Correct</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.wrong}</strong>\n          <span className={Classes.ScoreLabel}>Wrong</span>\n        </span>\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{winner === player.name ? 10 : 0}</strong>\n          <span className={Classes.ScoreLabel}>Win Bonus</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{score}</strong>\n          <span className={Classes.ScoreLabel}>Total</span>\n        </span> */}\n      </div>\n    );\n  });\n  return (\n    <div className={Classes.RaceComplete}>\n      {players}\n      <button type=\"button\" onClick={playAgain} onKeyPress={playAgain} className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}>\n        Play Again &gt;&gt;\n      </button>\n    </div>\n  );\n}\n\nexport default RaceComplete;\n","import React from 'react';\nimport * as Classes from './DrawArea.module.css';\n\nfunction DrawingLine({ line }) {\n  const pathData = `M ${\n     line\n      .map((p) => {\n        return `${p.get('x')} ${p.get('y')}`;\n      })\n      .join(' L ')}`;\n\n  return <path className={Classes.path} d={pathData} />;\n}\n\nexport default DrawingLine;\n","import React from 'react';\nimport DrawingLine from './DrawingLine';\nimport * as Classes from './DrawArea.module.css';\n\nfunction Drawing({ lines }) {\n  return (\n    <svg className={Classes.drawing}>\n      {lines.map((line, index) => (\n        <DrawingLine key={index} line={line} />\n      ))}\n    </svg>\n  );\n}\n\nexport default Drawing;\n","import React, { Component } from 'react';\nimport Map, { List } from 'immutable';\nimport Drawing from './Drawing';\nimport * as Classes from './DrawArea.module.css';\n\nclass DrawArea extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      lines: new List(),\n      isDrawing: false,\n    };\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  handleMouseDown(mouseEvent) {\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState((prevState) => ({\n      lines: prevState.lines.push(new List([point])),\n      isDrawing: true,\n    }));\n  }\n\n  handleMouseMove(mouseEvent) {\n    if (!this.state.isDrawing) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState((prevState) => ({\n      lines: prevState.lines.updateIn([prevState.lines.size - 1], (line) => line.push(point)),\n    }));\n  }\n\n  handleMouseUp() {\n    this.setState({ isDrawing: false });\n  }\n\n  relativeCoordinatesForEvent(mouseEvent) {\n    const boundingRect = this.drawArea.getBoundingClientRect();\n    return new Map({\n      x: mouseEvent.clientX - boundingRect.left,\n      y: mouseEvent.clientY - boundingRect.top,\n    });\n  }\n\n  render() {\n    return (\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={Classes.drawArea}\n        ref={(c) => {\n          this.drawArea = c;\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.handleMouseMove}\n      >\n        <Drawing lines={this.state.lines} />\n      </div>\n    );\n  }\n}\n\nexport default DrawArea;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './PlayerSelection.module.css';\n\nclass PlayerSelection extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    this.state = {\n      multiplayer: !!props.multiplayer,\n      player0: players[0],\n      player1: players[1],\n    };\n  }\n\n  goNext = () => {\n    let { player1 } = this.state;\n    if (this.state.multiplayer && !this.state.player1) player1 = 'Player 2';\n    else if (!this.state.multiplayer && this.state.player1) player1 = '';\n\n    this.props.setMultiplayer(this.state.multiplayer, this.state.player0, player1);\n    this.props.history.push('/math-race/setup');\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n        <div className={Classes.PlayerSelection}>\n          <div className={Classes.RaceSetup}>\n            <div>\n              <input type=\"radio\" name=\"mode\" value=\"false\" onChange={(e) => this.setState({ multiplayer: false })} defaultChecked={!this.state.multiplayer} />\n              <label>Single Player</label>\n              <input type=\"text\" placeholder=\"Player Name\" onChange={(e) => this.setState({ player0: e.currentTarget.value })} name=\"player1\" value={this.state.player0} />\n            </div>\n\n            <div>\n              <input type=\"radio\" name=\"mode\" value=\"true\" onChange={(e) => this.setState({ multiplayer: true })} defaultChecked={!!this.state.multiplayer} />\n              <label>Two Player</label>\n              <input\n                style={{ visibility: !this.state.multiplayer ? 'hidden' : 'visible' }}\n                type=\"text\"\n                name=\"player1\"\n                placeholder=\"Player Name\"\n                onChange={(e) => this.setState({ player1: e.currentTarget.value })}\n                value={this.state.player1}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexFlow: 'row', justifyContent: 'flex-end', marginRight: '10px' }}>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              onClick={this.goNext}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Next &gt;&gt;\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  multiplayer: state.game.multiplayer,\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setMultiplayer: (multiplayer, playername1, playername2) => dispatch(ReducerActions.multiplayermode(multiplayer, playername1, playername2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSelection);\n","import React, { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport MultiplayerSection from '../MultiplayerSection/MultiplayerSection';\nimport * as Classes from './MultiplayerWrapper.module.css';\n\nclass MultiplayerPlay extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const players = this.props.players.map((player, index) => (player.name ? <MultiplayerSection history={this.props.history} key={player.id} playerno={`${player.id}`} /> : <Fragment key={player.id} />));\n    return (\n      <div\n        className={Classes.Race}\n        style={{\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/underwater.png)`,\n        }}\n      >\n        {players}\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplayerPlay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Classes from './ToggleControl.module.css';\n\nfunction ToggleControl(props) {\n  const { label, checked } = props;\n\n  return (\n    <label className={Classes.Toggle}>\n      <input type=\"checkbox\" name={label} value=\"true\" defaultChecked={checked ? 'checked' : ''} />\n      <span className={Classes.Slider} />\n    </label>\n  );\n}\n\nToggleControl.propTypes = {\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n};\n\nexport default ToggleControl;\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// import Slider from 'react-rangeslider';\nimport InputRange from 'react-input-range';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './SingleplayerSetup.module.css';\n// import 'react-rangeslider/lib/index.css'\nimport 'react-input-range/lib/css/index.css';\nimport ToggleControl from '../controls/ToggleControl/ToggleControl';\n\nclass SingleplayerSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    const type = [(props.players && props.players[0].questiontype.type) || '+-', (props.players && props.players[1].questiontype.type) || '+-'];\n    const digits = [(props.players && props.players[0].questiontype.digits) || '2', (props.players && props.players[1].questiontype.digits) || '2'];\n\n    this.state = {\n      type0: type[0],\n      digits0: (props.players && props.players[0].questiontype.digits) || 3,\n      player0: players[0],\n      numbers0: (props.players && props.players[0].questiontype.nos) || 4,\n      decimals0: (props.players && props.players[0].questiontype.decimals) || 0,\n      points0: (props.players && props.players[0].questiontype.points) || 10,\n      inwords0: props.players && props.players[0].questiontype.inwords,\n      tens0: props.players && props.players[0].questiontype.tens,\n      delay0: (props.players && props.players[0].questiontype.delay) || 0,\n      level0: (props.players && props.players[0].questiontype.level) || 2,\n      HR240: props.players && props.players[0].questiontype.HR24,\n      testmode0: props.players && props.players[0].questiontype.testmode,\n    };\n\n    // console.log('SingleplayerSetup[constructor]', this.state);\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[SingleplayerSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { player0, digits0, numbers0, decimals0, type0, points0, inwords0, tens0, delay0, level0, HR240, testmode0 } = this.form;\n    // console.log('[SingleplayerSetup]', this.form.inwords0.checked);\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: ['+', '+-'].includes(type0.value) ? +decimals0.value : 0,\n      points: +points0.value,\n      delay: ['+', '+-', '+-x', 'BAL'].includes(type0.value) ? +delay0.value : 0,\n      tens: tens0.checked,\n      HR24: HR240.checked,\n      level: +level0.value,\n      inwords: inwords0.checked,\n      testmode: testmode0.checked,\n    };\n    // const questiontype1 = {\n    //   type: type1.value,\n    //   nos: +numbers1.value,\n    //   digits: +digits1.value,\n    //   points: +points1.value,\n    //   decimals: ['+-'].includes(type1.value) ? +decimals1.value : 0,\n    //   delay: ['+-', '+-x'].includes(type1.value) ? +delay1.value : 0,\n    //   tens: tens1.value,\n    //   HR24: HR241.value,\n    //   level: +level1.value,\n    //   inwords: inwords1.value === 'true',\n    // };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(this.state.player0, '', questiontype0, questiontype0);\n    this.props.history.push('/math-race/play');\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    // console.log('[SingleplayerSetup] render');\n\n    const player = [(this.props.players && this.props.players[0].name) || 'Hasana'];\n\n    const index = 0;\n    const { name, questiontype } = this.props.players[0];\n    const playersetup = (\n      <div key={index}>\n        <div className=\"w3-row\">\n          <div className={['w3-col m6', Classes.Type].join(' ')}>\n            <div className={Classes.Group4}>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+'} />\n                <label>+</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-'} />\n                <label>+-</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'x'} />\n                <label>X</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"/\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '/'} />\n                <label>/</label>\n              </div>\n              \n            </div>\n            <div className={Classes.Group2}>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-x'} />\n                <label>+-x</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"X2\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'X2'} />\n                <label>\n                  X<sup>2</sup>\n                </label>\n              </div>\n            </div>\n            <div className={Classes.Group2}>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"TIME+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'TIME+-'} />\n                <label>Time Difference</label>\n              </div>\n              <div>\n                <input\n                  type=\"radio\"\n                  name={`type${index}`}\n                  value=\"TIMEHRS+-\"\n                  onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })}\n                  defaultChecked={questiontype.type === 'TIMEHRS+-'}\n                />\n                <label>Time +- Hrs</label>\n              </div>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"BAL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'BAL'} />\n              <label>Balancing Technique</label>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"FILL\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'FILL'} />\n              <label>Fill</label>\n            </div>\n            {/* <div>\n              <input type=\"radio\" name={`type${index}`} value=\"MONEY\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'MONEY'} />\n              <label>Money</label>\n            </div>\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"WORD\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'WORD'} />\n              <label>Word</label>\n            </div> */}\n            <div>\n              <input type=\"radio\" name={`type${index}`} value=\"x/y\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === 'x/y'} />\n              <label>Fractions</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                name={`type${index}`}\n                value=\"CONVERSIONS\"\n                onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })}\n                defaultChecked={questiontype.type === 'CONVERSIONS'}\n              />\n              <label>Conversions</label>\n            </div>\n          </div>\n          <div className={['w3-col m6'].join(' ')}>\n            <div className={[Classes.Options].join(' ')}>\n              <div style={{ display: ['+', '+-', '+-x', 'x', '/', 'X2', 'WORD', 'FILL', 'MONEY', 'CONVERSIONS', 'x/y'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Digits</h5>\n                <InputRange name=\"digits0\" minValue={1} maxValue={5} value={this.state.digits0} onChange={(value) => this.setState({ digits0: value })} step={1} />\n              </div>\n\n              <div style={{ marginLeft: '0px', display: ['+', '+-', 'x', '/', '+-x', 'BAL'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>{['x'].includes(this.state[`type${index}`]) ? 'Multiplier' : (['/'].includes(this.state[`type${index}`]) ? 'Divisor' : 'Numbers') }</h5>\n                <InputRange name=\"numbers0\" minValue={1} maxValue={20} value={this.state.numbers0} onChange={(value) => this.setState({ numbers0: value })} step={1} />\n              </div>\n\n              <div style={{ display: this.state[`digits${index}`] === 2 && ['X2'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Tens only</h5>\n                <div className={Classes.Items}>\n                  <ToggleControl label={`tens${index}`} checked={!!questiontype.tens} />\n                </div>\n              </div>\n              <div style={{ display: ['TIMEHRS+-', 'TIME+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>24Hr</h5>\n                <div className={Classes.Items}>\n                  <ToggleControl label={`HR24${index}`} checked={!!questiontype.HR24} />\n                </div>\n              </div>\n              <div style={{ display: ['+', '+-', 'TIMEHRS+-', 'TIME+-', 'BAL'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Level</h5>\n                <InputRange\n                  name=\"level0\"\n                  minValue={1}\n                  maxValue={['+', '+-', 'BAL'].includes(this.state[`type${index}`]) ? 2 : 4}\n                  value={this.state.level0}\n                  onChange={(value) => this.setState({ level0: value })}\n                  step={1}\n                />\n              </div>\n              <div style={{ display: ['+', '+-', '+-x', 'BAL'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Delay</h5>\n                <InputRange name=\"delay0\" minValue={0} maxValue={10} value={this.state.delay0} onChange={(value) => this.setState({ delay0: value })} step={1} formatLabel={(value) => `${value}s`} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <h5>In Words</h5>\n                <div className={Classes.Items}>\n                  <ToggleControl label={`inwords${index}`} checked={!!questiontype.inwords} />\n                </div>\n              </div>\n              <div style={{ display: ['+', '+-'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n                <h5>Decimals</h5>\n                <InputRange name=\"decimals0\" minValue={0} maxValue={2} value={this.state.decimals0} onChange={(value) => this.setState({ decimals0: value })} step={1} />\n              </div>\n              <div style={{ display: ['FILL', 'WORD', 'MONEY', 'CONVERSIONS'].includes(this.state[`type${index}`]) ? 'none' : 'flex' }}>\n                <h5>Points</h5>\n                <InputRange name=\"points0\" minValue={1} maxValue={20} value={this.state.points0} onChange={(value) => this.setState({ points0: value })} step={1} />\n              </div>\n              <div style={{ display: 'flex' }}>\n                <h5>Exam</h5>\n                <div className={Classes.Items}>\n                  <ToggleControl label={`testmode${index}`} checked={!!questiontype.testmode} />\n                </div>\n              </div>\n\n              <div style={{ display: 'flex' }} />\n            </div>\n          </div>\n          {/* <div className={['w3-col m4', Classes.Type].join(' ')}>\n          </div>\n          \n         */}\n        </div>\n      </div>\n    );\n\n    return (\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h5 className=\"w3-container\" style={{ width: '100%', textAlign: 'center' }}>\n            Maths Race {player}\n          </h5>\n          <div className={['w3-container', Classes.SingleplayerSetup].join(' ')}>\n            {playersetup}\n            <div>\n              <button\n                type=\"submit\"\n                value=\"Start\"\n                // onKeyPress={(e) => this.startGame(e)}\n                // onClick={(e) => this.startGame(e)}\n                className={['w3-btn', 'w3-round', Classes.BtnGo].join(' ')}\n              >\n                Start &gt;&gt;\n              </button>\n\n              <button\n                type=\"button\"\n                value=\"Home\"\n                // onKeyPress={(e) => this.startGame(e)}\n                onKeyPress={(e) => this.props.history.push('/math-race')}\n                onClick={(e) => this.props.history.push('/math-race')}\n                className={['w3-btn', 'w3-round', 'w3-white', Classes.BtnGo].join(' ')}\n              >\n                &lt; &lt; Home\n              </button>\n            </div>\n          </div>\n        </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerSetup);\n","import React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { render } from '@testing-library/react';\nimport Classes from './AnswerInput.module.css';\n\nclass AnswerInput extends PureComponent {\n  // const {} = props\n  componentDidMount() {\n    this.props.resetAnswer(this.resetInput);\n    this.props.focusAnswer(this.focusInput);\n    this.inputAnswer.focus();\n  }\n\n  submitAnswer = (e) => {\n    let answer = this.inputAnswer.value;\n    if (this.props.seperator) answer = `${this.inputAnswer.value}${this.props.seperator}${this.inputAnswer1.value}`;\n    this.props.goClick(answer);\n  };\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.submitAnswer(e);\n    }\n  };\n\n  _handleKeyDown1 = (e) => {\n    if (e.key === 'Enter') {\n      this.inputAnswer1.focus();\n    }\n  };\n\n  resetInput = () => {\n    this.inputAnswer.value = '';\n    if (this.props.seperator) this.inputAnswer1.value = '';\n    this.focusInput();\n  };\n\n  focusInput = () => {\n    this.inputAnswer.focus();\n  };\n\n  //   let inputAnswer = null;\n\n  render() {\n    let inputfields = (\n      <input\n        ref={(e) => {\n          this.inputAnswer = e;\n        }}\n        inputMode=\"numeric\"\n        onKeyDown={this._handleKeyDown}\n        type=\"text\"\n        maxLength=\"7\"\n        className={['w3-btn', 'w3-round-large'].join(' ')}\n      />\n    );\n\n    if (this.props.seperator) {\n      inputfields = (\n        <Fragment>\n          <input\n            placeholder=\"hrs\"\n            ref={(e) => {\n              this.inputAnswer = e;\n            }}\n            inputMode=\"numeric\"\n            onKeyDown={this._handleKeyDown1}\n            type=\"text\"\n            maxLength=\"7\"\n            className={['w3-btn', 'w3-round-large'].join(' ')}\n          />\n          {this.props.seperator}\n          <input\n            placeholder=\"min\"\n            ref={(e) => {\n              this.inputAnswer1 = e;\n            }}\n            inputMode=\"numeric\"\n            onKeyDown={this._handleKeyDown}\n            type=\"text\"\n            maxLength=\"7\"\n            className={['w3-btn', 'w3-round-large'].join(' ')}\n          />\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        {inputfields}\n\n        <button type=\"button\" onClick={this.submitAnswer} className={['w3-btn', 'w3-round-large', 'ColorTheme', Classes.BtnGo].join(' ')}>\n          GO\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nAnswerInput.propTypes = {\n  // type: PropTypes.string.isRequired,\n  seperator: PropTypes.string,\n  goClick: PropTypes.func.isRequired,\n  focusAnswer: PropTypes.func.isRequired,\n  resetAnswer: PropTypes.func.isRequired,\n};\n\nexport default AnswerInput;\n","/* eslint-disable react/no-unused-class-component-methods */\nimport React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n// import useSound from 'use-sound';\nimport { Howl, Howler } from 'howler';\nimport { boolean } from 'mathjs';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './SingleplayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\nimport clickSound from '../../sounds/click.mp3';\nimport clapsSound from '../../sounds/claps.mp3';\nimport AnswerInput from '../AnswerInput/AnswerInput';\n// // import PlaySound from '../../Utils/PlaySound';\n// import UIfx from 'uifx';\n\nclass SingleplayerSection extends PureComponent {\n  success = new Howl({ src: successSound, volume: 1 });\n  wrong = new Howl({ src: wrongSound, volume: 1 });\n  click = new Howl({ src: clickSound, volume: 1 });\n  movingfish = new Howl({ src: movingFishSound, volume: 1 });\n  claps = new Howl({ src: clapsSound, volume: 1 });\n  timers = [];\n  answertimers = [];\n\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n    question: '',\n    answer: '',\n    fullquestion: '',\n    qcounter: 0,\n    attempts: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    this.retryRef = React.createRef();\n    this.answerRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    const player = this.props.players[this.props.playerno];\n    if (player.questiontype.delay === 0) this.setState({ question: player.question, fullquestion: player.question });\n    else {\n      // eslint-disable-next-line react/no-did-update-set-state\n      // this.setState({ qcounter: 0 });\n      this.displayQuestion(player, 0);\n    }\n    // console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', this.props.players[this.props.playerno].question , nextProps.players[nextProps.playerno].question);\n  //     if (this.props.players[this.props.playerno].question !== nextProps.players[nextProps.playerno].question) {\n  //       const player = nextProps.players[nextProps.playerno];\n  //       this.setState({ question: player.question });\n  //     }\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    // console.log('[PlayerSection] componentDidUpdate');\n    const player = this.props.players[this.props.playerno];\n    if (player.question !== this.state.fullquestion) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      if (player.questiontype.delay === 0)\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ question: player.question, fullquestion: player.question, attempts: 0 });\n      else {\n        // eslint-disable-next-line react/no-did-update-set-state\n        // this.setState({ qcounter: 0 });\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ attempts: 0 });\n        this.displayQuestion(player, 0);\n      }\n    }\n  }\n\n  animateNextQuestion = (player) => {\n    const timer = setTimeout(() => {\n      const answerRef = this.answerRef.current;\n      if (this.state.qcounter >= player.questions.length) return;\n      // this.setState((prevState) => ({ qcounter: prevState.qcounter + 1, question: player.questions[prevState.qcounter], fullquestion: player.question }));\n      this.setState((prevState) => ({\n        qcounter: prevState.qcounter + 1,\n        question: player.questions[prevState.qcounter],\n        answer: prevState.qcounter < player.questions.length - 1 && prevState.attempts > 1 ? player.answers[prevState.qcounter - 1] : '',\n        fullquestion: player.question,\n        automate: true,\n      }));\n      if (answerRef) {\n        answerRef.classList.remove(Classes.HideAnswer);\n        const answertimer = setTimeout(() => {\n          answerRef.classList.add(Classes.HideAnswer);\n        }, 1000);\n        this.answertimers.push(answertimer);\n      }\n\n      this.animateNextQuestion(player);\n    }, 1000 * player.questiontype.delay);\n    this.timers.push(timer);\n  };\n\n  displayQuestion = (player, no) => {\n    // this.inputAnswer.focus();\n    const answerRef = this.retryRef.current;\n    // if (this.state.qcounter >= player.questions.length) return;\n    this.focusAnswer();\n    let i = no < 0 ? 0 : no;\n    i = no >= player.questions.length ? player.questions.length - 1 : no;\n    if (i >= player.questions.length || i < 0) return;\n    // console.log('[displayquestion]', i);\n    const answer = i < player.questions.length - 1 && this.state.attempts > 1 ? player.answers[i - 1] : '';\n    this.setState((prevState) => ({ qcounter: i + 1, question: player.questions[i], answer: answer, fullquestion: player.question }));\n    // this.setState((prevState) => ({ qcounter: i + 1, question: player.questions[i], fullquestion: player.question }));\n    this.animateNextQuestion(player);\n  };\n\n  nextQuestion = () => {\n    this.clearTimer();\n    // console.log('[nextquestion]', this.state.qcounter);\n    const player = this.props.players[this.props.playerno];\n    this.displayQuestion(player, this.state.qcounter);\n  };\n\n  prevQuestion = () => {\n    this.clearTimer();\n    const player = this.props.players[this.props.playerno];\n    // console.log('[nextquestion]', this.state.qcounter);\n    this.displayQuestion(player, this.state.qcounter - 2);\n  };\n\n  buttonTheme = () => {\n    return 'ColorTheme';\n  };\n\n  sectionTheme = () => {\n    return 'ColorTheme';\n  };\n\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.goClick();\n    }\n  };\n\n  goClick = (inputAnswer) => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n    const retryRef = this.retryRef.current;\n\n    if (!inputAnswer) return;\n\n    this.clearTimer();\n\n    let answer = inputAnswer;\n\n    if (player.questiontype.decimals > 0 || inputAnswer.indexOf('.') > -1) answer = (+inputAnswer).toFixed(2).replace(/(\\.0+|0+)$/, '');\n\n    // console.log('[SingleplayerSection]', answer, String(answer).replace(/^0+/, ''), String(player.answer).replace(/^0+/, ''));\n    // eslint-disable-next-line eqeqeq\n    const iscorrect = String(answer).replace(/^0+/, '') == String(player.answer).replace(/^0+/, '');\n\n    // eslint-disable-next-line eqeqeq\n    if (player.questiontype.testmode || iscorrect) {\n      if (player.points === player.questiontype.points - 1 || (player.wordquestionsindexs && player.wordquestionsindexs.length === 1)) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.success.play();\n        this.movingfish.play();\n        this.props.win(this.props.playerno, iscorrect);\n        setTimeout(() => {\n          this.props.complete(this.props.playerno);\n          this.props.history.push('/math-race/complete');\n          this.claps.play();\n        }, 2000);\n\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno, iscorrect);\n        // this.inputAnswer.value = '';\n        this.resetAnswer();\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      this.success.play();\n      this.movingfish.play();\n      // new UIfx({ asset: successSound }).play();\n    } else if (this.state.attempts > 1) {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.inputAnswer.value = '';\n        this.resetAnswer();\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.wrong.play();\n      // new UIfx({ asset: wrongSound }).play();\n    } else {\n      retryRef.classList.add(Classes.MessageAnimate);\n      setTimeout(() => {\n        retryRef.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.resetAnswer();\n      this.setState((state) => {\n        return { attempts: state.attempts + 1 };\n      });\n      this.wrong.play();\n    }\n  };\n\n  clearTimer = () => {\n    this.timers.forEach((timer) => {\n      clearInterval(timer);\n    });\n    this.answertimers.forEach((timer) => {\n      clearInterval(timer);\n    });\n  };\n\n  restart = () => {\n    const player = this.props.players[this.props.playerno];\n    this.clearTimer();\n\n    this.setState({ question: '', fullquestion: player.question });\n    // const timer = setTimeout(() => {\n    // eslint-disable-next-line react/no-did-update-set-state\n    // this.setState({ qcounter: 0 });\n    this.displayQuestion(player, 0);\n    // }, 1000);\n    // clearInterval(timer);\n  };\n\n  //   appendAnswer = (val) => {\n  //     if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n  //     else this.inputAnswer.value += `${val}`;\n  //     this.click.play();\n  //   };\n\n  reset = () => {\n    this.props.reset();\n    this.props.history.push('/math-race/setup');\n  };\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answer, player.question, 'questions', player.questions);\n    let seperator = '';\n    seperator = player.questiontype.type === 'TIMEHRS+-' ? ':' : seperator;\n    seperator = player.questiontype.type === 'TIME+-' ? ':' : seperator;\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          {player.questiontype.testmode ? 'Next Question' : Utils.getDisplaySuccessMessage()}\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {`${Utils.getDisplayWrongMessage()}`}\n          <br /> {`It's ${player.answer}`}\n        </div>\n        <div ref={this.retryRef} className={[Classes.DisplayMessage, Classes.Retry].join(' ')}>\n          {`${Utils.getDisplayRetryMessage()}`}\n          <br /> {`attempt #${this.state.attempts + 1}`}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[Classes.SingleplayerSection].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.reset} tabIndex={0} onKeyPress={this.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <div className=\"w3-light-grey w3-round\">\n            <div className=\"w3-container w3-round ColorTheme\" style={{ width: `${player.points * (100 / +player.questiontype.points)}vw` }}>\n              <span className={Classes.ProgressBar}>{`${player.points}/${player.questiontype.points}`}</span>\n            </div>\n          </div>\n          {/* <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '2s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          /> */}\n        </div>\n        <div className={Classes.QuestionBar}>\n          {/* <div>\n            <span className={[this.sectionTheme()].join(' ')}>\n              <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n            </span>\n            <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n              <span className={['fa-stack', Classes.Score].join(' ')}>\n                <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                  {player.points}\n                </strong>\n              </span>\n              <div>\n                <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                  <i className=\"fa fa-window-close\" />\n                </a>\n              </div>\n            </span>\n          </div> */}\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <div ref={this.questionRef} className={Classes.Question}>\n            <CSSTransition classNames=\"question\" timeout={200}>\n              <div>\n                <span style={{ display: 'inline-block', fontSize: '2.3em', paddingBottom: '20px' }} dangerouslySetInnerHTML={{ __html: this.state.question }} />\n                <span ref={this.answerRef} className={Classes.NextAnswer} dangerouslySetInnerHTML={{ __html: this.state.answer }} />\n              </div>\n            </CSSTransition>\n\n            <div className={Classes.Refresh}>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 || player.questiontype.testmode ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.prevQuestion}\n                tabIndex={0}\n                onKeyPress={this.prevQuestion}\n              >\n                <i className=\"fa fa-long-arrow-left\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 || player.questiontype.testmode ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.nextQuestion}\n                tabIndex={0}\n                onKeyPress={this.nextQuestion}\n              >\n                <i className=\"fa fa-long-arrow-right\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: player.questiontype.delay === 0 || player.questiontype.testmode ? 'none' : 'flex' }}\n                role=\"button\"\n                onClick={this.restart}\n                tabIndex={0}\n                onKeyPress={this.restart}\n              >\n                <i className=\"fa fa-refresh\" />\n              </a>\n              <a\n                className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n                style={{ display: 'flex' }}\n                role=\"button\"\n                onClick={() => this.setState({ closedisplay: true })}\n                tabIndex={0}\n                onKeyPress={() => this.setState({ closedisplay: true })}\n              >\n                <i className=\"fa fa-window-close\" />\n              </a>\n            </div>\n            <div className={Classes.Answer}>\n              <AnswerInput\n                resetAnswer={(e) => {\n                  this.resetAnswer = e;\n                }}\n                focusAnswer={(e) => {\n                  this.focusAnswer = e;\n                }}\n                seperator={seperator}\n                goClick={this.goClick}\n              />\n              {/* <input\n                ref={(e) => {\n                  this.inputAnswer = e;\n                }}\n                inputMode=\"numeric\"\n                onKeyDown={this._handleKeyDown}\n                type=\"text\"\n                maxLength=\"7\"\n                className={['w3-btn', 'w3-round-large'].join(' ')}\n              /> */}\n            </div>\n          </div>\n        </div>\n        {/* <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'none' : 'block' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer('.')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            .\n          </button>\n          <button\n            style={{ display: ['TIMEHRS+-'].includes(player.questiontype.type) ? 'block' : 'none' }}\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={() => this.appendAnswer(':')}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}\n          >\n            :\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno, isCorrect) => dispatch(ReducerActions.nextQuestion(playerno, isCorrect)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  win: (playerno, iscorrect) => dispatch(ReducerActions.win(playerno, iscorrect)),\n  complete: () => dispatch(ReducerActions.complete()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerSection);\n","import React, { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport SingleplayerSection from '../SingleplayerSection/SingleplayerSection';\nimport * as Classes from './SingleplayerWrapper.module.css';\n\nclass SingleplayerWrapper extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const player = this.props.players[0];\n    return (\n      <div className={Classes.Race}>\n        <SingleplayerSection history={this.props.history} key={player.id} playerno={`${player.id}`} />\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleplayerWrapper);\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Race from '../../components/Race/Race';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport MultiplayerSetup from '../../components/MultiplayerSetup/MultiplayerSetup';\nimport MultiplayerSection from '../../components/MultiplayerSection/MultiplayerSection';\nimport * as Classes from './RaceWrapper.module.css';\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\nimport DrawArea from '../../components/DrawArea/DrawArea';\nimport PlayerSelection from '../../components/PlayerSelection/PlayerSelection';\nimport MultiplayerWrapper from '../../components/MultiplayerWrapper/MultiplayerWrapper';\nimport SingleplayerSetup from '../../components/SingleplayerSetup/SingleplayerSetup';\nimport SingleplayerWrapper from '../../components/SingleplayerWrapper/SingleplayerWrapper';\n\nclass RaceWrapper extends Component {\n  constructor(props) {\n    super(props);\n    // console.log('[Racewrapper] constructor');\n    this.state = {};\n\n    this.props.reset();\n    // const questiontype = {\n    //     type: '+-',\n    //     nos: 4,\n    //     digits: 3,\n    //     decimals: 0,\n    // };\n    // this.props.init('Nanna', 'Hasana', questiontype);\n    // this.props.start();\n  }\n\n  shouldComponentUpdate(nextProps, newState) {\n    // console.log('[RaceWrapper] shouldComponentUpdate', !this.props.players && nextProps.players);\n    return (!this.props.players && nextProps.players) || this.props.starttime !== nextProps.starttime || this.props.endtime !== nextProps.endtime;\n    // return true;\n  }\n\n  render() {\n    // console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n    return (\n      <Fragment>\n        <Route path=\"/math-race\" exact component={PlayerSelection} />\n\n        <Route path=\"/math-race/setup\" exact render={(props) => (this.props.multiplayer ? <MultiplayerSetup {...props} /> : <SingleplayerSetup {...props} />)} />\n        <Route path=\"/math-race/play\" exact render={(props) => (this.props.multiplayer ? <MultiplayerWrapper {...props} /> : <SingleplayerWrapper {...props} />)} />\n        <Route path=\"/math-race/complete\" exact render={(props) => <RaceComplete {...props} players={this.props.players} reset={this.props.reset} />} />\n        {/* <Route path=\"/math-race/setup\" exact component={RaceSetup2} />\n        <Route path=\"/math-race/complete\" render={(props) => (<RaceComplete players={this.props.players} reset={this.props.reset} />)} /> */}\n        {/* <div className={Classes.Race}> */}\n\n        {/* <Route path=\"/math-race/play\" exact component={RacePlayerSelection} /> */}\n\n        {/* </div> */}\n      </Fragment>\n    );\n\n    // if (!this.props.starttime)\n    //   return (\n    //     <div className={Classes.Race}>\n    //       <Route path=\"/math-race\" exact component={RaceSetup} />\n    //     </div>\n    //   );\n    // else if (this.props.endtime)\n    //   return (\n    //     <div className={Classes.Race}>\n    //       <Route path=\"/math-race/complete\" render={(props) => (<RaceComplete players={this.props.players} reset={this.props.reset} />)} />\n    //     </div>\n    //   );\n\n    // const players = this.props.players.map((player, index) => (player.name ? <PlayerSection key={player.id} playerno={`${player.id}`} /> : <Fragment key={player.id} />));\n    // const players = this.props.players.map((player, index) => (player.name ? <PlayerSection key={player.id} playerno={`${player.id}`} /> : <DrawArea />));\n    // console.log('[Race] render', this.props.players);\n    // return (\n    // <div\n    // className={Classes.Race}\n    // style={{\n    //   backgroundImage: `url(${process.env.PUBLIC_URL}/images/underwater.png)`,\n    // }}\n    // >\n    // {players}\n    // {/* <div className={Classes.Divider}/> */}\n    // </div>\n    // );\n    // return (\n    //         <Race players={this.props.players} />\n    // )\n  }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  multiplayer: state.game.multiplayer,\n  starttime: state.game.starttime,\n  endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper);\n","// import { null } from 'mathjs';\nimport React, { Component } from 'react';\nimport firebase from './Config/Firebase';\nimport * as Utils from './Utils/QuestionGenerator';\nimport axios from './axios-firebase';\n\n// import QuestionsDataService from './QuestionsDataService'\n\nclass Temp extends Component {\n  state = {\n    questions: null,\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const questions = [];\n    const res = await axios.get('/questions.json');\n    const { data } = await res;\n\n    // axios\n      // .get('/questions.json')\n      // .then((response) => {\n        console.log(data.Word);\n        data.Word.forEach((item, idx) => {\n          // const question = item;\n          questions.push({ id: idx, ...item });\n          console.log(questions);\n        });\n\n        questions.forEach((question, idx) => {\n            const q = question.question;\n            const params = {};\n            for (let i = 0; ; i += 1) {\n              if (!(i in question)) break;\n              params[i] = question[i];\n            }\n      \n            Object.keys(params)\n              .sort()\n              .forEach((key) => {\n                const params1 = { ...params };\n                const param = params[key];\n                if (param.indexOf('{val}') > -1) params1.val = Utils.randomIntFromInterval(10, 99);\n                const substitute = Utils.replaceValues(param, params1);\n                const evalstr = Utils.evaluate(substitute);\n                params[key] = evalstr;\n              });\n            const answer = Utils.evaluate(Utils.replaceValues(question.answer, params));\n            const questionstr = Utils.replaceValues(question.question, params);\n            const question1 = { answer: answer, question: questionstr };\n            questions[idx] = { ...question, ...params };\n            console.log(question1);\n        \n          // const snapshot = db.collection('/questions').startAfter(2).limit(1);\n          // const item = await snapshot.get();\n          // const questions = [];\n          // // collections.docs.forEach((item) => {\n          //   const question = item.data();\n          //   questions.push({ id: item.id, ...question });\n          //   // Object.keys(question).forEach((key) => {\n          //   //   console.log(`${key} - ${question[key]}`);\n          //   // });\n          // // });\n          console.log(questions);\n          this.setState({ questions: questions });\n          // Object.keys(question).forEach((key) => {\n          //   console.log(`${key} - ${question[key]}`);\n          // });\n        // });\n        // dispatch(setIngredients(response.data))\n      })\n      // .catch((error) => {\n      //   console.log(error);\n      //   // dispatch(fetchIngredientsFailed());\n      // });\n  // }\n  // async componentDidMount() {\n  //   console.log('Loading...');\n  //   const db = firebase.firestore();\n  //   const firebaseDb = db.collection('/questions');\n  //   console.log(firebaseDb);\n  //   const snapshot = db.collection('/questions');\n  //   const collections = await snapshot.get();\n  //   const questions = [];\n  //   collections.docs.forEach((item) => {\n  //     const question = item.data();\n  //     questions.push({ id: item.id, ...question });\n  //     // Object.keys(question).forEach((key) => {\n  //     //   console.log(`${key} - ${question[key]}`);\n  //     // });\n  //   });\n   \n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n    // const snapshot = await firebase.collection('questions').get();\n    // const questions = [];\n    // snapshot.docs.forEach((doc) => {\n    //   questions.push(doc.data());\n    //   console.log(doc.id, '=>', doc.data());\n    // });\n    // this.setState({ questions: questions });\n    // console.log(`Loaded${this.state.questions[0]}`);\n    // // const firebaseDb = firebase.collection('/questions')\n    // // firebaseDb.settings({\n    // //   timestampsInSnapshots: true,\n    // // });\n    // // const snapshot = await firebaseDb.collection('questions').get();\n    // // snapshot.forEach((doc) => {\n    // //   console.log(doc);\n    // // });\n  }\n\n  render() {\n    if (!this.state.questions) return <p>Loading....</p>;\n    else {\n      const wrapper = this.state.questions.map((question, idx) => {\n        return (\n          <p key={question.id}>\n            {question.question} - {question.answer}\n          </p>\n        );\n      });\n      return <div>{wrapper}</div>;\n    }\n  }\n}\n\nexport default Temp;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper';\nimport Temp from '../temp';\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n      {/* <Temp /> */}\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\nimport DrawArea from './components/CanvasDraw/DrawArea';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n    // <DrawArea />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\n// import { null } from 'mathjs';\nimport * as actionTypes from '../actionTypes';\n\nconst questiontype = {\n  type: '+',\n  nos: 4,\n  digits: 2,\n  decimals: 0,\n  points: 10,\n  tens: 'Y',\n  delay: 0,\n  inwords: false,\n  level: 1,\n  HR24: 'N',\n  testmode: false,\n};\nconst player = {\n  name: null,\n  points: 0,\n  wrong: 0,\n  question: null,\n  answer: null,\n  answerresult: null,\n  questiontype: { ...questiontype },\n};\nconst initialState = {\n  starttime: null,\n  endtime: null,\n  // questiontype: {\n  //     type: '+-',\n  //     nos: 3,\n  //     digits: 3,\n  //     decimals: 0,\n  //     points:10,\n  // },\n  multiplayer: false,\n  players: [\n    { id: 0, ...player },\n    { id: 1, ...player },\n  ],\n  wordquestions: null,\n};\n\n// eslint-disable-next-line default-param-last\nconst reducer = (state = initialState, action) => {\n  // console.log(action.type)\n  // console.log('[reducer]', action.type);\n  let players = null;\n  switch (action.type) {\n    case actionTypes.SET_MULTIPLAYER:\n      return {\n        ...state,\n        players: [...action.players],\n        multiplayer: action.multiplayer,\n      };\n    case actionTypes.RESET:\n      return {\n        ...state,\n        starttime: null,\n        endtime: null,\n        // players: null,\n      };\n    case actionTypes.LOAD_QUESTIONS: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        wordquestions: action.questions,\n      };\n    case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        starttime: new Date(),\n        // questiontype: action.questiontype,\n        players: [...action.players],\n      };\n    // case actionTypes.START: // players:[{question,answer}]\n    //     players = [...state.players];\n    //     action.players.forEach((player, index) => {\n    //         players[index] = { ...players[index], ...player }\n    //     });\n    //     return {\n    //         ...state, starttime: new Date(), players: players,\n    //     };\n    case actionTypes.CORRECT:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      if (!action.isCorrect) players[action.playerno].wrong += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].questions = action.questions;\n      players[action.playerno].answers = action.answers;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'CORRECT';\n      players[action.playerno].questionno = action.questionno;\n      players[action.playerno].wordquestionsindexs = action.wordquestionsindexs;\n      return {\n        ...state,\n        players: [...players],\n      };\n    case actionTypes.WRONG:\n      players = [...state.players];\n      players[action.playerno].wrong += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].questions = action.questions;\n      players[action.playerno].answers = action.answers;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].questionno = action.questionno;\n      players[action.playerno].answerresult = 'WRONG';\n      return {\n        ...state,\n        players: players,\n      };\n    case actionTypes.WIN:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      if (!action.isCorrect) players[action.playerno].wrong += 1;\n      return {\n        ...state,\n        // endtime: new Date(),\n        players: [...players],\n      };\n    case actionTypes.COMPLETE:\n      // players = [...state.players];\n      // players[action.playerno].points += 1;\n      return {\n        ...state,\n        endtime: new Date(),\n        // players: [...players],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"MultiplayerSetup_BtnGo__N6py2\",\"BtnNumber\":\"MultiplayerSetup_BtnNumber__1ttzk\",\"MultiplayerSetup\":\"MultiplayerSetup_MultiplayerSetup__1tKOS\",\"Options\":\"MultiplayerSetup_Options__37vVT\",\"Players\":\"MultiplayerSetup_Players__3vjYC\",\"ExtraWide\":\"MultiplayerSetup_ExtraWide__Ef-1Y\",\"Race\":\"MultiplayerSetup_Race__qI4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"MultiplayerSection__0__3FQ2z\",\"_1\":\"MultiplayerSection__1__1cAKq\",\"PlayerCharacter\":\"MultiplayerSection_PlayerCharacter__3QSp1\",\"QuestionBar\":\"MultiplayerSection_QuestionBar__XK5hd\",\"question-enter\":\"MultiplayerSection_question-enter__2KMpy\",\"question-enter-active\":\"MultiplayerSection_question-enter-active__1UzVo\",\"question-exit\":\"MultiplayerSection_question-exit__242UT\",\"question-exit-active\":\"MultiplayerSection_question-exit-active__2s6OB\",\"Question\":\"MultiplayerSection_Question__J6kWx\",\"Close\":\"MultiplayerSection_Close__1D6se\",\"Refresh\":\"MultiplayerSection_Refresh__2Eo9H\",\"ButtonBar\":\"MultiplayerSection_ButtonBar__svEE5\",\"Answer\":\"MultiplayerSection_Answer__2b1su\",\"BtnGo\":\"MultiplayerSection_BtnGo__33T6Z\",\"BtnNumber\":\"MultiplayerSection_BtnNumber__2X92x\",\"HideQuestion\":\"MultiplayerSection_HideQuestion__2-oOJ\",\"hide-question\":\"MultiplayerSection_hide-question___SqoQ\",\"ShowQuestion\":\"MultiplayerSection_ShowQuestion__ifrF6\",\"show-question\":\"MultiplayerSection_show-question__2_CVP\",\"DisplayMessage\":\"MultiplayerSection_DisplayMessage__ztVg3\",\"MessageAnimate\":\"MultiplayerSection_MessageAnimate__2LgMl\",\"hide-animation\":\"MultiplayerSection_hide-animation__-RAXp\",\"Correct\":\"MultiplayerSection_Correct__3QQZL\",\"Wrong\":\"MultiplayerSection_Wrong__nTh0d\",\"points0\":\"MultiplayerSection_points0__3OZAD\",\"Ò\":\"MultiplayerSection_Ò__22fnT\",\"points1\":\"MultiplayerSection_points1__3nLOM\",\"points2\":\"MultiplayerSection_points2__fY2ls\",\"points3\":\"MultiplayerSection_points3__ZLtxp\",\"points4\":\"MultiplayerSection_points4__2laE2\",\"points5\":\"MultiplayerSection_points5__3hRkC\",\"points6\":\"MultiplayerSection_points6__1lFrV\",\"points7\":\"MultiplayerSection_points7__3boD6\",\"points8\":\"MultiplayerSection_points8__Mjm5G\",\"points9\":\"MultiplayerSection_points9__2KgCZ\",\"points10\":\"MultiplayerSection_points10__1RQat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawArea\":\"DrawArea_drawArea__2zm64\",\"drawing\":\"DrawArea_drawing__12Nyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};"],"sourceRoot":""}