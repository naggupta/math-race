{"version":3,"sources":["components/RaceComplete/RaceComplete.module.css","components/RaceSetup/RaceSetup.module.css","UI/DisplayMessage/DisplayMessage.module.css","containers/RaceWrapper/RaceWrapper.module.css","components/PlayerSection/PlayerSection.module.css","UI/Backdrop/Backdrop.module.css","UI/Modal/Modal.module.css","serviceWorker.js","store/game/actions/actionTypes.js","Utils/NumberToEnglish.js","Utils/QuestionGenerator.js","store/game/actions/actions.js","components/RaceSetup/RaceSetup.js","UI/DisplayMessage/DisplayMessage.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","sounds/success.mp3","sounds/wrong.mp3","sounds/movingfish.mp3","sounds/click.mp3","sounds/claps.mp3","components/PlayerSection/PlayerSection.js","components/RaceComplete/RaceComplete.js","containers/RaceWrapper/RaceWrapper.js","Config/Firebase.js","temp.js","Layout/Layout.js","App.js","store/game/actions/reducers/reducers.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RESET","START","CORRECT","WRONG","WIN","COMPLETE","shouldPrefixWithOne","n","shouldHyphenate","numbers","number","text","numberToEnglish","val","prefixNum","remainder","closestSmallerNumber","closestSmallerNumberText","options","andForBritish","ands","comma","commas","and","words","numToConvert","parseInt","isNaN","isFinite","Math","floor","trim","generateQuestion","questiontype","type","nos","digits","inwords","generatePlusMinusQuestion","question","answer","currentnumber","decimals","symbols","totaldigits","i","temptype","sign","randomSign","includes","push","tonumber","fromnumber","randomIntFromInterval","toword","min","max","random","signs","split","length","reset","actionTypes","RaceSetup","props","handleSubmit","e","preventDefault","form","player0","player1","digits0","numbers0","decimals0","type0","points0","inwords0","digits1","numbers1","decimals1","type1","points1","inwords1","questiontype0","value","points","questiontype1","start","players","name","this","playersetup","map","index","className","Classes","style","display","onChange","setState","currentTarget","defaultChecked","onSubmit","ref","textAlign","join","PureComponent","connect","game","dispatch","playername1","playername2","questiontype2","id","wrong","Utils","answerresult","ReducerActions","DisplayMessage","Backdrop","show","classes","onClick","clicked","onKeyPress","role","tabIndex","Modal","modelClosed","transform","opacity","children","PlayerSection","success","Howl","src","successSound","volume","wrongSound","click","clickSound","movingfish","movingFishSound","claps","clapsSound","closedisplay","buttonTheme","playerno","sectionTheme","goClick","player","correctref","correctRef","current","questionRef","wrongref","wrongRef","inputAnswer","play","win","setTimeout","complete","classList","remove","ShowQuestion","add","MessageAnimate","HideQuestion","nextQuestion","wrongAnswer","appendAnswer","slice","React","createRef","messagedisplay","Correct","margin","Wrong","_0","_1","PlayerCharacter","position","transition","left","alt","_2","height","width","process","QuestionBar","PlayerName","Score","color","Close","Question","fontSize","dangerouslySetInnerHTML","__html","onKeyDown","onKeyUp","maxLength","Answer","ButtonBar","data-playerno","BtnNumber","dataset","BtnGo","getstate","RaceComplete","winner","reverse","score","RaceWrapper","nextProps","newState","starttime","endtime","backgroundImage","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Layout","path","component","App","initialState","reducer","action","Date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87e14428.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"RaceComplete_Score__1hh63\",\"RaceComplete\":\"RaceComplete_RaceComplete__3X8Bw\",\"ScoreLabel\":\"RaceComplete_ScoreLabel__UTyaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnGo\":\"RaceSetup_BtnGo__1olAv\",\"BtnNumber\":\"RaceSetup_BtnNumber__1nWwX\",\"RaceSetup\":\"RaceSetup_RaceSetup__2MTWI\",\"Players\":\"RaceSetup_Players__3Mw1p\",\"Options\":\"RaceSetup_Options__3gKGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayMessage\":\"DisplayMessage_DisplayMessage__qsfDJ\",\"Correct\":\"DisplayMessage_Correct__2Iu6S\",\"Wrong\":\"DisplayMessage_Wrong__2oP-U\",\"hide-animation\":\"DisplayMessage_hide-animation__2oQFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Race\":\"RaceWrapper_Race__273Aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_0\":\"PlayerSection__0__16GFq\",\"_1\":\"PlayerSection__1__1EQA8\",\"PlayerCharacter\":\"PlayerSection_PlayerCharacter__118mI\",\"QuestionBar\":\"PlayerSection_QuestionBar__K1Czx\",\"Question\":\"PlayerSection_Question__3Ac7J\",\"Close\":\"PlayerSection_Close__1gOHI\",\"ButtonBar\":\"PlayerSection_ButtonBar__2tk7H\",\"Answer\":\"PlayerSection_Answer__1JQjr\",\"BtnGo\":\"PlayerSection_BtnGo__No7ze\",\"BtnNumber\":\"PlayerSection_BtnNumber__kbZb7\",\"HideQuestion\":\"PlayerSection_HideQuestion__2Rf4I\",\"hide-question\":\"PlayerSection_hide-question___kcKy\",\"ShowQuestion\":\"PlayerSection_ShowQuestion__PJYlO\",\"show-question\":\"PlayerSection_show-question__1c6wT\",\"DisplayMessage\":\"PlayerSection_DisplayMessage__3hzSb\",\"MessageAnimate\":\"PlayerSection_MessageAnimate__1NLY0\",\"hide-animation\":\"PlayerSection_hide-animation__1WCrl\",\"Correct\":\"PlayerSection_Correct__3LiMU\",\"Wrong\":\"PlayerSection_Wrong__l9GG-\",\"points0\":\"PlayerSection_points0__3RGGb\",\"Ò\":\"PlayerSection_Ò__iN7sG\",\"points1\":\"PlayerSection_points1__18mF8\",\"points2\":\"PlayerSection_points2__2M6od\",\"points3\":\"PlayerSection_points3__X6CcJ\",\"points4\":\"PlayerSection_points4__3bNiR\",\"points5\":\"PlayerSection_points5__YsW7z\",\"points6\":\"PlayerSection_points6__2GBKu\",\"points7\":\"PlayerSection_points7__2GXH2\",\"points8\":\"PlayerSection_points8__2T4s2\",\"points9\":\"PlayerSection_points9__3Vkzb\",\"points10\":\"PlayerSection_points10__3q6zW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\",\"Close\":\"Modal_Close__2D0xG\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n      // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = '/math-race/service-worker.js'; \n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service '\n                + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        // eslint-disable-next-line no-param-reassign\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all '\n                    + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.',\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n","export const RESET = 'RESET';\n// export const INIT = 'INIT';\nexport const START = 'START';\nexport const CORRECT = 'CORRECT';\nexport const WRONG = 'WRONG';\nexport const WIN = 'WIN'; \nexport const COMPLETE = 'COMPLETE'; \n","/* eslint-disable prefer-const */\n/* eslint-disable no-restricted-syntax */\nconst shouldPrefixWithOne = (n) => {\n  return n >= 100;\n};\n\n/**\n * Checks if a certain number should be joined with hyphens\n * e.g. \"ninety-nine\" versus \"one hundred one\"\n *\n * Examples:\n * _shouldHyphenate(10); // returns False\n * _shouldHyphenate(21); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\nconst shouldHyphenate = (n) => {\n  return n >= 20 && n <= 99;\n};\n\nconst numbers = [\n  { number: 1000000000000, text: 'trillion' },\n  { number: 1000000000, text: 'billion' },\n  { number: 1000000, text: 'million' },\n  { number: 1000, text: 'thousand' },\n  { number: 100, text: 'hundred' },\n  { number: 90, text: 'ninety' },\n  { number: 80, text: 'eighty' },\n  { number: 70, text: 'seventy' },\n  { number: 60, text: 'sixty' },\n  { number: 50, text: 'fifty' },\n  { number: 40, text: 'forty' },\n  { number: 30, text: 'thirty' },\n  { number: 20, text: 'twenty' },\n  { number: 19, text: 'nineteen' },\n  { number: 18, text: 'eighteen' },\n  { number: 17, text: 'seventeen' },\n  { number: 16, text: 'sixteen' },\n  { number: 15, text: 'fifteen' },\n  { number: 14, text: 'fourteen' },\n  { number: 13, text: 'thirteen' },\n  { number: 12, text: 'twelve' },\n  { number: 11, text: 'eleven' },\n  { number: 10, text: 'ten' },\n  { number: 9, text: 'nine' },\n  { number: 8, text: 'eight' },\n  { number: 7, text: 'seven' },\n  { number: 6, text: 'six' },\n  { number: 5, text: 'five' },\n  { number: 4, text: 'four' },\n  { number: 3, text: 'three' },\n  { number: 2, text: 'two' },\n  { number: 1, text: 'one' },\n  { number: 0, text: 'zero' },\n];\n\nconst andWord = 'and';\n\nconst numberToEnglish = (val, options = {}) => {\n  const andForBritish = options.ands || false;\n\n  const comma = options.commas ? ',' : '';\n  const and = andForBritish ? `${andWord} ` : '';\n  let words = '';\n  let prefixNum;\n  let remainder;\n  let closestSmallerNumber;\n  let closestSmallerNumberText;\n\n  let numToConvert = parseInt(val, 10);\n\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(numToConvert)) {\n    return 'not a number';\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (!isFinite(numToConvert)) {\n    return 'infinity';\n  }\n\n  if (numToConvert < 0) {\n    words += 'negative ';\n    numToConvert *= -1;\n  }\n\n  // Search list of numbers for closest smaller number.\n  // numToConvert will be written in terms of this number.\n  for (const { number, text } of numbers) {\n    if (numToConvert === number) {\n      if (shouldPrefixWithOne(number)) {\n        words += 'one ';\n      }\n      words += text;\n      return words;\n    }\n\n    if (numToConvert > number) {\n      closestSmallerNumber = number;\n      closestSmallerNumberText = text;\n      break;\n    }\n  }\n\n  // How many 'closestSmallerNumber's can numToConvert be grouped into?\n  // e.g. five 'thousand'.\n  // eslint-disable-next-line prefer-const\n  prefixNum = Math.floor(numToConvert / closestSmallerNumber);\n  if (prefixNum !== 1 || shouldPrefixWithOne(closestSmallerNumber)) {\n    words += `${numberToEnglish(prefixNum, options)} `;\n  }\n\n  words += closestSmallerNumberText;\n\n  remainder = numToConvert - prefixNum * closestSmallerNumber;\n  if (remainder > 0 && shouldHyphenate(closestSmallerNumber)) {\n    words += '-';\n  } else if (closestSmallerNumber >= 1000 && remainder > 0 && remainder < 100) {\n    words += `${comma} ${and}`;\n  } else if (closestSmallerNumber >= 1000 && remainder > 0) {\n    words += `${comma} `;\n  } else if (closestSmallerNumber === 100 && remainder > 0) {\n    words += ` ${and}`;\n  } else {\n    words += ' ';\n  }\n\n  if (remainder > 0) {\n    words += numberToEnglish(remainder, options);\n  }\n\n  return words.trim();\n};\n\nexport default numberToEnglish;\n","import * as mathjs from 'mathjs';\nimport numberToEnglish from './NumberToEnglish';\n\nexport const generateQuestion = (questiontype) => {\n  const { type, nos, digits, inwords } = questiontype;\n  if (type === '+-' || type === '+-x') return generatePlusMinusQuestion(questiontype);\n\n  return {\n    question: '', // '2+3',\n    answer: '', // mathjs.evaluate('2+3'),\n  };\n};//\n\n// export const generateMultiQuestion = (questiontype) => {\n//   let currentnumber = 0;\n//   let question = '';\n//   let answer = 0;\n//   const { type, nos, digits, inwords } = questiontype;\n//   let { decimals = 0 } = questiontype;\n//   if (inwords) decimals = 0;\n//   const symbols=[];\n\n//   const totaldigits = digits + decimals;\n//   for (let i = 0; i < nos; i += 1) {\n//     const temptype = type;\n//     let sign = '+';\n//     if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n//     else if ((answer >= 100 || answer <= 10) && type === '+-x') sign = randomSign('+-');\n//     else if (i>1 && type === '+-x' && !symbols.includes('x') && answer>9 && answer<100) sign = 'x'\n//     else sign = randomSign(temptype);\n//     // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n//     symbols.push(sign);\n\n//     let tonumber = 10 ** totaldigits - 1;\n//     let fromnumber = 10 ** (totaldigits - 1) + 1;\n//     if (sign === 'x') {\n//       fromnumber = 2;\n//       tonumber = 9;\n//     } else if (sign === '-' && tonumber > answer) tonumber = answer;\n//     // console.log(`${fromnumber},${tonumber}`)\n//     currentnumber = randomIntFromInterval(fromnumber, tonumber);\n//     if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n//     else if (sign === 'x') answer *= currentnumber;\n//     if (!inwords) question = `${question} ${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n//     else if (inwords) {\n//       const toword = numberToEnglish(currentnumber);\n//       question = `${question}${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' u><i>times</i></u> '}${toword}`;\n//     }\n//   }\n//   answer /= decimals === 0 ? 1 : 10 ** decimals;\n//   console.log(`${question} ? ${answer}`);\n//   return {\n//     question: question,\n//     answer: answer,\n//   };\n// }\n\nexport const generatePlusMinusQuestion = (questiontype) => {\n  let currentnumber = 0;\n  let question = '';\n  let answer = 0;\n  const { type, nos, digits, inwords } = questiontype;\n  let { decimals = 0 } = questiontype;\n  if (inwords) decimals = 0;\n  const symbols = [];\n\n  const totaldigits = digits + decimals;\n  for (let i = 0; i < nos; i += 1) {\n    const temptype = type;\n    let sign = '+';\n    if (i === 0 || answer < 10 ** (totaldigits - 1)) sign = '+';\n    else if ((answer >= 100 || answer <= 10) && type === '+-x' && digits > 1) sign = randomSign('+-');\n    else if (answer > 10 && type === '+-x' && digits === 1) sign = randomSign('+-');\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer > 9 && answer < 100 && digits > 1) sign = 'x';\n    else if (i > 1 && type === '+-x' && !symbols.includes('x') && answer < 10 && digits === 1) sign = 'x';\n    else sign = randomSign(temptype);\n    // const sign = i === 0 || answer < 10 ** (totaldigits - 1) ? '+' : randomSign(temptype);\n    symbols.push(sign);\n\n    let tonumber = 10 ** totaldigits - 1;\n    let fromnumber = 10 ** (totaldigits - 1) + 1;\n    if (sign === 'x') {\n      fromnumber = 2;\n      tonumber = 9;\n    } else if (sign === '-' && tonumber > answer) tonumber = answer;\n    // console.log(`${fromnumber},${tonumber}`)\n    currentnumber = randomIntFromInterval(fromnumber, tonumber);\n    if (sign === '+' || sign === '-') answer += (sign === '+' ? 1 : -1) * currentnumber;\n    else if (sign === 'x') answer *= currentnumber;\n    if (!inwords) question = `${question} ${i > 0 ? sign : ''} ${currentnumber / (decimals === 0 ? 1 : 10 ** decimals)}`;\n    else if (inwords) {\n      const toword = numberToEnglish(currentnumber);\n      question = `${question}${i <= 0 ? '' : sign === '+' ? ' <u><i>plus</i></u> ' : sign === '-' ? ' <u><i>minus</i></u> ' : ' <u><i>times</i></u> '}${toword}`;\n    }\n  }\n  answer /= decimals === 0 ? 1 : 10 ** decimals;\n  console.log(`${question} ? ${answer}`);\n  return {\n    question: question,\n    answer: answer,\n  };\n};\n\nconst randomIntFromInterval = (min, max) => {\n  // min and max included\n  // if (decimals === 0)\n  return Math.floor(Math.random() * (max - min + 1) + min);\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\n// const randomSign = () => {\n//   return Math.round(Math.random()) * 2 - 1;\n// };\n\nconst randomSign = (type) => {\n  const signs = type.split('');\n  const randval = randomIntFromInterval(0, signs.length - 1);\n  return signs[randval];\n  // else {\n  //     const decimalnumber = (10 ** decimals);\n  //     console.log(`${(max * decimalnumber)},${(min * decimalnumber) + 1}`)\n  //     return Math.floor(Math.random() * ((max * decimalnumber) - (min * decimalnumber) + 1) + (min * decimalnumber)) / decimalnumber;\n  // }\n};\n\nconst replaceString = (str, ...args) => {\n  let base = str;\n  for (let i = 0; i < args.length; i += 1)\n    base = base.replace(`{${i}}`, args[i])\n\n  return base;\n    // const replacements = { '{NAME}': 'Mike', '{AGE}': '26', '{EVENT}': '20' };\n  //   let str = 'My Name is {NAME} and my age is {AGE}.';\n\n  // str = str.replace(/{\\w+}/g, (all) => {\n  //   return replacements[`{${all}}`] || all;\n  // });\n};\n","import * as actionTypes from './actionTypes';\nimport * as Utils from '../../../Utils/QuestionGenerator';\n\nexport const reset = () => {\n  return {\n    type: actionTypes.RESET,\n  };\n};\n\nexport const start = (\n  playername1,\n  playername2,\n  questiontype1,\n  questiontype2,\n) => {\n  return {\n    type: actionTypes.START,\n    // questiontype: questiontype,\n    players: [\n      { id: 0, name: playername1, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype1), answerresult: '', questiontype: questiontype1 },\n      { id: 1, name: playername2, points: 0, wrong: 0, ...Utils.generateQuestion(questiontype2), answerresult: '', questiontype: questiontype2 },\n    ],\n  };\n};\n\n// export const start = () => {\n//     return (dispatch, getstate) => {\n//         const { nos, digits, decimals } = getstate().game.questiontype;\n//         dispatch({\n//             type: actionTypes.START,\n//             players: [Utils.generateQuestion(nos, digits, decimals), Utils.generateQuestion(nos, digits, decimals)],\n//         })\n//     }\n// };\n\nexport const nextQuestion = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.CORRECT,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype),\n    });\n  };\n};\n\nexport const wrongAnswer = (playerno) => {\n  return (dispatch, getstate) => {\n    // const { nos, digits, decimals } = getstate().game.questiontype;\n    dispatch({\n      type: actionTypes.WRONG,\n      playerno: playerno,\n      ...Utils.generateQuestion(getstate().game.players[playerno].questiontype),\n    });\n  };\n};\n\nexport const complete = () => {\n  return {\n    type: actionTypes.COMPLETE,\n  };\n};\n\nexport const win = (playerno) => {\n  return {\n    playerno: playerno,\n    type: actionTypes.WIN,\n  };\n};\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport * as Classes from './RaceSetup.module.css';\n\nclass RaceSetup extends PureComponent {\n  constructor(props) {\n    super(props);\n    const players = [(props.players && props.players[0].name) || 'Hasana', (props.players && props.players[1].name) || ''];\n    const type = [(props.players && props.players[0].questiontype.type) || '+-', (props.players && props.players[1].questiontype.type) || '+-'];\n\n    this.state = {\n      type0: type[0],\n      type1: type[1],\n      player0: players[0],\n      player1: players[1],\n    };\n\n    console.log('RaceSetup[constructor]', this.state);\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[RaceSetup] shouldComponentUpdate', this.props, nextProps);\n  //     return true;\n  // }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     return true;\n  // }\n\n  // startGame = () => {\n  //     const questiontype = {\n  //         type: '+-',\n  //         nos: 3,\n  //         numbers: 2,\n  //         decimals: 0,\n  //         points: 10,\n\n  //     };\n  //     this.props.start('Hasana', 'Nanna', questiontype);\n  // }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { player0, player1, digits0, numbers0, decimals0, type0, points0, inwords0, digits1, numbers1, decimals1, type1, points1, inwords1 } = this.form;\n\n    const questiontype0 = {\n      type: type0.value,\n      nos: +numbers0.value,\n      digits: +digits0.value,\n      decimals: +decimals0.value,\n      points: +points0.value,\n      inwords: (inwords0.value === 'true'),\n    };\n    const questiontype1 = {\n      type: type1.value,\n      nos: +numbers1.value,\n      digits: +digits1.value,\n      points: +points1.value,\n      decimals: +decimals1.value,\n      inwords: (inwords1.value === 'true'),\n    };\n\n    // console.log(this.form, questiontype0, questiontype1);\n    this.props.start(player0.value, player1.value, questiontype0, questiontype1);\n  };\n\n  // startGame = () => {\n  //     this.props.start();\n  // }\n\n  render() {\n    console.log('[RaceSetup] render');\n\n    const players = [(this.props.players && this.props.players[0].name) || 'Hasana', (this.props.players && this.props.players[1].name) || ''];\n\n    const playersetup = [1, 0].map((index) => {\n      const { name, questiontype } = this.props.players[index];\n      return (\n        <div key={index} className={Classes.RaceSetup}>\n          <div className={Classes.Players}>\n            <div>\n              <h2>{`Player - ${index + 1}`}</h2>\n\n              <div style={{ display: index === 1 ? 'block' : 'none' }}>\n                <input type=\"radio\" name={`player${index}`} value=\"\" onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })} defaultChecked={!players[index]} />\n                <label>None</label>\n              </div>\n\n              <div>\n                <input\n                  type=\"radio\"\n                  name={`player${index}`}\n                  value=\"Bruhathi\"\n                  onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })}\n                  defaultChecked={players[index] === 'Bruhathi'}\n                />\n                <label>Bruhathi</label>\n              </div>\n              <div>\n                <input\n                  type=\"radio\"\n                  name={`player${index}`}\n                  value=\"Hasana\"\n                  onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })}\n                  defaultChecked={players[index] === 'Hasana'}\n                />\n                <label>Hasana</label>\n              </div>\n              <div>\n                <input\n                  type=\"radio\"\n                  name={`player${index}`}\n                  value=\"Krishna\"\n                  onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })}\n                  defaultChecked={players[index] === 'Krishna'}\n                />\n                <label>Krishna</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Nanna\" onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })} defaultChecked={players[index] === 'Nanna'} />\n                <label>Nanna</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`player${index}`} value=\"Amma\" onChange={(e) => this.setState({ [`player${index}`]: e.currentTarget.value })} defaultChecked={players[index] === 'Amma'} />\n                <label>Amma</label>\n              </div>\n            </div>\n            {/* <div><h2>Player1</h2>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Bruhathi\" defaultChecked={player1 === 'Bruhathi'} />\n                        <label>Bruhathi</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Hasana\" defaultChecked={player1 === 'Hasana'} />\n                        <label>Hasana</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Krishna\" defaultChecked={player1 === 'Krishna'} />\n                        <label>Krishna</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Nanna\" defaultChecked={player1 === 'Nanna'} />\n                        <label>Nanna</label>\n                    </div>\n                    <div>\n                        <input type=\"radio\" name=\"player1\" value=\"Amma\" defaultChecked={player1 === 'Amma'} />\n                        <label>Amma</label>\n                    </div>\n                </div> */}\n          </div>\n          <div style={{ display: this.state[`player${index}`] ? 'flex' : 'none' }} className={Classes.Options}>\n            <div className={Classes.ExtraWide}>\n              <h2>Type</h2>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-'} />\n                <label>+-</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`type${index}`} value=\"+-x\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-x'} />\n                <label>+-x</label>\n              </div>\n              {/* <div>\n                <input type=\"radio\" placeholder=\"In words\" name={`type${index}`} value=\"+-W\" onChange={(e) => this.setState({ [`type${index}`]: e.currentTarget.value })} defaultChecked={questiontype.type === '+-W'} />\n                <label>+-(Words)</label>\n              </div> */}\n              {/* <div>\n                        <input type=\"radio\" name=\"type\" value=\"*\" onChange={(e) => this.setState({ type: e.currentTarget.value })} />\n                        <label>X</label>\n                    </div> */}\n            </div>\n            <div style={{ display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n              <h2>Digits</h2>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"1\" defaultChecked={questiontype.digits === 1} />\n                <label>1</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"2\" defaultChecked={questiontype.digits === 2} />\n                <label>2</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`digits${index}`} value=\"3\" defaultChecked={questiontype.digits === 3} />\n                <label>3</label>\n              </div>\n            </div>\n            <div style={{ display: ['+-', '+-x'].includes(this.state[`type${index}`]) ? 'flex' : 'none' }}>\n              <h2>Numbers</h2>\n\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"2\" defaultChecked={questiontype.nos === 2} />\n                <label>2</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"3\" defaultChecked={questiontype.nos === 3} />\n                <label>3</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"4\" defaultChecked={questiontype.nos === 4} />\n                <label>4</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`numbers${index}`} value=\"5\" defaultChecked={questiontype.nos === 5} />\n                <label>5</label>\n              </div>\n            </div>\n            <div style={{ display: this.state[`type${index}`] === '+-' ? 'flex' : 'none' }}>\n              <h2>Decimals</h2>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"0\" defaultChecked={questiontype.decimals === 0} />\n                <label>0</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"1\" defaultChecked={questiontype.decimals === 1} />\n                <label>1</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`decimals${index}`} value=\"2\" defaultChecked={questiontype.decimals === 2} />\n                <label>2</label>\n              </div>\n            </div>\n            <div>\n              <h2>In Words</h2>\n              <div>\n                <input type=\"radio\" name={`inwords${index}`} value=\"true\" defaultChecked={!!questiontype.inwords} />\n                <label>Yes</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`inwords${index}`} value=\"false\" defaultChecked={!questiontype.inwords} />\n                <label>No</label>\n              </div>\n            </div>\n            <div>\n              <h2>Points</h2>\n              {/* <div>\n                        <input type=\"radio\" name={`points${index}`} value=\"1\" defaultChecked={questiontype.points === 1} />\n                        <label>1</label>\n                    </div> */}\n              {/* <div>\n                <input type=\"radio\" name={`points${index}`} value=\"2\" defaultChecked={questiontype.points === 2} />\n                <label>2</label>\n              </div> */}\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"5\" defaultChecked={questiontype.points === 5} />\n                <label>5</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"10\" defaultChecked={questiontype.points === 10} />\n                <label>10</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"15\" defaultChecked={questiontype.points === 15} />\n                <label>15</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"20\" defaultChecked={questiontype.points === 20} />\n                <label>20</label>\n              </div>\n              <div>\n                <input type=\"radio\" name={`points${index}`} value=\"25\" defaultChecked={questiontype.points === 25} />\n                <label>25</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      // <div>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked value=\"Male\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n      //     <label>\n      //         <input type=\"radio\" defaultChecked={false} value=\"Male1\" name={`player${index}`} />\n      //             Hasana\n      //     </label>\n\n      // </div>\n\n      <Fragment>\n        <form\n          onSubmit={this.handleSubmit}\n          ref={(e) => {\n            this.form = e;\n          }}\n        >\n          <h2 style={{ textAlign: 'center' }}>Maths Race</h2>\n          <div>{playersetup}</div>\n          <div>\n            <button\n              type=\"submit\"\n              value=\"Start\"\n              // onKeyPress={(e) => this.startGame(e)}\n              // onClick={(e) => this.startGame(e)}\n              className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}\n            >\n              Start &gt;&gt;\n            </button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  //   questiontype: state.game.questiontype,\n  // starttime: state.game.starttime,\n  // endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  start: (playername1, playername2, questiontype1, questiontype2) => dispatch(ReducerActions.start(playername1, playername2, questiontype1, questiontype2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceSetup);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Classes from './DisplayMessage.module.css'\n\nfunction DisplayMessage(props) {\n    console.log('[DisplayMessage] render', props.display);\n    if (props.display === 'CORRECT')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n            </div>\n        )\n    else if (props.display === 'WRONG')\n        return (\n            <div className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n                <i style={{ margin: '5px' }} className=\"fa fa-times\" />\n            </div>\n        )\n}\n\nDisplayMessage.propTypes = {\n    display: PropTypes.string.isRequired,\n}\n\nexport default DisplayMessage\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport * as classes from './Backdrop.module.css';\n\nfunction Backdrop(props) {\n    if (props.show)\n    return (\n                            <div\n                              className={classes.Backdrop}\n                              onClick={props.clicked} \n                              onKeyPress={props.clicked}\n                              role=\"button\"\n                              tabIndex=\"0\"\n                            />\n                            );\n                            \n    return (<Fragment />)\n}\n\nBackdrop.propTypes = {\n    show: PropTypes.bool.isRequired,\n    clicked: PropTypes.func.isRequired,\n}\n\nexport default Backdrop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Backdrop from '../Backdrop/Backdrop'\nimport * as classes from './Modal.module.css'\n\nfunction Modal(props) {\n    if (!props.show) return (<Fragment />)\n    return (\n        <Fragment>\n                {/* <div id=\"myModal\" className={classes.modal}>\n  \n                      <div className=\"modal-content\" role=\"button\" tabIndex={0} onKeyPress={props.modelClosed} onClick={props.modelClosed}>\n                          {props.children}\n                      </div>\n  \n                  </div> */}\n\n                <Backdrop show={props.show} clicked={props.modelClosed} />\n                <div\n                  className={classes.Modal}\n                  style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0',\n                    }}\n                >\n                    {/* <i className={['fa fa-window-close', classes.Close].join(' ')} onClick={props.modelClosed} aria-hidden=\"true\" /> */}\n                    {props.children}\n                </div>\n\n        </Fragment>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    modelClosed: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/success.9e3ceb9f.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.a523fd75.mp3\";","export default __webpack_public_path__ + \"static/media/movingfish.b08d01f0.mp3\";","export default __webpack_public_path__ + \"static/media/click.8515d2a4.mp3\";","export default __webpack_public_path__ + \"static/media/claps.fd683cd7.mp3\";","import React, { Component, Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import useSound from 'use-sound';\nimport { Howl, Howler } from 'howler';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport Classes from './PlayerSection.module.css';\nimport * as Utils from '../../Utils/QuestionGenerator';\nimport DisplayMessage from '../../UI/DisplayMessage/DisplayMessage';\nimport Modal from '../../UI/Modal/Modal';\nimport successSound from '../../sounds/success.mp3';\nimport wrongSound from '../../sounds/wrong.mp3';\nimport movingFishSound from '../../sounds/movingfish.mp3';\nimport clickSound from '../../sounds/click.mp3';\nimport clapsSound from '../../sounds/claps.mp3';\n// // import PlaySound from '../../Utils/PlaySound';\n// import UIfx from 'uifx';\n\nclass PlayerSection extends PureComponent {\n  success = new Howl({ src: successSound, volume: 0.1 });\n  wrong = new Howl({ src: wrongSound, volume: 0.1 });\n  click = new Howl({ src: clickSound, volume: 0.5 });\n  movingfish = new Howl({ src: movingFishSound, volume: 1 });\n  claps = new Howl({ src: clapsSound, volume: 0.5 });\n\n  state = {\n    // filter: 'ytd',\n    // answer: '',\n    // answerresult: '',\n    closedisplay: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.correctRef = React.createRef();\n    this.wrongRef = React.createRef();\n    this.questionRef = React.createRef();\n    // this.inputAnswer = React.createRef();\n    // console.log('[PlayerSection] constructor');\n  }\n\n  componentDidMount() {\n    console.log('[PlayerSection] componentDidMount');\n  }\n\n  // shouldComponentUpdate(nextProps, newState) {\n  //     console.log('[PlayerSection] shouldComponentUpdate', nextProps.players[nextProps.playerno]);\n  //     // return this.props.players[this.props.playerno] !== nextProps.players[nextProps.playerno];\n  //     return true;\n  // }\n\n  componentDidUpdate() {\n    console.log('[PlayerSection] componentDidUpdate');\n  }\n\n  buttonTheme = () => {\n    return this.props.playerno === '1' ? 'w3-ripple w3-hover-indigo w3-indigo' : 'w3-ripple w3-hover-red w3-pink';\n  };\n\n  sectionTheme = () => {\n    return this.props.playerno === '1' ? 'w3-indigo' : 'w3-pink';\n  };\n\n  goClick = () => {\n    const player = this.props.players[this.props.playerno];\n    const correctref = this.correctRef.current;\n    const questionRef = this.questionRef.current;\n    const wrongref = this.wrongRef.current;\n\n    if (!this.inputAnswer.value) return;\n    if (+this.inputAnswer.value === +player.answer) {\n      if (player.points === player.questiontype.points - 1) {\n        // alert(`${player.name} Win`);\n        // this.props.reset();\n        this.success.play();\n        this.movingfish.play();\n        this.props.win(this.props.playerno);\n        setTimeout(() => {\n          this.props.complete(this.props.playerno);\n          this.claps.play();\n        }, 2000);\n\n        return;\n      }\n      // wrapper.style.visibility = 'true';\n      questionRef.classList.remove(Classes.ShowQuestion);\n      correctref.classList.add(Classes.MessageAnimate);\n      questionRef.classList.add(Classes.HideQuestion);\n\n      setTimeout(() => {\n        this.props.nextQuestion(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        correctref.classList.remove(Classes.MessageAnimate);\n        questionRef.classList.remove(Classes.HideQuestion);\n        questionRef.classList.add(Classes.ShowQuestion);\n      }, 1000);\n      this.success.play();\n      this.movingfish.play();\n      // new UIfx({ asset: successSound }).play();\n    } else {\n      wrongref.classList.add(Classes.MessageAnimate);\n      // useSound(wrongSound);\n      setTimeout(() => {\n        this.props.wrongAnswer(this.props.playerno);\n        // this.setState({ answer: '' });\n        this.inputAnswer.value = '';\n        wrongref.classList.remove(Classes.MessageAnimate);\n      }, 1000);\n      this.wrong.play();\n      // new UIfx({ asset: wrongSound }).play();\n    }\n  };\n\n  appendAnswer = (val) => {\n    if (val === '<') this.inputAnswer.value = this.inputAnswer.value.slice(0, -1);\n    else this.inputAnswer.value += `${val}`;\n    this.click.play();\n  };\n\n  render() {\n    const player = this.props.players[this.props.playerno];\n    console.log('[PlayerSection] render', this.props.playerno, player.answerresult, 'Points', player.points * (+player.questiontype.points - 1));\n    // const messagedisplay = (player.answerresult) ? <DisplayMessage display={player.answerresult} /> : <Fragment />;\n    const messagedisplay = (\n      <Fragment>\n        <div ref={this.correctRef} className={[Classes.DisplayMessage, Classes.Correct].join(' ')}>\n          <i style={{ margin: '5px' }} className=\"fa fa-check\" />\n        </div>\n        <div ref={this.wrongRef} className={[Classes.DisplayMessage, Classes.Wrong].join(' ')}>\n          {player.answer}\n        </div>\n      </Fragment>\n    );\n    // this.setState({ answerresult: '' });\n    return (\n      <div className={[this.props.playerno === '0' ? Classes._0 : Classes._1].join(' ')}>\n        <Modal show={!!this.state.closedisplay} modelClosed={() => this.setState({ closedisplay: false })}>\n          <span>Do you want to exit the game?</span>\n          <div>\n            <a role=\"button\" onClick={this.props.reset} tabIndex={0} onKeyPress={this.props.reset} style={{ margin: '10px' }} className={['w3-button', 'w3-round-large', this.buttonTheme()].join(' ')}>\n              {' '}\n              Restart\n            </a>\n            <a\n              role=\"button\"\n              onClick={() => this.setState({ closedisplay: false })}\n              tabIndex={0}\n              onKeyPress={() => this.setState({ closedisplay: false })}\n              style={{ margin: '10px' }}\n              className={['w3-button', 'w3-round-large', 'w3-grey'].join(' ')}\n            >\n              {' '}\n              Cancel\n            </a>\n          </div>\n        </Modal>\n        {messagedisplay}\n        <div className={[Classes.PlayerCharacter].join(' ')}>\n          <img\n            style={{\n              position: 'absolute',\n              transform: +this.props.playerno === 0 ? 'scaleX(1)' : 'rotateX(180deg)',\n              transition: '2s',\n              left: `${player.points * (90 / +player.questiontype.points)}vw`,\n            }}\n            alt={this.props.playerno}\n            className={[Classes.PlayerCharacter, this.props.playerno === 1 ? Classes._1 : Classes._2].join(' ')}\n            height=\"auto\"\n            width=\"100px\"\n            src={`${process.env.PUBLIC_URL}/images/Fish_${this.props.playerno}.svg`}\n          />\n        </div>\n        <div className={Classes.QuestionBar}>\n          <div>\n            <span className={[this.sectionTheme()].join(' ')}>\n              <span className={[Classes.PlayerName].join(' ')}>{player.name}</span>\n            </span>\n            <span style={{ position: 'relative' }} className={[this.sectionTheme()].join(' ')}>\n              <span className={['fa-stack', Classes.Score].join(' ')}>\n                <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                <strong className=\"fa-stack-1x\" style={{ color: '#000' }}>\n                  {player.points}\n                </strong>\n              </span>\n              <div>\n                <a role=\"button\" onClick={() => this.setState({ closedisplay: true })} tabIndex={0} onKeyPress={() => this.setState({ closedisplay: true })} className={Classes.Close}>\n                  <i className=\"fa fa-window-close\" />\n                </a>\n              </div>\n            </span>\n          </div>\n          {/* <span className={Classes.Question}><span style={{fontSize:'2.5em'}}>Emily has £46.20. She wants to buy a new e-book. It costs £20. How much more money does she need to Save?</span></span> */}\n          <span ref={this.questionRef} className={Classes.Question}>\n            <span style={{ fontSize: '2.5em' }} dangerouslySetInnerHTML={{ __html: player.question }} />\n            <input\n              ref={(e) => {\n                this.inputAnswer = e;\n              }}\n              onKeyDown={() => false}\n              onKeyPress={() => false}\n              onKeyUp={() => false}\n              type=\"text\"\n              maxLength=\"7\"\n              className={['w3-btn', 'w3-round-large', this.sectionTheme(), Classes.Answer].join(' ')}\n            />\n          </span>\n        </div>\n        <div className={Classes.ButtonBar}>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('1')} className={['w3-button', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            1\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('2')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            2\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('3')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            3\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('4')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            4\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('5')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            5\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('6')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            6\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('7')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            7\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('8')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            8\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('9')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            9\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('0')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            0\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('.')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            .\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('-')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            -\n          </button>\n          <button type=\"button\" data-playerno={this.props.playerno} onClick={() => this.appendAnswer('<')} className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnNumber].join(' ')}>\n            &lt;\n          </button>\n\n          <button\n            type=\"button\"\n            data-playerno={this.props.playerno}\n            onClick={(e) => this.goClick(e.currentTarget.dataset.playerno)}\n            className={['w3-btn', 'w3-round-large', this.buttonTheme(), Classes.BtnGo].join(' ')}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  // questiontype: state.game.questiontype,\n  // totalpoints: state.game.questiontype.points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // init: (playername1, playername2, questiontype) => dispatch(ReducerActions.init(playername1, playername2, questiontype)),\n  // start: () => dispatch(ReducerActions.start()),\n  nextQuestion: (playerno) => dispatch(ReducerActions.nextQuestion(playerno)),\n  wrongAnswer: (playerno) => dispatch(ReducerActions.wrongAnswer(playerno)),\n  win: (playerno) => dispatch(ReducerActions.win(playerno)),\n  complete: () => dispatch(ReducerActions.complete()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerSection);\n","import React, { Fragment } from 'react';\nimport * as Classes from './RaceComplete.module.css';\n\nfunction RaceComplete(props) {\n  const winner = props.players[0].points >= props.players[1].points ? props.players[0].name : props.players[1].name;\n\n  const players = [...props.players].reverse().map((player) => {\n    if (!player.name) return <Fragment key={player.id} />;\n    const score = +player.points - player.wrong + (winner === player.name ? 10 : 0);\n    return (\n      <div key={player.id}>\n        <h1>\n          {player.name}, {winner === player.name ? 'You won!!' : 'Opps You lost!!'}\n        </h1>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{player.points}</strong>\n          <span className={Classes.ScoreLabel}>Correct</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{-player.wrong}</strong>\n          <span className={Classes.ScoreLabel}>Wrong</span>\n        </span>\n        {/* <span className={['fa-stack', Classes.Score].join(' ')}>\n                    <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n                    <strong className=\"fa-stack-1x\">\n                    {0}\n                    </strong>\n                    <span className={Classes.ScoreLabel}>Time Bonous</span>\n                </span> */}\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{winner === player.name ? 10 : 0}</strong>\n          <span className={Classes.ScoreLabel}>Win Bonus</span>\n        </span>\n        <span className={['fa-stack', Classes.Score].join(' ')}>\n          <span className={['fa fa-star fa-stack-2x'].join(' ')} />\n          <strong className=\"fa-stack-1x\">{score}</strong>\n          <span className={Classes.ScoreLabel}>Total</span>\n        </span>\n      </div>\n    );\n  });\n  return (\n    <div className={Classes.RaceComplete}>\n      {players}\n      <button type=\"button\" onClick={(e) => props.reset()} onKeyPress={(e) => props.reset()} className={['w3-btn', 'w3-round-large', Classes.BtnGo].join(' ')}>\n        Play Again &gt;&gt;\n      </button>\n    </div>\n  );\n}\n\nexport default RaceComplete;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Race from '../../components/Race/Race';\nimport * as ReducerActions from '../../store/game/actions/index';\nimport RaceSetup from '../../components/RaceSetup/RaceSetup';\nimport PlayerSection from '../../components/PlayerSection/PlayerSection';\nimport * as Classes from './RaceWrapper.module.css';\nimport RaceComplete from '../../components/RaceComplete/RaceComplete';\n\nclass RaceWrapper extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[Racewrapper] constructor');\n    this.state = {};\n\n    this.props.reset();\n    // const questiontype = {\n    //     type: '+-',\n    //     nos: 4,\n    //     digits: 3,\n    //     decimals: 0,\n    // };\n    // this.props.init('Nanna', 'Hasana', questiontype);\n    // this.props.start();\n  }\n\n  shouldComponentUpdate(nextProps, newState) {\n    console.log('[RaceWrapper] shouldComponentUpdate', !this.props.players && nextProps.players);\n    return (!this.props.players && nextProps.players) || this.props.starttime !== nextProps.starttime || this.props.endtime !== nextProps.endtime;\n    // return true;\n  }\n\n  render() {\n    console.log('[Racewrapper] render', this.props.players, this.props.endtime);\n\n    if (!this.props.starttime)\n      return (\n        <div className={Classes.Race}>\n          <RaceSetup />\n        </div>\n      );\n    else if (this.props.endtime)\n      return (\n        <div className={Classes.Race}>\n          <RaceComplete players={this.props.players} reset={this.props.reset} />\n        </div>\n      );\n\n    const players = this.props.players.map((player, index) => (player.name ? <PlayerSection key={player.id} playerno={`${player.id}`} /> : <Fragment key={player.id} />));\n    // console.log('[Race] render', this.props.players);\n    return (\n      <div\n        className={Classes.Race}\n        style={{\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/underwater.png)`,\n        }}\n      >\n        {players}\n        {/* <div className={Classes.Divider}/> */}\n      </div>\n    );\n    // return (\n    //         <Race players={this.props.players} />\n    // )\n  }\n}\n\n// RaceWrapper.propTypes = {\n\n// }\n\nconst mapStateToProps = (state) => ({\n  players: state.game.players,\n  starttime: state.game.starttime,\n  endtime: state.game.endtime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(ReducerActions.reset()),\n  // start: () => dispatch(ReducerActions.start()),\n  // start: (playername1, playername2, questiontype) => dispatch(ReducerActions.start(playername1, playername2, questiontype)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceWrapper);\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDgKDrBQ_-BRnVOuUlqLd7hx1w0R9bBnrA',\n  authDomain: 'math-race-7ea5f.firebaseapp.com',\n  projectId: 'math-race-7ea5f',\n  storageBucket: 'math-race-7ea5f.appspot.com',\n  messagingSenderId: '793417309877',\n  appId: '1:793417309877:web:6764942ec5b237291a68fc',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// import { null } from 'mathjs';\nimport React, { Component } from 'react';\nimport firebase from './Config/Firebase';\n// import QuestionsDataService from './QuestionsDataService'\n\nclass Temp extends Component {\n  state = {\n    questions: null,\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    console.log('Loading...');\n    const db = firebase.firestore();\n    // const firebaseDb = db.collection('/questions');\n    // console.log(firebaseDb);\n    const snapshot = db.collection('/questions');\n    const collections = await snapshot.get();\n    const questions = [];\n    collections.docs.forEach((item) => {\n      const question = item.data();\n      questions.push({ id: item.id, ...question });\n      // Object.keys(question).forEach((key) => {\n      //   console.log(`${key} - ${question[key]}`);\n      // });\n    });\n    console.log(questions);\n    this.setState({ questions: questions });\n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n    // const snapshot = await firebase.collection('questions').get();\n    // const questions = [];\n    // snapshot.docs.forEach((doc) => {\n    //   questions.push(doc.data());\n    //   console.log(doc.id, '=>', doc.data());\n    // });\n    // this.setState({ questions: questions });\n    // console.log(`Loaded${this.state.questions[0]}`);\n    // // const firebaseDb = firebase.collection('/questions')\n    // // firebaseDb.settings({\n    // //   timestampsInSnapshots: true,\n    // // });\n    // // const snapshot = await firebaseDb.collection('questions').get();\n    // // snapshot.forEach((doc) => {\n    // //   console.log(doc);\n    // // });\n  }\n\n  render() {\n    if (!this.state.questions) return <p>Loading....</p>;\n    else {\n      const wrapper = this.state.questions.map((question, idx) => {\n        return (\n          <p key={question.id}>\n            {question.question} - {question.answer}\n          </p>\n        );\n      });\n      return <div>{wrapper}</div>;\n    }\n  }\n}\n\nexport default Temp;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RaceWrapper from '../containers/RaceWrapper/RaceWrapper'\nimport Temp from '../temp';\n// import { Route, Switch } from 'react-router-dom';\n\nfunction Layout() {\n  // console.log('[App] render');\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={RaceWrapper} />\n      {/* <Temp /> */}\n    </Switch>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\n// import { Route, Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\n// import YahooReader from './containers/YahooReader/YahooReader';\n// import Toolbar from './components/Layout/Toolbar/Toolbar'\n// import TempWrapper from './Containers/TempContainer/TempWrapper';\n// import LoadDataComponent from './Containers/TempContainer/ListExample/LoadDataComponent';\n// import TickersContainer from './Containers/Tickers/TickersContainer'\n\nfunction App() {\n  // console.log('[App] render');\n\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// import * as indexDB from 'idb-keyval';\nimport * as actionTypes from '../actionTypes';\n\nconst questiontype = {\n  type: '+-',\n  nos: 2,\n  digits: 2,\n  decimals: 0,\n  points: 10,\n  inwords: false,\n};\nconst player = {\n  name: null,\n  points: 0,\n  wrong: 0,\n  question: null,\n  answer: null,\n  answerresult: null,\n  questiontype: { ...questiontype },\n};\nconst initialState = {\n  starttime: null,\n  endtime: null,\n  // questiontype: {\n  //     type: '+-',\n  //     nos: 3,\n  //     digits: 3,\n  //     decimals: 0,\n  //     points:10,\n  // },\n  players: [\n    { id: 0, ...player },\n    { id: 1, ...player },\n  ],\n};\n\nconst reducer = (state = initialState, action) => {\n  // console.log(action.type)\n  console.log('[reducer]', action.type);\n  let players = null;\n  switch (action.type) {\n    case actionTypes.RESET:\n      return {\n        ...state,\n        starttime: null,\n        endtime: null,\n        // players: null,\n      };\n    case actionTypes.START: // Set Names and question actiontype:{} players:[{name}]}\n      // action.players.forEach((player, index) => {\n      //     players[index] = { ...players[index], ...player }\n      // });\n      return {\n        ...state,\n        starttime: new Date(),\n        // questiontype: action.questiontype,\n        players: [...action.players],\n      };\n    // case actionTypes.START: // players:[{question,answer}]\n    //     players = [...state.players];\n    //     action.players.forEach((player, index) => {\n    //         players[index] = { ...players[index], ...player }\n    //     });\n    //     return {\n    //         ...state, starttime: new Date(), players: players,\n    //     };\n    case actionTypes.CORRECT:\n      players = [...state.players];\n      players[action.playerno].points += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'CORRECT';\n      return {\n        ...state,\n        players: [...players],\n      };\n    case actionTypes.WRONG:\n      players = [...state.players];\n      players[action.playerno].wrong += 1;\n      players[action.playerno].question = action.question;\n      players[action.playerno].answer = action.answer;\n      players[action.playerno].answerresult = 'WRONG';\n      return {\n        ...state,\n        players: players,\n      };\n      case actionTypes.WIN:\n        players = [...state.players];\n        players[action.playerno].points += 1;\n        return {\n          ...state,\n          // endtime: new Date(),\n          players: [...players],\n        };\n    case actionTypes.COMPLETE:\n      // players = [...state.players];\n      // players[action.playerno].points += 1;\n      return {\n        ...state,\n        endtime: new Date(),\n        // players: [...players],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport gameReducer from './store/game/actions/reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}